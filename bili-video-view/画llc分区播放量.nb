(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    531059,      10124]
NotebookOptionsPosition[    527407,      10063]
NotebookOutlinePosition[    527766,      10079]
CellTagsIndexPosition[    527723,      10076]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"nn", "=", 
   RowBox[{"{", "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<\:52a8\:753b\>\"", ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.5, 0.5, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.33333333333333337`, 0.33333333333333337`, 0.6666666666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          "RGBColor[0.5, 0.5, 1]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[0.5, 0.5, 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0.5, 0.5, 1],
        Editable->False,
        Selectable->False]}], "}"}], ",", "\n", 
     RowBox[{"{", 
      RowBox[{"\"\<\:756a\:5267\>\"", ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.5, 0.5, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.33333333333333337`, 0.33333333333333337`, 0.6666666666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          "RGBColor[0.5, 0.5, 1]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[0.5, 0.5, 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0.5, 0.5, 1],
        Editable->False,
        Selectable->False]}], "}"}], ",", "\n", 
     RowBox[{"{", 
      RowBox[{"\"\<\:56fd\:521b\>\"", ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.5, 0.5, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.33333333333333337`, 0.33333333333333337`, 0.6666666666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          "RGBColor[0.5, 0.5, 1]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[0.5, 0.5, 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0.5, 0.5, 1],
        Editable->False,
        Selectable->False]}], "}"}], ",", "\n", 
     RowBox[{"{", 
      RowBox[{"\"\<\:97f3\:4e50\>\"", ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          "RGBColor[1, 1, 0]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[1, 1, 0],
        Editable->False,
        Selectable->False]}], "}"}], ",", "\n", 
     RowBox[{"{", 
      RowBox[{"\"\<\:821e\:8e48\>\"", ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          "RGBColor[1, 0.5, 0]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[1, 0.5, 0],
        Editable->False,
        Selectable->False]}], "}"}], ",", "\n", 
     RowBox[{"{", 
      RowBox[{"\"\<\:6e38\:620f\>\"", ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          "RGBColor[1, 0, 0]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[1, 0, 0],
        Editable->False,
        Selectable->False]}], "}"}], ",", "\n", 
     RowBox[{"{", 
      RowBox[{"\"\<\:79d1\:6280\>\"", ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0, 0.5, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->RGBColor[0., 0.33333333333333337`, 0.6666666666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          "RGBColor[0, 0.5, 1]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0.5, 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0, 0.5, 1],
        Editable->False,
        Selectable->False]}], "}"}], ",", "\n", 
     RowBox[{"{", 
      RowBox[{"\"\<\:751f\:6d3b\>\"", ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->RGBColor[0., 0.33333333333333337`, 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          "RGBColor[0, 0.5, 0]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0.5, 0]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0, 0.5, 0],
        Editable->False,
        Selectable->False]}], "}"}], ",", "\n", 
     RowBox[{"{", 
      RowBox[{"\"\<\:9b3c\:755c\>\"", ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.5, 1, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.33333333333333337`, 0.6666666666666666, 0.6666666666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          "RGBColor[0.5, 1, 1]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.5, 1, 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0.5, 1, 1],
        Editable->False,
        Selectable->False]}], "}"}], ",", "\n", 
     RowBox[{"{", 
      RowBox[{"\"\<\:65f6\:5c1a\>\"", ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 0.5, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666666, 0.33333333333333337`, 0.6666666666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          "RGBColor[1, 0.5, 1]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[1, 0.5, 1],
        Editable->False,
        Selectable->False]}], "}"}], ",", "\n", 
     RowBox[{"{", 
      RowBox[{"\"\<\:5e7f\:544a\>\"", ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 0.5, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666666, 0.33333333333333337`, 0.6666666666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          "RGBColor[1, 0.5, 1]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[1, 0.5, 1],
        Editable->False,
        Selectable->False]}], "}"}], ",", "\n", 
     RowBox[{"{", 
      RowBox[{"\"\<\:5a31\:4e50\>\"", ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 0.5, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666666, 0.33333333333333337`, 0.6666666666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          "RGBColor[1, 0.5, 1]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[1, 0.5, 1],
        Editable->False,
        Selectable->False]}], "}"}], ",", "\n", 
     RowBox[{"{", 
      RowBox[{"\"\<\:5f71\:89c6\>\"", ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 0.5, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666666, 0.33333333333333337`, 0.6666666666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          "RGBColor[1, 0.5, 1]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[1, 0.5, 1],
        Editable->False,
        Selectable->False]}], "}"}], ",", "\n", 
     RowBox[{"{", 
      RowBox[{"\"\<\:653e\:6620\:5385\>\"", ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 0.5, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666666, 0.33333333333333337`, 0.6666666666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          "RGBColor[1, 0.5, 1]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[1, 0.5, 1],
        Editable->False,
        Selectable->False]}], "}"}]}], "\n", "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7324466132656937`*^9, 3.7324466138539495`*^9}, 
   3.7324477001233053`*^9, {3.73244801486754*^9, 3.732448053689856*^9}, {
   3.7324481000237083`*^9, 3.7324481078420086`*^9}, 3.732448428614874*^9, {
   3.7324484746185055`*^9, 3.732448654993147*^9}, 3.732449513023709*^9, {
   3.7324498590241566`*^9, 3.7324498698845205`*^9}, {3.7325502625238314`*^9, 
   3.7325502691595526`*^9}, {3.732550340088992*^9, 
   3.732550348813883*^9}},ExpressionUUID->"0d1d5bd7-d4f6-4c3c-9aa2-\
f77dd60c18cb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"d", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Import", "[", 
       RowBox[{
        RowBox[{"\"\<llc//\>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"nn", "\[LeftDoubleBracket]", 
           RowBox[{"#", ",", "1"}], "\[RightDoubleBracket]"}]}], "<>", 
         "\"\<.csv\>\""}], ",", 
        RowBox[{"CharacterEncoding", "\[Rule]", " ", "\"\<UTF-8\>\""}]}], 
       "]"}], ")"}], "&"}], "/@", 
    RowBox[{"Range", "@", 
     RowBox[{"Length", "@", "nn"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.732446476724537*^9, 3.7324465546623726`*^9}, {
   3.732446636452659*^9, 3.7324466419323854`*^9}, 3.7324475986490965`*^9, {
   3.7324477047316694`*^9, 3.7324477064396667`*^9}, {3.7324482893901277`*^9, 
   3.732448328478834*^9}, {3.7324483776225634`*^9, 3.73244841260441*^9}, {
   3.732448670104579*^9, 3.732448674796382*^9}, 3.7325500837269015`*^9, {
   3.732550280931353*^9, 3.7325502996655083`*^9}, {3.7329532202603207`*^9, 
   3.73295323669827*^9}, {3.7330579119622154`*^9, 
   3.7330579135474095`*^9}},ExpressionUUID->"2d524560-4d39-4a90-9328-\
283ca6b02590"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<totalview.csv\>\"", ",", 
   RowBox[{"Table", "[", "\n", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"d", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "j", ",", "1"}], "\[RightDoubleBracket]"}], "}"}], 
       ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"d", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", "j", ",", "3"}], "\[RightDoubleBracket]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "@", "nn"}]}], "}"}]}], "]"}]}], "]"}], "\n", 
     ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "2", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"d", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        "]"}]}], "}"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.732952846055808*^9, 3.7329529171807823`*^9}, {
  3.732952966325008*^9, 3.732952984857563*^9}, {3.732953035366004*^9, 
  3.732953089380104*^9}},ExpressionUUID->"fefe1324-e69b-45c6-b88f-\
fe04e2cd86a4"],

Cell[BoxData["\<\"totalview.csv\"\>"], "Output",
 CellChangeTimes->{3.7329531001581697`*^9, 3.7329532472335978`*^9, 
  3.733057932494195*^9},ExpressionUUID->"0a53494f-ae36-40a7-8ea7-\
0a0731cbb1c5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"j", ",", 
       RowBox[{"d", "\[LeftDoubleBracket]", 
        RowBox[{"i", ",", "j", ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "@", "nn"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "2", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"d", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
        "]"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"nn", "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"GridLinesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Gray", ",", "Thin", ",", " ", "Dashed"}], "]"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.732447687150583*^9, 3.7324476898021326`*^9}, {
   3.732447775729393*^9, 3.732447806502309*^9}, {3.7324478560203066`*^9, 
   3.732447884382015*^9}, 3.732448902092758*^9, {3.7324489445790095`*^9, 
   3.732448970267458*^9}, {3.732449046428176*^9, 3.732449118864751*^9}, {
   3.7324491995053368`*^9, 3.732449294879995*^9}, 3.7324493754164505`*^9, {
   3.732449428503233*^9, 3.7324494918636084`*^9}, 3.7324495347919474`*^9, {
   3.732550418457445*^9, 3.7325505131616936`*^9}, 3.7325505671319838`*^9, 
   3.7325518364706693`*^9, {3.732555727568221*^9, 3.7325557278666987`*^9}, {
   3.7325560043698483`*^9, 
   3.7325560560751176`*^9}},ExpressionUUID->"83a94410-a828-4c14-831e-\
90ca12e3f75a"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
L3oB9k8bVPYN//7jvG1qOdGLkbdYV4+OQf/ePm70MrhWjza0VtTv70mvhC3N
+tGxOM/vcoPpNeh/eHE8rcN979ZbQK9H3iZwBR2H573n3RY6HvN/L9xNJ2B+
qzsH6C1w32rn6ETMD0m8RW/HfS+O+ETrsa/h99/0LvhZ5QqF/PuP/Tdv16T3
wnXj3ehkPP8zjTrR+7HfT+pPp+C8CwzB9CHkV8tMpQ3oH9R3Ln0U5z09N4ZO
Rf/YkRvoE9h/deABOg1OiE6nT+P86s3X6HTMP7f2KX0W+dVrhbQR8+1MP+gL
eD7nJlV+y7//8NTe9ejL+P1pZ3jQmdg/pUsP+irm1WnSn86Cr6mG0tfR32XK
aNqE8yzfN5W+hXk3kmfS2XgefVMX0jnoP3lWS+ei39xnI30fnpW3g87D8+6V
tp9+hOeR0P4IbYbL+5+mn2LfrX8z6Hz0y6S36Re4T8idR3QBzjO5oYV+LXKP
L3ShuL/HT/od5n80lXnHv//YH+BRhf6IfOLtOnQR9m/e2IL+Iv4en1XQxbjv
C4uS/o7n56D2oUtg9aXB9C/xftqMoiV7re+3ZtOJdGmr9fExs2k7q9VHn2jp
csjjjq2j7a1WnozaTFe02nyu6W7aAfmyp0doR6uNtXZm0lLMf5N0h66G+r8e
PKOdkCufvKNrIg959Jl2Rl5yTfKef/8xX5NblXZBXu66C10f9zVMbEnLcF7H
SAXdEPPP3+lBu6K/1Vk/uonVmqodBtJuVkuO/xhON8d87fQJtAfyDOU8uiXy
Pp/X0XJ492Y93Qb1S+cZaE+cz/16Ot0e+1uNz6IVqH8w6B7dCecP/FRAe+F9
HRjyme5qtWpKocTCv/+Y/7OKPd3DakO/E460t9VyP1l1ujfmDR5Rh/bBeTae
k9G+Vuua7G1K++H53bzmTvtbHbEzsRWtstrysJ4nHYDzlKnSiQ7Eeb5VV9JD
sH+/e186CP5+wJ8ejvtlzB1EB1st9T02lB6JfXdkI2g1znfSPJoOsdqkWD+e
DsXvqW6bKfQ4PO8tj2bRYah3+F9N9R5PdZrHAdzIENNI0V3YptUkyUolExGp
MCqVKSGZLmolTbGG4oxLnW0iK8mrkTmJQ8hglDJGQiVZoZMkuW2JRkZuCbH7
+/jsn+/X8zzf53t5zvlZBNMHkc/IrjDaC+dbdMW0N+aTuDuC9kE8B/9o+juc
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
/F/Uo0Ng
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
I/q1TXtJOyHf5cw3WoH8b0//yOH3j7j5ej/aBZ7j/DftCgcfW0YrMf/lRZto
N1i3+STtjvxwx9EP+f0j3nzDJFqFeK7/BtoT864KPE57Yb63ldJobzjb8zKt
Rn2D4Ju0L3yn93vaHx46vIQejfO/9amXy+8f8fU9OtMBiGc59qQD4anthtBB
OD93+HBai3mdbOfRIfDECYvpUNR7ndhFh6F+9ZgztA522n2FjkD95uQsOhI2
1cqho5CvP/md1sNDU/54xO8f+xze15COgQtHdqZjxfrOXWkD5iu81o+Ogyvc
HkbHw9GGYDoB9anf59BGxPdPjqaTMO8gzWE6BfEG4UfoVMQr3zlJm2BV53N0
OvKdRufQGZi/n+UpnYl810E/aDPyd2hqPOb3j/xnt+rS2Zi3zU5nOlf8vW9o
QVvE93TtReehPrW/N12A8z4cnEcXwpuKd9JW1N+duY8uEn9fnol0MeJVjyXT
Jeh/0+UqLdsl2MvlJm0Dv3tVQNsKNjU/LXvC7x/+26sCLRcsW9tcTjuI9bkO
tCPyN59pSjshXqhvTisE60pu9aad0e+f72NoF+SfPjWRdoV/XZtGK1G/7HUw
7YbzRn1eSrujX+9jK2kPuNHRA7QKfj7qHO2J+iuNr9Be6D9Vbqa9EZ81KYtW
o77BnLe0L+bbHPqR9hdsSPWrYOH3L1hxxt+O1iB+4ImcDkC/QTX+pANx3vHf
pQ5CfO6i1rRWsGZ0tbZ0iGDL7l496VDMP/5GHzoM+Y8C+9E65B8+N4COwPxr
RnnTkYhPfVzqKMy7KMuH1mO+nncG0dHIH7RsCB2DeU8Gj6Vj4TUvp9MGzHe5
3Uw6DvM1HBtBx2Oe8aPW0Ani7yE0mjain/1RA50Ej9EeoFPQ36NqAp0K/9x5
lDZhn9nv0uh07GNoe57OgNO/ZNCZ2C+gwg3ajHkrff9BZ6H/6KSKT/n9Y57q
O8bSuYhXujSLtiB+89JcOg/7ZfuG0wWYr1nvg3Qh6mWbztBWzJN8NI0uQv5+
01m6GPHcw1fpEsQNf9+kZQZhv6w19+iygmXDWzyibQRr+rx/RpcXbKhxM4+2
FWyxt39JV0K/I6EVn/HfC/QLdrWnqyBumlGDlgvWfVhRi66O+M72f9EOiPfJ
rUfXFKw659eAdsR8lbUt6TrIfx7gQTvh/NslPel6mP/VsYG0QrCi0ZqhdEOc
H/OXH+2M/MRLpW4Cu10cT7tgf8f3AXRz1C/LnUa7wmUezqBbYf6a/8ymlag/
Wnku3Rb5Xkvn0W7Id169jO6A/LgfkbQ74sau6+jOqHeu8Q/tgfjd+5vobrif
Dvu20Crsfzkhhu6J/Jnue2hPxI+fjaP7wO1mHqK9ME/C+CN0f9x3lONx2hvx
e64naB+4U0Gp1Xi/1L1p9BDcb5HbOdoX+Q/kl2g/uMuKK7Q/ztuSdp0eifph
a27So5Ef6mqmx+K8i3Mf0Rrcx5hNT+kJ8Ja4QjoA/X/OsNKT0X+/8gsdiPu2
ty2mp+G8tNO1n/Pfa8Sr2Damg3G/lk0utBbnPb3Yhp6F+kZr3egQ3Peujx3o
ucivsNmdDkX/34070Quw3xeP/nQY6qduD6TDxff8Fk3rsE/4v1vopdjX8eo2
OgLz6AwGeoX4+7bspiPRL/nUKXo16t+cv0hHYZ6K617Q6+C4Afm0Hm5reklv
wHnWXq/paPRzO/mG3oz8LteK6Rjx951TMU/0NtQ/2dCIjkX+2+mN6Z3IX3K1
KW3A/pN6N6f3IL9ocF86Dv1eOvjR+8XvefxkOh77d6sYTh9C/05b1tIJyB9S
cT2diPcrWzuaNmK/Bd9KfRznz+u0m05Cvkx3lD6JeQf1u0ynoH7HwAz6tPje
6it0KubPv59Jn4VPhtylTfC7tOf0edQ7Nv9Ep+O8s1fkL0RfwnndvavRGZiv
1ega9FXk71PXpDNxH1Vr1qJvIH/EtCa0Gec5XWlP30b/1Ov96CzULwzsT9/D
fa76NYDOxnl9JvvQOahv9azUuai/v2wk/RjxMY7TaIv49+vHYvoZ+mnKLKXz
UN/bsIzOx/w+Pwx0AebZrt1Dv8Y+crcjdCHOu9n4NP0O/pWXSVvF/X7foD9i
nhNyM12E/PBht+kv6P9y2hO6GPlDt7ymv8M1GxXTJZgvdJ5dvuhfmL/L3Wq0
bLew74w/Heiygk3HGtWkbQQr+ilr0eURP65sSNsiHh7Wmq4kWGWI6kHbCdYk
p/Siq+C8M/s8ablgS5uQvnR11Lf5XmoHxJdlDaFrCtYNmTWedsQ8Hw/Mp+sg
//TshbSTYFmP72F0PeQPyNlKK3BeQfY2uiHmO/xwH+2M/SzuRroJ9llTzUS7
wFculro58gtenKNdcf6GVTfpVuL9jc6mlZh36cgXdFv0+2/2Z9oN9Y9DK73k
33/0N/+wp93RT77cge6M/Gmn2tAe6Nc9VE13g3c1mkqrcJ8d1cF0T/R3P6yj
PXE/3RovofsgbnU00F6Y33hzL90f8bAbp2lvxL9/y6B9MN/m6Lu0GvmFS/Lp
IcgvrPyK9sX59Y0/aD/Ex6X+ov1h//XVC/j3H/0P1apPj8b9dDqgpMfCI8uq
aA3239ijJz0B738syo8OQL8aNUbSkxF3ejmODsT5cZVn0NNwv7X9w+gg5D/p
EEkHY9+K8jW0FvuN3L2DnoX6OV7JdAj61559iZ4LLyl4SIein3JbAb0A/e5v
+0yHod8/Xb7T4Zinu6LSK/79x36/2srppeh3v0pDOkL8fXdpQa/A/Tn7dqQj
cX8nf3nSq8X7ftiXjkJ9/uQR9DqcF9t4PK1H/HbnefQGnH+w4mI6GvleJ1fR
mxE/fCGGjsF5e8dvpbchv6vuAB2L+Od3CfROzNvz+FnagH67Ol+k9yD/fdJt
Og7zFTx6TO9Hf5nrCzoe9zkq+Ad9CPf/6EC51/z7j/P+1NejE2G72o1pI/qV
dFTSx3Fe4ysqOgnzlM/rQZ+E11QcRafAq2wm0KexT5uMEDoV89xaHEafxfnD
fkXSJpy38/NG+jwctCuaThf/vboVR1/CvDH2h+kM7P+w3Gn6KuKdTl6gM3H+
gr2X6RvoH6i8S5uRHzfzAX0b/aoOf01nYV7PU+/oe8g/tf0XnY1+CdVs3vDv
Pzxsm5zOxfyfdPXox6jP09SnLYh/c3annyHe+mZnOg/z99w3jM6H33uMowvw
PQ6esoV+jft/FplIF8I9RqbQ77BPpSoXaSvOfzHmNv0R/mvOC7oI9cPVhfQX
3E/GVnkh//6L3+c4Z/o76tu7N6VLMG89WSv6F+y3242W7RHmb7qqK11WsOpV
d2/aRrBpR9e5dHnBhvBdK2hb5Df6K4quJFh2rnA9bSdY96bPZroKzjuRsoOW
oz7p4QG6Ovq3/TODdkD9t8x7dE3kZw9/QDvivLDZj+g6ghX9ffJpJzj+0Tu6
nmDNEv8iWoF+O75Veyu6IeYL7VyPdkZ+1doN6SaYr0VCY9oF+ceHtqKbY54P
a9vTrshfWNCFboV50jNH0Erk91RPptuiX6WFgbQbPHdgEN0B+ZsqzaLdMd/i
maF0Z7hsrcW0B+z1bCvdDf1WdNpPq7D/u2bxdE/Bpt/tDtOeOO/bxzS6D+rr
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
Q747Zmbpecwv3WSOXsT7Wnvk//4fwT6FJA==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
E7pCrT9Tc6Xqb/al3er+NvnRVSr/fKdkvn91n793pmvU96XrQuvWYJ5162kP
2BH9Le0p7CXsDScv0OwD677/mfYV9hPWC/sLBwgHKp/QbIDdSU46CDY91BwM
O6/1WsL3L2xU+2nYmw5V/Y4Y6TDYHt2HDodzlobSJth35rt0hFr/nOZI5SVD
6SjY5h9Bm+FCn2F0DBwcOpyOFY5T6+/xXcr3D0emJdHxwgnCicJWNc+dhXSS
ikel08kqfjCDTlH7jV9P2+CA+QfpNDhv/iE6Xe0/upDOELYLZwpnwZbpRXS2
cA7s+kRzLmx87jSdJ5yv7nvcGdqh5l2suQA2ZHZfxvcvXCTsVPv360EXwwl9
+9Il6jwfDqRLhV3C5XDspXC6Qq3nZaIrYc+KobRbuAouGfM+XS1cI6xLf9oe
sKdtOO0p7CXsDdtrHtI+cMWQL1P4/mF34w20n7AednTR7C8cAGdVag6E9b1/
pA3CQWo/BefoYNgUW0yHCBuFQ5U9r9BhcGRHzeHCJti5YcByvn/hSNj2xjo6
CnbFfEWbhWNU/hTNsSreJ4OOE7YIxwsnwIVWzYmw8d0NtFU4SThZ7eerf+kU
YZtwGpw8+NkVfP/CGcJ22DrzOToTNsd8TmcJZwvnCOcK58EWm+Z8OOGVPbQD
rn656Rd8/8KFwkXq+4xtSzvhsIMBdLH6/pcMo0tg7wnD6VJhl3C5mj91DF0B
++5dSFeq76PvPtotXKXu+4+jdLXaf7Mf6Rph3dqn7QHbPn/exvcPx12rT3vB
Dt0LtLdyU80+sH6xN+0LBw72of2E9cL+cECC5gDhQDjCodkAe1b0o4OEg2Fn
z1A6RNgIWzu/S4fCCS8OoMNgr8maw+G8CQNpk3CEcCTsvq05CjbsHESbhWPg
8C4z6VjYHPUZHafua9sC2qLmW7mYjod9LmhOEE4UtgonwWmn9tDJwimwX0ku
bRNOg0OqNacLZ6jz2XyGtsNFzYvpTDj9j0t0Fhzm1pytzuu93+gcWHdLcy4c
v+QhnQcH3XtM58PFCW1X8v3DWWdfpwvg4PRAuhCuOWeli1S/IN9Uvn/YN+kV
uhgu/V9bukS4VL2PtADapeZ1ai6HY71fpyuUz3ajK+GcjRG0G06eMoOugqNe
+IiuVt9LnU/oGjXvcs26dbVOiJpDe8COKZo9hb3ggEVJtDccN/f+Kr5/2MP5
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
XhlCR2G9sW1H0tHoFxk/kTbDG8fOpMej3+Ohe+gY1LfufoCeqM4ruICOhW/s
v0BPxvoZ/12j4+A/hzygpyG/63cev/H3Hw7I607PxPo9Tvel4xGfURROz0bc
UfM+nQCXTf2QnoP1FoTNohMxf/NTc+h5yC/5NZe2Ij7j2FF6AVy36hSdhH5/
5ZbQi+BXqsroZPRb8mclvRT1Nw5U0Slqvw+7lPL3H/m/e/akbchfNTSUTkX/
o4/fpdOQ38gcQa9G/vQh4+h0xB9OnkKvQ713v810Btbf93EOvQHxDdv30XbE
W7uP0pvQ/9iHv9CZ6vvfcpnegvXcvn/TWfCHL7X5nb//yJ8yriudjf5vTHyL
3oH1D07oS+fA09IH0bvR7+fpo+lc1F99bwK9Fz4zOYvOQ/749rvoA+i315ZH
5yP/r8VH6EOYL3vDT7QDnnT6PH0U/Vb+UUYXqPfteuYyf//V+x76Il2ozn99
Y/ok4qua6Okitf/JgfQZ5N/8sifthIPmhtFnMc+t89F0MepnbptAX0A8Pmoa
XaL2c+Vj+hL6TehgpUvhqcuX05exn2ZNV9Mu9L8zM5suQ7+3go/Q5aj/+qPT
9HW407O/0hXIz/v2Kn0T/V903KYrkX/k5mP6Fjz7a68/+PuP/Hq7feg7mOef
klfoKsRPHWtF34dznG/Q1ej3gyWUfqTy80bSNZhve/5k+on6e1pnBq37ttZx
WbPpOrW2Fj+aT3vU2nFv/VK6bq11860ZtCfqew3YQtdH/cqWB2gvxMdVHKEb
oL5g6gnaG/ld25yhGyG/ac8LtA98OvUW3Rj1179/TPvW2n5qh5eLv/9w0O8N
ab9a61sefZlugfqkNc1pPfa37GIrulWtXWd7tKf9sX7Fiz3pNojb/gulA9B/
h3c43Q7991kH04G1Nh+tE0F3gMdbImkD8ud0Hkd3Rnzd/Ml0EBxfbzbdDfO+
f3oOHQybjHPpHpj3pf/m0yGIX7+9mO6F81m0cgVtRPylPWvpvljvVNOtdCjc
c+Z2+h3cV8rMHDoM6w1fu5segP7Gf/bR4chf+uphejAc9d0J2oT+r9nO0kMx
z6+xF+kInPey1r/Rw1Efe+UyHYnz+7hfGT0K7hlwnY7CPObcSjoa/c8/uEOb
4VG+9+nxmOenQQ/oGPjiuWp6ItZ/8fFjOhb3v7brM1f4+495Pxldj47D+gdL
vehpyB+81Zu2IP9hUUN6Jtb7YI0PHY/5Av9pTM+GQxOa0gnYb2OPV+k5iA99
sy2diPu58FE7eh7yw395g7Zi/ZMdO9ALUD98USc6CfNYzgTTi9Av+rledDLO
Y390KL0U/WPK+tMp6Let7rv0CpzHhE0DaBvWb5gfTqei34VdJjoN8SMzR9Cr
MU9wr2g6Hef5jyGGXof5AvrH0hmoT5o5hd6A+Wa1nE7bkd/1wCx6E/z8nx/T
mZgnbfpcegvW79TjMzpLfZ9/JNPb4I0TltHZ6nv94Qt6B/a/t2oVnYN5ovqk
07sRP6RbT+fCR7/7mt6L/MgZm+k8nO+Ijt/QB5BveHYrnY95/wjdTh9C/e79
ObQD830wfR99FPs/uOYAXYD6sfMc9HGc9/xXjtKFyN/S9hh9Ev0vzD9JF+E8
3ur5M31G7fewi3ai/+Hscvos5u/1UwVdDNdZ9Bd9AfNO3n6LLkH9vXP/0Jcw
z0efPaRLkW/29Cjj7z/ije11aRfOb8Gw5+kyzDchtz5djvVbfPMifR3rHfjN
m65A/xsnm9A34ZJ3A+lK9PN83IW+hfo257rRbpznnr+703dwXsf1IXQV5vu6
aV/6PvpPK3mbrkb8Z+N79CP0X2mMoGsQ/7F0JP0E8f2HRtO6rNp+w5ua6Tq1
duz4Job2QHzlvcl03VrrE9Lm0p61tk87aKXrw6YlSbQX6lc0WUI3QH3wc8tp
71ob77+RSjeqtW5p/jrap9auEX9l0Y1Rf+XqNtoX1v+7nW6G9d19d9J+tTa/
+uEuugXifvu/p/XY77+Lf6BbYf2U+CLaH/0bXzlDt0G/Jenn6ADMF3HgPN0O
+a+XXKQDsX/z+Ut0B8SzDrpoA9avE3Kb7gzfaP8PHYR532h9j+6G9faffUAH
Iz/96EO6B9bLuPIfHYJ590U8f5W//8g/1L4JbUT/uj2b0X1xH5/mNKdDkb/q
j5b0O+j/5Wet6DDU//ZBW3oAvOifDnQ4PGd2L3ow5i8uMNImuMXxAfRQzNv/
9CA6AvHCGyZ6OOZxznyfjsS8We1H06MQ7/vjJDoK8RTPqXQ07vfM1em0Gfdx
s2IGPR7xSb1n0THYb9bl2fREzLPXlkjHIt51aAo9Gfv95RcbHQd3WrOKnob1
Gmavoy2Yr2DCenom3DbSTsdjvfDnv6FnY70hGdvpBOy3pHwPPQf5Nz7MoxOx
/vryA/Q89F/S8CBthTe95KAXID915490Eu6jW8cz9CKcT/Cnv9DJyL855jy9
FPNE/1FCp8D5f16iV2C+/436nbYh7h5YRqciPq5OJZ2G89r36V16NdZfO+YB
nY75vwt7RK/D+WwdWUNnYP6vz+rK+fuPft/e8qDtWL8gz4veBCd2bkRnIn/W
MB96C/pve74JnaW+x8Rm9DbE789pSWdj3q6ftaF3YJ6OsQY6B96W25XejX67
Z3Snc3EeCz/qSe9F/2mtetN5yG9cvy99AC7b0Y/Ox/xNjUPoQ5in0/73aQfO
r6TlMPoo5uljGEEXqL/nTUbSx+GV9aLoQsw3dpeZPon6/H1T6CLM83ncdPoM
1vvllRm0E/t5/9RM+iz8y7+z6GLMaxs0m76A/gOXJNAlWL9N3uf0Jfhbr8V0
KfzakmT6MvrPbbGUdmGeZ45pLkP/io+W0+XwvAU2+jr2/3aXr+gK9HOYvqZv
wl797HQlzv+/fzbSt3Ae7RM3027E+8z7hr6D+Afx39JV6Ddg6E76PvKvPtxF
VyN//trd9CP4lG4PXYPzWzlS8xPUv/zB//v/AOKPBNE=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxc1XFcy2sbBvAhhBA6nZDOdJIQhtAhDEkSJiGEIYQwhBCGUIQhhDAJHcIi
CWEIIQxJCEMIYZwQwvvZ9Vz+ePf+836+n+t+7vt+nl87Go6eGjC2vEQiWWAj
kZj/n/+TS/7vf9YWtrWwnYUdLOxoYamFnS3sYmFXC7tZuKmF3S3cAjb8tO4q
LLNwKwu3hhUNbeg2cMJFKe0Buzs1p9vCc/e3oNvBW/5uSbeH042/7Wnhfyzc
wcId4XK/WtFe8PBarelOFu5s4S4WlsP7XWi1hSVdLXILS7pZ5BaWdIc7bPyd
W1jibZFbWNLDIhee6tGGuQ+8cyittrCkJ9xp1e9c+HTVdsx9/99qC0t6wafq
/84tLPGDZ/f8nQtrIn/nvf/fagtL/OHwhb9z4dZrfud9YMWW37lw9Yu/877/
b7WFJf3g2td+58KHbv3OFf9vuYXVFtYLH3v5+3z//7fcwmoL6y0sCbA4LzzU
qj3PW1hvYckA+M/3njxvYbXw3aX/8LyFJYH/b7nwHD2tFj7m1pnnhevcpyUD
YddXtFx455suPC8c9ZnWw2oXOznPD4JbT6blsGSXmlZbWG9hyeD/t9zCagvr
LSwJsjhvYbWF9RaWDIG/rv593sJq4dVbf5+3sGQorNr9+7yF1RbWW1gyzOK8
hdWw+lDy7/MiX77/9/ng/7fcwmrhlJSuPC/c9iQtGf7/lltYbWG9sP7G7/Mj
sN+w57/PC6vf/j5vYT1drhvPj/x/yy2strDewhLl/1sKS166/e4nnCGjlaJ+
d9jv/iL/HElrLawX9XMW0UYLS0ah3mvD7/nCGzf9nm9hJaxudfT3fAtrRf3O
h7/nW9hoYcno/7fUwnILKy2shtWJT37PFx744vd84advfs8XXv719/wx8Jly
3Tkfllw/T8strBRuOcab8y2stbBe+OQk2mhhScj/W2phuYWVFlZbWAur7ef9
ni/y++t+zxcecPz3/LH/b6nw2so9OF843JZWWlhtYS2s9nOl9cKJMtpoYcm4
/7fUwnILKy2strDWwnoLGy0sGW8x38JyCystrLaw1sJ6CxthSeqO3/ND4UGD
fTgfVkcep+Ui/3SBVoo8a1NPzhf55Q6+nC/yt4m0XuQDztJG4Si/Xpw/AfWz
btBSC8strLSw2sJaC+stbLSwZKLFfAvLLay0sNrCWgvrYcmw9X6cL/Kab2jJ
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
dD763VzjShfAO2u3pI3wgspd6EKcf5QVQBchV1wbShcjH5AfSpvgDW+n0yWo
71g6ny5FPt24hC6DZ9zdQEs2mf2vXRJtZbbaqsJ+2hr5H7YnaRvkg4deom2R
p/e8Ttshdwm7RzvAqx+9ox3hOmnlLvL3D6+8XZV2Qb8fX2rSbvDQvvVpd9SP
yWhEy5DPdPWgPZBfcvCiPeEP3n60F+qbdx9Ay+Ft9YbS3vC89WNpXzhifBjt
j34z+s2jFbBx1hI6EPWylivpIHh9XS0dDPcZ8S+thHvEHKFD4DiZng6F3+6+
TIfB421u0SrM9wh/SIcjvzW3iI5A7t3wHR0J++z8TKvFeY9fdBTOt+xa5RJ/
/7DaYEfHor7JDydaAz9JakzHwZJ/29DxsOsPLzoB/Rpb+9Ja5E91fekkuNrJ
YDoZ9dM8x9ApcNdnk2gd6oPkEXQa8mrfF9MZyEverKYz4U0L4mk9fGrvLjoL
57N67qez4b9XH6VzxPcuPkUbkDeceZ7OhTs8zKbz4VXuBrpAfP+Sp7RRvHeM
iS6ES3t9pYtg180/6WLMv+NSOZu/f+QrJlWnS+DUs/XpUtTLbNzoMuRrh7el
JfHoX8GftoLv1htIW5ut7rIoiLZBXrxaSdvCZf+G0naoD0lR0Q7I6+2NoB3h
vbmLaamYvz+GdsH5CsY1tBvyBa4JtLuYH7+blqG+UrGO9oB1dU7Tnqh3P3eZ
9oLV+27QctSvCcmjvZFPWWykfeG3Y4tpf9S39X9PK2Df9FI6EPUeXctd5u8f
+a4UazoYTl5Xk1bCmwP+okPgxd/d6FDxnu9b0mHwVrcOtArzVi7vSofDDeR9
6QjUTxk6gI5EfnzvMFqNfIL/KDoKeaNL4+ho5NsmTKVj4blvFtIaMf/NcjoO
Pjp2LR2P+t094+kE8ffUfjuthe027KWT4AsDdHQy+uWfuUSnID/0/TatQ55+
7QGdBjf+6zGdgfomAUV0Jjz71gdaj/pXQ37SWfDz7dWu8PcPy7Ns6Ryc/9XG
kTYgb7vfmc6Fg5fK6XzUp6j96ALkg54F0kbkLfZOoAuRtxoeQRch77x/IV0M
pz2Lpk1w+WoaugTW+yfQpXCmcS9dBsfeTaclm83zzr++QluZrXZJvEdbI++9
7QVtAz/v/I62hfftLqHtcL5n11+0A9zUy/oqf/9wQZs6tBTn5639k3ZBfjTY
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
r9fkWFoKf/5vA+2M+l+dEmgX9JsXtoN2xX6XDYm0m9nyKoV76aZ4nz+O7afd
YfsqqXQLzHvU/SQtQ782/ufo1ugXkHuB9sD5KzWu0e2QK6V5tCf2W+HzgO6A
fsGLntJeuE9/v5d0Z7xfaFwxLUf/qnYmuhves+GVT7Q36seM/077oP/Qo79o
X+zTf0KlQmE/1D+ZWZP2x37/VPiD7ov+7dbVpRXod2GPEx2A9+k15286EP1/
1mlKD0L9gYut6SD0t9nTgR6K+bGXOtPBmLf2Yld6BPwo2odWop9kdW96NN5j
0sV+dAj6hc0Iosdhv22LlHQozu86PpaeiPNd0ybQYdhv3MrJ9BR8j1oHZ9Aq
9D8fMZeejv0q+S+iw3H/UcNi6FnIDzVYQ0dgfofh6+i5mBfdcQMdCVdM2Uov
wHn7lF20Gvv8st1HL8a87pmH6CjsV2dpGr0M5xesOklHI6847gy9Av0OOF2g
Y9HvzCgDvRr7Hnxzh9agX0XPp/Q6vK+032s6Dv1q9i6mN8KPWpjoeJzvvuw/
egvO79zwg07AvB2tKj0X3o59Oy2xobU4f6V2LToR/a+Wt6OTcN6/Sn16D+of
rGtIJ8O/ejen95ktWbOvNZ2Ced+edKAP4j1i8uW0DvPGDfamDyOvq/el0zD/
805/Oh39g5WBdAbm9/82jD6B3CFZSWdi/vmssfRp5OcXTaT1OL+n/FT6HOZt
LT+TzkLuNXExfRH9TjnH0tnod2rBevoK9n8yZTOdg/M5ku30dZx/dnsnbYAd
l+6nb5mtnNTyCJ2LfhsunaTz0M844jydj/nv916l76O+TY1bdAHeN6B1Af3I
bOO7D4W0Eee/yorpp8hfj/5EF2K/Cs4/6Rd4n8HuFV4IF2Hfk3uq0a9Rnz3C
li6G/7pnR7/D/stGOdIm7Lv5UxP6I/oPH9aSLkF+6Q8v+jN8plw3uhTO79+b
/oZ599Yq6DLkfz4ZRP/Ee3SqOoKW7DL7g/04urzZRsUfU2grs5XN1kbTlZDH
NFpFWyNv8HQ9XRX91g7bTNuYrZZOSqRrmC0tmbqftjVbUvh3Ol0b/XptOkPb
mS0/rjhP26N/paXZtAP835mrdD30bxZ6i3bE/Bcj7tFOqD9a9wUtRX2VTq9o
Z+T1yr2jXcR+lT/TrshTVT9oN9iut9VL4aaoL9tXg3ZH3qmzHd0C9zub4UDL
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
KzoI/c9e7UwPxfnhH3rQwdhvzN3e9Ah4U0wArYRvDgyiR6Nfn5Ej6BD8vbTU
htDj0H9DQRgdiu/ZMmgmPRH5xO4L6DD0O/FtCT0F/bYOi6VV+PtsvnYtPR31
LqaNdDjyg7d20rPgLWGpdATqG1Y9Q8/Fe0kqXaAjMe9WxhV6Ad5P0v8mrcb5
HdXv0YvF+ykf01GYd3j8S3oZ8qgG7+lozDur+0SvwHv0Lf1Ox+J8z17lTPz3
H+9tvbkirYHLf7Wh15mtWFSuFh1ntmrY6D/ojZhfe0pdOh71h1850VtQf2a3
C52A/q3lTejt2LecQytai/dZfbItnSj+Hs91oJPwXk8/dqX3IJ/81I9OxrxP
4Qp6H/bTzRxIp+B8lZfD6INm62a/GUXrzJaFHRpLH0a/Uy8m0mnYr/r4qXS6
2Zrgr9PpDLz3qVuz6RN474bN59OZZpsWTl1Cn0Z/+z9jaD2+f3mfVfQ5vFe9
nuvoLLMNSQ6b6Iu4X+TzrXQ2+tt5JtFX8D4Tg/fROdj/keQgfR37y7+m0gZ8
v7mPMuhbqA9SZdK5ZtsGVz9L52HfYwcu0PnIbzfJoe+jf3NZLl2A93Y7fZ9+
hP67dj6kjbhfqxgj/RTf6+OAQroQ71lh+mv6Bd7n/J0PdBHe0+5VCf0a30Mv
+UYXY592r3/Q7zA/fb7kA//9Rz+ttRX9Ee85SWVNl6DfhEY16M/iPgNr06U4
777uD/ob5h1pX5cugzuNc6R/4j6jvjekJXvM71ffvild3mzVkoctaCuzTafD
POhKZktPGT1pa7ONHSp2pquiftuwbrSN2cr+UT50DbMVLaz60LZmy3u8DaBr
I69zdzBth302nwum7TG/4iIl7QDnKULoembL5iwNpR3N1uu0YbQT9vv+YSYt
Rd5ZP492xj5DnBbRLsizVkXRrmZLeuyJpt3glK1r6KZma6Y9jKPd4TU3t9It
MH/rvkRaBv9qkky3htsNO0B7oL+iUirdzmxDs4ijtCfe/1mrk3QHvFfNRD3t
hf1rNbhEdzZbu19/hZbjvCbsBt0N75lf/Tbtjfc4bXuP9sH75mU9pH3Rb2Xw
C9oPVh4rpv1R7/zGRPfFferW+kQr0P/hsm90AN7rS+IvOhD9PrX+X031H01l
tsYB/GikQkZqUipkjCy55ZKSVMjVzzm3JEmnrmQJMURhqWSEjHtGmMggyaBT
+nEmJcuo3DrJuJakkl8TSZIoIaEy975f3/nzs/bez36eZ+/33Sp9fP8xXjZv
Mu2K+5LzcSrtJlg+VKNNS3C/tdVn0zsx3iSfS7uj/lXvjWgP5NM8wZT2xH4+
Py2ivZC/y7zltDesdtGe9sV+0yatpf1Qv66tmP4O56fbvZkORHwzD1c6COOy
YXd6P/K9p/CiQ/A9Bfr40WGI79MRSIdj/mhgKH0I9e1rOkRH4D7MiYmmIzEe
oIino5DP69QkOhr1xGSk0LGIX6WcTsfhfJ44nqLj4djoHFqK/fTeyegE9Lf7
upxOxH5dkut0MurRTr5Bn8D6/kIFnSo40r/wdzoN/VjyoJpOR/9ulD6kM3E/
Ptg10VmIX9j4jM5GPd/qdtI5WB+e/IbOxf5DQX10Ps47TGOIluF7S7Iapc9j
XGQ+vp/vP+Jv3qJGX0L9v26fQstRT77SdPoK+q3iNYu+ivG7w3PporH7esCE
Lsb/omeyBV2C9W/9behS5O9fZkffRD76itV0GfK59M8N9G2cn4GqE61Af3d9
vZUuR33+y9zpirHzTPCiK9Hf4N1+dBXyexceRFejnlCfMLoG9SRYfE/XIj9J
9A/0I4zLrv9E1yH+Uctsuh735/E+Gd2Ierd5y+lmnKf4xXX6KfzW8RbdivzV
eiroNtQ73PyAbke8rJ4GugP3KTPjGd2JfLYtfEV3wZvCeulu7GcVPkS/Qf31
d0UDfP+x/wmNCXQf4p9T/pIeQP3znmnTg7hvBal69BDOe/UcY3oE/Y5NWkh/
QryCUCt6FPN359jRorNC/8YXraXHCd44EruZVhZsFvLJjVYRnL188W56Itb7
3tpLqwqOVLMIpdUFy88vOkJrCO7d9m0crSm4pi70OK0l2LalLY2ehvlqZ8/Q
05HPhC3n6BmCA1N2/0rrIN661mJ6NvK7uvYWrYt87ipX0PqYbx5ZQxsIFmnW
NdCGmL+po402Eqwp8XxNGyMf83d9tAnyVXkxTJuiH+mTlN7z/RdcpucyiTZD
fqJ6Ddoc6+c3zaAX4TxyCgzpxcjHsGQBbSXYfbLdUtoa/TuQvJK2gXVljvQK
uPrFBtoW6/38nWl77GcZLqEdBOu7LvCkHZGfk3gvvQb935UeTK9DvBSLcHoD
+ln8OZIWY/+MiDh6I+rPM0+indDfXuVM2llwq+aBXNoF/XYWXaZdcR+Py4to
N8w3O1VKSxDvoKGC3onzWHetinZHvr+4PqQ9UE+tTiPtifzspS20F8a9bdpp
b/Rnbm4n7YvzzRvuof2Qr8WBAfo7zNfr/0gHYv7PZkqDfP+RX8OT8fR+9K9i
jyodgvOZefpLOgzjZ8un0eGoN1+iQx/CfdEuNKIjUM+9vAV0JNbbKizpKORn
dmwZHY3+LD1iR8eivwG/rKfjEN9/1ImOx/o7p3fQUqxfbuxFJ+D+RIv86UT0
c/zlYDoZ6/cdCaVPIL5d5yE6FfWlqUfRaejfvVUJdDr6N/VFCp2J+JLmLDoL
52G8UUZno5952y/TOahv07UiOhf/h9PTbtL56N/tAQUtw/17cqCSPo/7/Zv+
ffoC8l/6qJa+hHj3dOtpOerViviDvoJ85u1tp6+if8GWXXQR1j9820sXI59C
+w90Ceqr8vxMl6L+0q3KH/j+w4Vqk+gy9C9yjyZ9G/t/MJpJK1Bf/XYDuhzr
n7oY0xVYf2zm3+hKjLtWmtNV6GfQ6yV0Nc7H2NyWrkG+FU6OdC3263cQ04+w
/mHxZroO/XWs3k7Xj/0f53vQjej3f2P20M3o36wQf/op8g0zCaJbkc+u5lC6
DfE72iLodvR7vOlRugPfi8HzWLoT+Q+mxNNdY//jPYl0N+KNaz5Jv8F+r1pO
0b3IJ6PhDN03dv9iztIDqGeKyQV6EPsPtMjpIdTfLSmiR9C/5yM36U/4Xm4V
36VH8f2FDFbSIpkQr8m3hh4nuFXJ+jGtLNjdStpIqwi2zQ9ooycK3ijy7KRV
Mf/HH3podcGaOzz6aA2M65t8pDUF9/67/k9aS3CNWqvyEN9/5HfXSZWejvmj
hpr0DIzvejGd1hGcLd42m56N/dcvMKB1kf/X0m9ofcGBK5fPpw2w/6quhbQh
fGa7NW0kWJ51zJ42FmwWk7KaNhGcuKptA20KK+VvohegXzXSLbSZ4LKuB260
OfJ1vPgvepFgfb9ZXvRi1P93sS9thXjXdgTQ1qjfOSiYtsG4UXIovQL9Escd
pm1RX9TUo7Q95g+I4mkH5DdRdpx2xP4lPin0GtT3Wj2DXof4E/VP0xtwn84s
yaPF8OGUAnoj7L2/kHZC/jbzS2ln7H9zcRntIjiy105BuyKfuRkVtBvW5025
T0tw3nMSH9M7sd7ifBPtDqeatdAemL+74Tntiftx0P0V7YX7a+fxlvbG+Oid
97Qv+ql++SPth/Ef/zFumO8/1i+rUqEDUd8zFQ06CPfrD6kWvR/rn/05gw7B
+MRNenQYLLY0osPRj6j3pvQh3E+ZswUdgftVp7uUjsT4KXVbOgr96y9dTUcj
P4N+MR2L81om20LHwV/4Suh45BtV705L0Q+pnhedgPz8tvrSiYh/cWUAnYz1
Itf99AmczwXVcDoV+Z48eJhOQ3zryu/pdIx7X4mhM3Gfra2ldBbOd0Alic7G
edz/+SSdg35ufZJJ52J91owcOh/fY9bFfFqG+1+gXUCfx/wVI3L6AupzabhG
X0K+VzeX0HLUO6XzBn0F+WSd+g99FfsNBZTTReh3bv3vdDHmb9OqpktQv01i
LV2K/dfE1tE3Ud9xwya6DPHKAlro27DUvo1WIJ7Dy3a6HPHupL+kK9DPl+Xd
dCXGHZT66CrU9/rte7oa8UWfhuka2D3yM12L+YvOKY3w/Uc/78xToevwf2mO
mUTXY/1A3WS6Eech1teimxEv9ONX9FOs/6Jah27F+qi2OXTb2PfWo0+347ym
OXxDdyCfd2+M6U6Mbwk2pbvGzu/JQrob35POS3P6DfbTibCke9GvyqIldB/6
7ZuzlB5APjZuNvQgvp/c/98wvv8Yr/NZSY8gn/zBv/wJ42rrbelRuEnw/wAz
/qdb
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxc1X9czdcfB/A7YiHcEWuE6+dCEmIhXIQQLkJoXIRGI4QQLkJodhHSwkVo
xEIIjYsQwh2NELtohFisEWLfR6/36/vHjn/2eO796/z4nG79sVMHjS+j0WgW
OGk0pf/lP73mP/8cFWsVOyt2UeyqWKe4geJGipsodlPcTLG7Yg/FnopbKW6t
uI1iL8VtxbEZ/P/tFH+j2Ftxe8UdFHdU7KO4k+LOirso1v/XJsWarkpcsaab
Eles6a7EFWt8lbhiTQ8lrljTU4kr1vRS4oo1fkpcsaa3Eles6aPEFWv6KnHF
Gn8lrljTT4kr1vRX4oo1A5S4Yo3hv9YrNim2KtYMVOoVmxRbFWsGKfWKTYqt
ijWDlXrFJsVWxZoApV6xSbFVsWaIUq/YpNiqWDNUqVdsUmxVrBmm1Cs2KbYq
1gQq9YpNiq2KNcOVesUmxVbFmhFKvWKTYqtizUilXrFJsVWxJkipV2xSbFWs
+VapV2xSbFWsGaXUKzYptirWjFbqFZsUWxVrjP+1TrFesVGxSbFFsVWxXbFm
jDJfsV6xUbFJsUWxVbFdsWasMl+xXrFRsUmxRbFVsV2xZpwyX7FesVGxSbFF
sVWxXbEmWJmvWK/YqNik2KLYqtiuWDNema9Yr9io2KTYotiq2K5YM0GZr1iv
2KjYpNii2KrYrlgzUZmvWK/YqNik2KLYqtguNlW5x/kh/7VOHNbyFecrNor1
v7/jfMUWxVbFdsWa7/5rnWK9YqNik2KLYqtiu2LNJGW+Yr1io2KTYotiq2K7
Ys1kZb5ivWKjYpNii9hc/InzFdsVa0L/a51ivWKjYpNii2KrYrtizffKfMV6
xUbFJsUWxVZx2ixNV5mvWDPlv9Yp1is2KjYptii2KrYr1kxV5oszvR04X7FR
sUmxRbFVbPcux/mKNWH/tVaxTrGnYr1ig2Kj4jDFJsVmxRbFKYqtim2K7YoL
FWumKftXrFPsKc5vXp77V2xQbFQcptik2KzYojhFsVWxTbFdcaFizfT/WqtY
p9hTbI77nPtXbFBsVBym2KTYrNiiOEWxVbFNsV1xoTjuAq2Z8V9rFesUeyrW
KzYoNioOU2xSbBb7xTty/4pTFFsV2xTbFRcq1oT/11rFOsWeivWKDYqNisMU
mxSbFVsUp4g1nzlx/4ptiu2KCxVrZv7XWsU6xZ6K9YoNio2KwxSbFJsVWxSn
iF0u/H//im2K7YoLxZnzKnP/s+DAC7SWvleF+1fsqViv2KDYqDhMXNJAy/0r
Niu2iLPmVuP+FVsV2xTbFRcq1sz+r7WKdeKQSNpTsV6xQbFRcZhik2KzYovi
FLHTnf/vX7FNsV1xoWJNxH+tVaxT7KlYL7Z//P/+FRsVhyk2KTYrtihOUWxV
bFNsV1yoWDPnv9Yq1omLWlXn/hXrFRsUGxWHKTYpNiu2KE5RbFVsEzvPpO1i
3R26UOy0xpn7n/tfaxXrxEFja3D/ivWKDYqNYofDNbl/xSbFZsUWxSmKrYpt
iu1iu3st7l+cuobWzIMjvqnN/YuLLtM6xZ6K9WKHT7RBnFvoyv2L3RzqcP+K
TeLIy7RZsUXsVLsu96/Yqtim2K64ULEm8r/WKtaJ0+vSnor1ig1i40LaqDhM
sUmxWTxroY77V5yi2KrYptiuuFCxZv5/rVWsU+ypWC+2Pf2a+xfn5btx/+IN
d5tz/+JJt925f8VmscHkwf0rThGnb6Kt4u2RLbl/zrPRdsWFijUL4ENlPbl/
xTrxc1faU7FesUF8cRltVBwmvvt/m8TrVtBm8cwztEX8WdVW3L9iq/j69225
f8V28aVz3bl/2BQd5cv9L/yvtYp1ij0V6xUbFBvFrbbTYeLALNok/uTWg/sX
H/qOtsCakCN0ivjby7RV8n+4QtvEG2/RdvHBXLpQ/NUDWmNCv9GPaUfYtP3L
njwP8d8taRfJ7zuc1il2k/zDobSnYm/xgXBaL/XPImk/8a/Ve/E8Jd/PnQ4U
Vy7nx/MV365Gh0h9nz50mOII8an3tEnctUZvcbT0a5BKm8XaRX3EcWLNctoi
vlxAJ4mv7O7L+xL3fUGnKbaK/3TwF2cqtsn6XpvpHIk32UjbxRfK9xPnS/6w
yXShuGAOXSz5A0/TmkWI2y7SjmKPG7RWPOcx7QKbIlr05/2LXTsP4P2Lu5ho
T6k/uJr2FldvYuD9S/6+vrSfuOwq2iD56810IGyduIE2wnq3A3SI4jDJX5xD
R4gX6gJ4/5K/sSEdLfOejaTNkl+tyTDev6xvUTBtkfptR+gkqe9ynk4RFxbQ
aZLf9gNtFcdqA3n/4pwhtE3mfZhN58h6/F7TdunfvOVw3r/k/9uJLhTHjaCL
pb7vYlqzGPEvomhHWD++8gjeP2z9WU+7SH7HXrROXOEm7SZ+eov2lH6hf9Le
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
PTpGzje8IW2W+/zWnY6FTU9703FwjC6IToBdZk2mLXBY7Ug6EQ7YuYJOgr2f
r6KT4eIt6+gUOPGPeDoVDg3ZSqfBScd20+lw9J1faCucOzaNzpD4qhN0ppz3
vTN0Fux4PZu2yfp75dLZcNbp+3SOfM8hD+lc2Hrtb9ou5znrDZ0n82Pe0fly
/sM+0gXyHtv9SxfKfXaoHcf3L9/3tBZ0MexfuQ1dAmsGdKI1GzD/gC/tAHvt
7kU7wpExI2gnOOr5eFoLZ06cTTvDPrsW0i5w0ZgVtKvk319N6+DQkWvpRrKe
JhtpN7hw/RbaHY5pkkh7Sv2gNNoLbnTIRnvDCS1/p31ge5M8Wg8XZxbQvnDw
rre0H2yrXHYT37/U6yrRBth/ZzU6AM611aADYcvC5nSQ9NPqaSNc8qQ/HQw7
R42kQ2Q9I4PpUDmP0zPpMIk7R9HhsHWPmY6Q+M2tdCTsOO0gbYJ1o0/SUbBm
UxYdDUcY7tIxcv9l82gznNzvLR0LezcoF8/3D/sVfUEnyHkfdKUtcl/d69OJ
cl7uejpJ9pvZnU6GXdf40ylw3sdRdKqc546pdJrMGzCDTpf47/Noq+wnazmd
Iefz2Xk6U+btvElniVfn0TbYFPmezpbzaujwE9+/nK9XJTpXzmOsF22X9za7
E50n3/MNA50v7y9yNF0g57F0HF0o660zhy6CfbdH0sXyvf24ni6Btb8eozUb
Sx245AztAFszsmhHOK0kl3aCC44+obWwV8oL2hk23f+LdoGjaxfRrnDht2US
+P7hvHKV6EZwxOsqtBtsz/qSdoed7zagPeGQ8h60F+zu1IX2hpM2+NM+cJT/
MFoP5ySE076yv4qRtB/sW3U57Q/bXhyjDbLeITY6QPb35BYdKPUJBXQQ7HTq
FW2E06dU2Mz3D2vuO9MhsNs5HR0KW3Y1psNkXt2OdDic+KI3HSH3cWgsHQnr
J02kTXDsqnl0FGycupSOhoNbr6Nj5L6r/ESb4fCPh+lYOLR6Oh0HJ/x+nk6Q
+ztroy2woVYunQi7HnhEJ8l9rsmnk2V+7is6Rb4PUwmdCqdu0W7h+5fz+9GN
Tof9HVrQVlnfml50Bpxxoz+dKd/HwsF0Fuy4M5S2yXoOhtPZMu/z+XQO3Ojl
MjpX7uvHbbRd4nt20nnyfebtp/PlPbY5QhfI/L7pdKHcb94lugj2Hmyji+GY
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
9VvaCfFtS8bRVRD/7V0orUW8dWA4XQ3xVcPn087ws6ZL6ZrIPxG5gnaB29f5
ia4FN3fZS7vCP/un0HXhui2P0jr0j61/im4Ah5S9RTeC3ds/ppvALnHVssRu
6Nfldn26GdzqWDPaHfkfGrWiPRCvt68b7QmXe96Tbg03fjiE9pLzcBhPt0O8
zoGptDfiW2tF0h0Q3xIVRfsgnrTPTHdG/EV+HK1HvObezXQ3xMvU2037Im5u
f5DuiXjnNydpP3hW+Qt0H+Q/rHuN9kf8TvUbdH/E7+69RxsQL859Rg9C3GPx
WzoA9rpQ9op4KPKLrFXpQMQ13nXpEYi/y2pAByGefLopPQrx+3W8aSPiqzt0
p8ciXmXRADoY8dZrAukJ8L2pRjoE+eOeT6QnIX7i41w6FM6xLaanwNYnCXQY
nPt0Fz0d/qffIToc/ZOqnqdnwd2N2XQE/F3CA3ou6iv/+pKORPyrpu/oBXC/
H8pdFZvge62q0YtR72wcRkfBvX8KpZchv+Fn4XQ0/P3hhfRKOLH6OjoGDhy2
mV6NfkF7k2gzrI86Qa9F/laHs3QsbF9wkd4Av653m46Dva6/puNlvxvrXBMn
wM9WtKS3yP7T29MW2LawC70d6zlWvS+dCPt9NoLeJd+nk4lOQv3jojX0Hnhl
r610MvLLbkyi9yO+NvUKnQJru92lDyL/0qtHdCr89twH+kiprQl55WziNNR/
uFWFPo746r+q0+lwDa+v6JOl1o9fUI+2wu3KNqHPYF6lSm3oDFnP5+3p85jX
tlc3OhP1Zaf0oi/J+yvoR2fBo84Np6+iX4HeSNvgzEHf09eRf3PqHDob8SH2
hfRNxAffW0rnwFdfraLvyHudsI7Oxf7XO26i7yP+vJyFtsv7abiLfoj40Y4H
6Dy4aH0a/Rj562dZ6XzEb/x8jn6GeauOZdIFiM+bfpN+ifo36+x0Ic7vyep8
+jXiujfP6SLU7z5WSL9BvlePt3Qx5j22ldDvkZ98oMxv4hLkT+pQlf6E+Ivm
NWlNYuk876eudJlSmxLKNqYdSq3P/qE5Xb7U1mUtO9OOqK9wsjddEfkTh/en
nZD/adsgugryN8SNorXIf+c5lq6G/OPtJtLOWE/Woyl0TcSXaOfQLqhvu2M+
XQue2SGKdkX+hWnRdF3MX+e6htYhv4prAt0A+fq+u+hGyO/l/AvdBC48d4h2
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
Ri/GfjdbEuko7Odxt730Mqx/2Yn9dDTqd90/QK9EvOzWVDoG8f/VVG+hDIZh
HMDTSkopjZbDhQsXTCIpLQmLEhJGyyl3KHZjNy4UF6ZQ0pLMKUlCkjQz0nJm
awmb0xKLEWsOibU2Df39d/nreZ/T+319n1+/RvdjnqimDXoA8y+ObtFqxF/s
B/Qg5jFWmOgh1HvoNNPDyM/rPaFHcF7gtNBjsLr0gp6AlR4bPYl5m/fs9BTq
t/jv6Wncd4PomZ5Bv5MeFz2LeleaN3oe95XrddMLsKbGRy8iv1n/Qy+hfsd+
kIP/f5wvVAloLd6PlaJgWgdLrSG0HvOmzoXS6//fD0UYvQG/zIfTBtTvNQjp
Tez/5oikt3H/XX4RvYt+tapoev//fcyIpQ/Rv/E1jjYhvuOMp82wVpxAH2H/
pEExfYz6mvZk+hTzuA0ptBVxU10afY58nTKdvsS82d0S2obnEaHNpK8Rz2zL
om9QP/Usm7Zj/kK1lL5D/u1XHu1AvxxhAf2IesbgYvoJ+ZKGEtqJfceFZbQL
53WycvoVrl+V0e/Yr1VRSX+g/6ZFTn8i3pZYTbtRv6+qlvYgLo+po71w/nLA
39j3xxuwH/M2+f78C3jcx5A=
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxc3H9cy2v/B/AhhDiTEHIMIYQhhDAJIUxCEoYwCUPoEIYQOkxCiHsIIc4Q
QhiSEIYQiqFDCEMI4fvd63r54+z+5348H++f13Xto7/uu/7Yaf7jS0skkgUO
Eon1v/kfheQ//7G3sdTGTjZ2trGLjWU2bgDvXl+/u7CrjRvb2M3GzWzsbuOW
cEK3JrQcLjjiRre2cRsbt4XT3JrRHvDBre50Ozi7cQu6PVwx47c7wIVnWtKe
Nu5o40427gzPfvHbXjbuYuOusJ2yFd3Nxor/WmtjSXebuI0l3vDh4N9xG0t6
2MRtLPGxidtY0tMmbmNJL5u4jSW9YUn677hwjELOuO9/rbWxpI9N3MaSvjZx
G0v62cRtLPGziQtfW9qa8f7/tdbGkgHwyszfceGPr37HB/7XWhtLlP+1wsZa
GxttLBlkU29jrXDOx9/1Npb4/9cKG2ttbLSxZLBNvY21NjbaWBJgUy8c8+N3
vXDx4DasFz4ZT0uGwLuNtEK4eSattbFR+OOj3/VD/2uFjbU2NtpYMsym3sZa
4Vvm3/U2lgT+1woba21sFB7+7nf9cHi7c1vW21hrY6ONJUHw/Ya/622stbFR
eKD77/oR/7VCuGPQ73obG20sCYa/jfpdL9xi8e964dtrf9cLPw5rz/qR8KsF
tEK4+2Jaa2OjjSWj/muFcFbi73obG20sGf1fK2ystbHRxhLVfy0T7n38dz8b
q4SfnPndX3jud1ovbK7dgfOE8+vRZuHO3WjJGPjjAFpmY4Vw1hBaZWOtsN8w
Wi+8buzv+cKZU37PFx4S/Xv+WLgk5vd84V4bfs8Xzk34PV84a+fv+cJ3Un7P
F36f93u+jc3CowZ6cv44eFkwLbOxwsYqG2uFLy6g9cJXd9BG4RsG2iwccv73
/JD/WmZjhY1VNtbaWG9jo3D7u7/nCy8q+j1//H8ts7HCxirhz3905HzhIZ60
XrhZH9poY7ONJRP+a5mNFTZW2VhrY72NjTY221gy0Wa+jRU2VtlYa2O9jY02
NguPnvB7vhrOS/o9X1iZ9Xu+sKOxE+fbWCv84hatF75TszPnC59+2JXzhSfb
deP8SbBnY1pmY4WNVTbW2lhvY6ONzTaWhNrMt7HCxioba22st7FR+MUwBecL
D/2LlkyGJdG0DNY23EwrhG8+plUiP7qA1tpYL/I3f6aNIp7j2J3zhccd8ub8
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
ptLe6K9sFkH74H0eT1pC98Lv4ZVSR/ui3/STO+m+4r0kh2k/zB9ZYqQH4H6f
VLlBKxFvKHtA+yOuWvaMDsD5DsuL6KHYr1zP0iX8+4/f7w6dlA6y2lBF+ycd
jN9H3P/c6FGYJ3vShlYhvmF+N3os4tPv96ND8P5l/gqiJ+C820Km0Gq899pd
8+hQnL9dxnI6DP0nGdfSU+En3zfTGtQ/fLeLnoF4aMPDdDjmPVl4jp6N7+vt
j+t0BOq/tH1Iz8X9fdiST0cif7b9O3oB7qtBoeQH//7jPZuurkIvxvnNc+rQ
Uciv98CdXoZ+7dWd6Wicd8X13vRK9AvyHErHYL86WWp6NfonrPyL1uF8aSdi
6Vj83lRP9tJxiL+fcZbegPjwXjfpeLz3C/1TejP2LZv1mU7A7/vFi8o/+fcf
79m2VH1aj9/Xn2Xb0jtw/+3X9qATcV7P70Po3Zg/sE0onYT7bllpOb0P8TBF
Ap2M+er4A/RB3Ef3DCNtwP09/nWTPoz7k5/IpVNwXxdXvKaPob9bvZ90Kvpv
svzxi3//4exjjek08e9lPS/6DO5za0x/2ojztjg6ij6PeSknptPpqL8Wu4zO
gI9oNtOZuP+4OvvpK9jP+flZOgvvcd9yk76OeLMqT2gTzjtxyzv6ltX24/v+
/79EcDbuv1dBefqu1YH6k1XpHNzf1qBa9AOr3V5fakjnWh0/4Wkz+pHVEbO2
tqXN6FfvVmf6KfqN+NyTzrfaeW89Jf0c+27/EkQXYN8fR8bRr/B7CA8NpQvF
v4fq6fRb3H9AwRzagvt/vW0h/QH3tfFHNF0EX41aR3+2OvPMli10MfZRLd1B
f7Pas8vR/XQJfFN3lP5pdfG9TudpyW7rfckTrtClrS6+MyeHtrNa/0X1lC5n
dfSTvELa3uqcZ5U/0RWtloQ2+0k7WK38d225UsJVUF+1gyMt3Y33uVeXdrS6
4N6cprST1eZL8jZ0DatTew/1op2tNuSV7knXtlqRPqc/7WK1+kXlEfSfVtub
5kykZVZr3i6eQTfA+Se9i6RdrZZOWbOMboz7MM3S0W6or9hyE93Mal0r827a
Hef5NeEo3RLnDWx5lpZbHTjYfIVug/xSP7JpD6u1X+s/pttbnbT28GvaE/t9
OvmF7oT7GJZrV1rYC/V3T/9Bd8X9/Ch0phWYfz2pPu2N/a//6U77IK5r50n3
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

         "]]}, {
        Hue[0.08640786499873876, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
ft6PtgpnKV/9lrYJ56p+pXG0XbhAuEi4RFhjRv8+8bQDrGn8K+2o4n9X7K/s
BFt7VKWdhV2EXYXdhLWwfpQH7a7s24L2EPZU8zTwpnXC3sI+wr7CemF/NV+V
TnSA8pP/HChsEA4SDhYOUX7dmTYKhyq37kKHCYcLRyjrpg5QjlT76Z5LR6nz
++ohHS1sUvV/v6RjhGPV9/DkFR2n+l93G8j3ofrVaUzHCycIJyr/rxltEU5S
/Ud+TSer9du0pVNU/HR3OlU4TThd9XfoQ2cIW9V+f+9PZyr/MYzOEs5W8ySM
pG3KR36gc9T6ORPoXOE85YM/0nY1zyELna/6+bwcxPes4iUXBisXKhdpQvi+
1Xx7FgxTLlb97f7f873DlgmVjcqlsP1RBK1ZBofUHsH3D5uCfGlHFV8xjXaC
tdd30c6w9W3VkXz/qt7rCe2q8sv1DeX7V/mfnKO1sFE3bRTfP6yvvpv2UP1q
Bo/h+1fWzqN1qv/CP2lvNW/3xmF8/yo/8B7tq7yx/1i+fzXPL7vG8f0r/3mT
DoA1Cet/4PtX/dtepQ1q/peP6CBV790znO8ftvTbRoeofoE1x/P9q/p7PnSo
8mWfCXz/an95/Sfy/avzOZ5FR6j9tH1GR8LmyUURfP9qns9bTeL7V/l6y2S+
fzjC8IKOUTZX+5HvX82zwp2OU/V+y2gzXLRhHx2vzmfueTpBzXvlIZ2ozmNe
40i+f2W/ADoJ1h0IpZPh1PZmOgW2OdWcwvcPO7dqS6ep/a6bTKer824zj85Q
8706TltVff98OlOtb/tAZ8GGLpWn8v2rea+PpG1qf79ep3PUed39l85Vzm0z
je9f5d8dQtvVfrLn0vlqHtdPo/j+1X4OtaULVf76ULpI7afadLpYfS83jtAl
aj9//02XqvVL7bRmeZlN9yv9xPcPm1N8aEfY/p0f7QSnXutLO6v8JBPtAhtf
36RdlVe8p93goiUzp/P9w7r3X87g+1f5B7+nPVT+79G0p3KDtbQOdv5mA+2t
5s0rpn1gfXzjaL5/Vf98Oq1X/rCN9lfzDN5HB6j+OeVn8v3D1n462qDmrd6V
DlLeNoMOVucbop3F9w9r9jWijWq+hv3oUFW/ZAodBtsyVtPhav37e+gI1X/Z
WToSNjy/Q0ep+/nmi5/5/tX6/Xxok3L3nnSMOr9v79CxcOxVBxPfP5y1ozZt
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
h2jNtrJ5Lm07T5eDt5TcpB3KrPVbXExXKLP92NcVivj7X2Zr2L5qdKUy2/rf
09JOZY7YUNqUrlLm1O8ueNPOZdZE/q2nq5fZ0LUkkHYps/PP7wfRNdFv16BR
tCvy96dF0rUxX41ds2k37Ke3xy90Xazn9DyB1mKeNrM30w2w36ard9PuiFfM
+41uVGbTrSOnaI8yW8q5XKCbYv15y/+iPdHvr89u080Rb/KikNbBlv6ltBfO
83VDx+f8/ce8RQnV6TZY78pMN9oH82zs/hXdHn6+RUf7Kp/1pTvhfjIfB9B6
rD/MoT/th3mHthxO+yP/z4ET6G44j8jd0+gA9D+gmU/3LLNuzcRldCD6HZ5r
oftgf4lJu2lDmY1Hqx2l+yG/140sOgj3O3PJJXoA5on78gYdjPriCoX0YKz/
w6wSOgTnNfzmpy/4+19mc7C2Km1E/zUFtegRqO/8aT06FPkdTzalR+N76nCo
NR0Gj/9JT49Dv9Exfelw7Nej72B6Avr3fTqCjsD33O2PH+jJ+N5Tv5hOR+K8
3SvMo6div62fLKejsL8/CtfR0zFPVPMUOhrzt5mURs/CPKuaHaVNZS5Ke3KW
noN+jWL/pGPw/fVtdIuej/WfNCqkY1HfYfsbehHyN4+p8JK//7ivXaVV6CX4
Xo5er02bcR6R2q/o5Zj/zYUWdDzm8XL3pVdhfs8L3egEeOCHIHot6uf9PZxO
xPnmvR5Hr8d6NTdMpS2Id38+i94ENxoeSyfB75oto7dif4PnJNLJ+F5dZ26h
d2D97MO76RTsN8//EL0b8TEfjtOp6J98IYveh/1Ebs6h0/A9TC93gz6I85xb
L59Ox/qfn35CH8Z6Dn4ldIba391Pivn7r+7nbSXain6V/6hFn8D51EqoT2ei
34y7TejT+B4bftGazsJ8h5p1pM9hvREe39DZ+F5qF/ehL+DvzS9Zg2gb7nd3
q5H0ZZxPruN4OgfvKezANPoK5mvXZjadi/m2111EX0O9ZuMKOg/z3M+10DeR
//XT7bQd8UrX99N3MN93jsfpfHzf+6xn6Ps4ry+bXaYLsP+Lf96gH+F8nukf
04WYv4uhmH6K+Fu3f+ki9J8yo/wr/v4jv9fIKnQx+p+b70q/Rn6Ivj5dAg8d
1Yx+Cw/a4E2XYn89NB3p95j/17QAWpNcNs+aL/rR5cpsyKsVQjsgPmZrKF2h
zNY2ayfSjohvn/ATXQn1V36bRTuVuSjwp1i6Spl1Sw7E085wq+R1dPUym2ev
2Uq7lNn5eNpeumaZbTerHqZdy6y3brDStctsqRBylnaDF5y5RNfFetcbXae1
2E/CzAd0gzJrPrR4SbuXWduk6F+6EdY3Hyz3mr//WH9nQmW6aZnte+e70J6o
3/BjXbo58tfPbErrcF5rH7ShvVBfeEZPe5fZtOx9d7oN+p0f24/2KbPR1nQo
3R7z5RSMpn2Rf+eTSXSnMkc89I+m9djvzOj5tB/cOWQJ7Y/zWn5uJd0N/brN
s9ABuP/WPXbQPXHefif204GI12x/jO6D+20zOYs2YJ4qw2x0Pzis4XU6CG43
/R49AOd1sNYLOhj9vm5QSg/GvMPGfvYPf/9xHn3b/o8ehnjFDl/SRnyfM5t9
RY9A/2uhLelQ1P81qDM9GvPoz/Wkw3BfPWoMocfhPh7ljKTDUb9/bDg9Aef7
5dIpdATmKbXMoifjvMyrFtKROO+lXVbQU7Hf72qsp6MQn784mZ6OeUam7KGj
8X17bfyNnoXvz6U0kzbhvmZPtdFzkL+mVh4dA7fa/YCej/WOriyiY9Gv8N4b
ehG+1+yuDiX8/cf5rnlShV6C9f6+4UqbEW/h404vx/n9L+drOh7x08vb0qtw
nl2D9HQC7iOqQi96Ldz2Q386EfP9Ofd7ej3m76kPoy247z0bI+lN6H+s7s90
Eu7LZe9Ceivu62q/5XQy+pduWEvvwP3cv7qRTsHfL9eB2+ndqG+6fi+divMK
OH6Y3of86q1P0GmYZ8CTs/RBzOPw8yU6HftdkZFHH8b63zy9S2dgf+dbP6OP
4TwzB5bQVvX3q7bmDX//8f15FlSiM9HvvUdN+jTssKY+nYX9HP68OX0O+/mj
kQ+drf6+ZOvpC1j/W/cetA3zjbzbj74MF4QPoXPQ3/XmSPoKzqPiN+F0Ltbr
0HYKfQ3fa+m5WXQe5s1oNp++ifdRf+IS2o71bjqtou9gvtB+6+h8rH8iZjN9
H/v59v4OugD9rzVKpR/h/raOOkAXYp4/lx6hn2L9iNW/00U4/zd9z9AvkD9w
fzZdjO/1jNNl+jXi3dtdoUtw/6Gaq/RbzLM38Tpdivf0bPkN+j32s2LV//v/
AFHyIrU=
         "]]}, {
        Hue[0.3224758424985268, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxc1W9YzOnbBvCRNiEMQmgzCEmYCCEZhBBGG0IYJCEM2xKbDEJIOxJCGIQQ
BvELYdASwkgIYRBCCEnS8jxz3ue+2Nk3e3yO87qu+9981XTiLP/JVhKJJMpO
IjH/n/8pJP/5z9bCUgvbW9jBwo4Wllm4mYWdLdzSwi4WdrWwm4XbwYHplXoJ
yy3sbuEOsOfyJnRHODyjBe0Bu1VuQ3eCKw7/687wkrv/uouFPS3c1cLdLNzd
wl4W7mFhbwv3tLDiv9ZYWNLLIrewpLdFbmFJH4vcwhIfi9zCkr4WuYUl/Sxy
C0v6W+TCTuPdmPv+1xoLSwZY5BaWDLTILSwZZJFbWOJnkVtYMtgit7BkiEVu
YclQi9zCEuV/rbCwxsIGC0uGWfRbWGNhg4Ul/hb9FtZY2GBhyW8W/RbWCF+Y
/W+/hSUB/7VC+Mbyf/uFPY7/229hyfD/WmFhjYUNFpaMsOi3sMbCBgtLRlr0
C8+p15b9FjZYWBL4XyssrBH26vlvv4Ulo/5rhYU1FjZYWDLaot/CGmFD7L/9
FpaM+a8Vwv6H/u0XXvD1334LS4LgTzbt2C/sWZfWWNhgYcnY/1phYY2FDcKr
mv/bP+6/VlhYI1yW+W+/hSXj/2uFhTUWNlhYovqvZRZWWFglHPvo3/kW1lnY
YGGThSUT4JSn7bm+8PIPtMLCKmHpSg+ub2GdhQ0WNllYMvG/lllYYWGVhTXC
89f+u77wqox/17ewycKSSf+1zMIKC6ssrLGwzsIGC5ssLAm2WN/CCgurLKyx
sE548L1/1xeOaNGJ61tYMvm/lllYYWGVhTUW1lnYYGGThSUhFutbWGFhlYU1
FtZZ2GBhk4UlUyzWt7DCwioLayyss7DBwibhQzP/XT8UfhT97/oWVgj32v3v
+sIz7vy7vvDwKV24vvCPFNogvD6XNgk3POvJ9af+1zILKyyssrDGwjoLGyxs
srBkmsX6FlZYWGVhjYV1FjYIK8Z15frCU4/TkunwxgteXF84SNeD6wvbZNIq
C2uEPxTROuErLt5cX9h7ak+uD2tWN1Fw/TDkszvSMlgzNp5WCEecplWifsuK
3lxf+K8rtE7Y4xltEP2n3ftwfeHOPWjJDDjbj5YJH1HRCmHHCbQKlvz5J60R
+XktrRN536O0QeQ1Bvfl+haWzER9xRhaJrz0E60Q/qtGf64Pa5ZE0RqRh771
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
o/rRkiTz/HWDBtHWZktqBwylbZHXHT+ctoPDlgbRUtS/O6Gi7ZF7ugTTDmYr
mqaE0o6o9x80k5ahvta6ObQzPN12Pu1itqbjCA3thv4ac1fQclh9R0t7YL0v
ikTaE/NefN1Ce6F+9mYdrUD+vM5e2gf97muO0L5Y/96r07Sf6Pc/TytR3zrr
Ch2Aeq3VLToQPm11jw6C+wU9olVYP6faCzoYecLCN3Qo8psNPtBhyLcNLKPV
WL9+SQUdDmf8an2L3z/263vSlo7EvIz3tWgN/PaMAx0NX3VuQsfADds2o2Mx
P0/ektYiP6ttSycglzyT04nIRzbwppPE+4X40DqcZ32tQXQy/KS/kk5B/bct
I+lU5I4+KlqP+d8UU+k01I9zmEOnYz/2aRF0BuqdW0bRBtQ3ubKEzoSz562i
s+AD9xLpbNh7/QHaiPk7qp+gc5GvvXyOzkN+7+PfdD5yj2ZG2iTW//suXYD6
uEVP6ELs9/vaN3QRfPDMV7oY9o37SZfAu178ksPvH/Mjj9SkK+DSrQ60ZKvZ
4cEtaGuzNfYt2tO2yO8UdaHtzFZk9e1DS1HvIR1J25tt+PE6mHZA/+S1s2lH
1L87FUHLUN92tYZ2hktXraRdsF6nz3/RbphXOj2BlqO+0jQd7YH6ftoU2hPr
xbU9RnvB5wdn0Aq4+H9XaR/M794wj/bFvLUPH9N+WE+WW0QrYQf5VzoA8/68
Xvk2v3/kQ6bWpoMwT1mjOa1CvUueGx2MPE3fhQ6F42740GGoHxfmT6uRu50c
Q4cjt7GZRkfgPAmVIuhIsb/6y2gN9qctXU1HY9649I10DPLfP+voWLhk+lFa
i3l935yhE9B/o8U1OhF5u6M5dBLylYX3aR3mHWj7hE5GfXlMAZ2C+j733tKp
4v6symg96iN9K+Xy+8d5fXvWotMxf+ACBzoD+bOXTrQB8/o7taAzMa9sXGs6
C87Rd6Sz0V91rII2Ir/8dQCdi/Xqdwig85DPbBZI5yPP+TKWNiGv9HMSXQAv
+hFKF6L+bJNwugj7Pbl3Pl0Mn3JfTpeg/uoiLV2GeYkt1tMVyK9tSaIl28x5
4597aGuzJUXt9bQtrB9zjrYzWxFTcJGWol/6m5G234b3rPqAdkD9EMNL2hF5
8Pr3tAzzd00vp52Rx4+teoffP+bLNkhpN9RXutqIliMfV+BEe6D/Sm5r2hP1
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
mHfrTQQdh3nufWNpLeZdrr+Djke/w/GjdAK+j6FJF+kN2P/w2zl0Iu7jw47n
9Ga8f9jRr3SS+D4nVivn33/cx5JKTWkdfl++DTrRO5HHbepLJ+P+O6UE0Hsw
r7vvJDoF9dvLIuj9ZkumqdbSqTjPlqG76EO4j5Kco7Qenvo8iz6K80VcfkCn
4X1LMt/TJ/C9zLO3+s6//7j/tjsb0Kdwn/Uvt6czxPe8bwh9FvN+HhhPG3C+
kb+E0xew3xP7V9OZOO/ngTr6Et5jWM7/6Cysbz/8Bn0V86sue0Jn4346731P
34Cn7a1Wwb//+D2kHWtG56Df8UonOhfvu+mWL31XfM+Xx9J5eD/T8j/oB9hP
rssqOh9WP9XRj7Fe1OOjtAn55tFZ9DPc793kB3QBvsd5M9/SL7Hemt3/0IW4
ry777f/h33/Ms97Yki7CfdVd7km/R/+qdz50MfLyu6PoT7ifzzVn0SV4v03f
VtGleI/5f26ly7Df7PCjdDnm3dl8ha7A/qJ/5tM/cJ8+Wz/Rkj3m9V5/rfqD
f//Nlr8c6URb78G8MC/aBvW+h4fQtsjVu8PoamYbjUOjaTuzpcUaHV3TbJlf
2XFaarby6rY7dB3MG3v+PW2PeQHrbH7y77/Z6oG3GtIOmGcd0o5uZLZuVrM+
tCM8pmEQ7WS2/lu3ObQM890ax9LNzNbU1G2nnc1WDdyURrc0W7tidjbtgvuo
N/QV7Wp2Vnf1//8lhd3MTh9+rSbdDj64uBEtx/kbT21BdzA75fPYjrSH2YG/
/9OD7oz13BoMoj1xnug6o+hu2F+Pk5NpL7xn5j+zaW+zy3bPiqQVZicqZq+i
e5vt8Pu69bQP7id+UjLdD/177h2hfc32dE04Rw/E/vcmXaH9zDaNdrtND8F9
rkx/TCtxvmet39L+qO/X6isdYHZh39aVKwmPwP0GxUrpQLMj+o5oQo9Gvc1G
NzoI97U805Meh9/Dm5Z9aZXZxcumjKAnYn+VjgTTwfi9XX40hw4x27dW8mI6
FPvtM3sdPc1sybkrOjoM71N69Qg9E/tRHz9Hq/F7r/T5Oj0H+5ux5ikdjvdr
0vIzPRfnvVe3spVwhNkxF+rWphfA+utOdCS+vw8b2tJR2M/633vQGryXh4cf
vcTsvFkuY+hozGs6IZRejvd3+fYHHQMv7b6UXoX7TLv2Fx1rtu3qZdvoOKy3
734qrcXvp0h/ko5HvZf9VToB34vsUx69Aesda19IJ+I+Awxf6M34/TZ6XLny
/7VY73E933scwM0qLQlJteTWcNJCaEmim0p0ktYjMdJS6dChuSQdnEqj8dNC
mkKi5Cfl0lqSTidUmhW/NZceDvmhtUqaLtRMOXu/ev35fPT5fb7vz/vy+dTv
Y6iH5d4RdDryd6jtEzoD/bcodyZ9CvnyWOdEZyH/Npd96GzE+8uiQFqJ++Lb
QRvoHMyLR/oOOhfxum75hj6PeE7Gp9IXsX6FSQ6dj/U/FJfQBTh/9wkVXYj8
JWxuoItwntP6nXQx3Nv8gUa/S9CfNxQj6FKcb1GsGV2GfHVkT6ev43wvEx3o
ctSzrMiLrsT+S/pW0VWYh/j94fQt3D+DjXbQ1fh7yd8V9G3sb5yVRqtw3tDV
eXQt+u9L0zL6rtj8Y0sVfR/z/T5WTdch/hdFHfRDOPGSpma/H6F+/yo0puvF
YdaaU2g1zuPy1Il+hv4baOtHNyB/bxyD6UbMT+DLzXQT+s/sxNd0C+pVPz+Z
bkU+DnRl0W1YPzCogH6F+1e3/Rrdgf2Xdt6hu9Bf3dpP6DdYP/nLdroH90eF
rZZWv9/iPK9HmdLvsH7ODSu6D/stPedKDzgj+Z3k4E8PPIN4LNbTGuKI33/9
htYSG7dYZtLa4iQLix9oHXGGhls1rSt+1W6jpvXEw05YtNPDxIE+WdqD+q0v
tjILGEUb4PtNVjNpQ7Ht6DhP2lisfJazmjYRL/D+LJo2FWu7zTlAj8H6CZ8o
6XHii2f3XaHNxP5nM2/TE8RVBxc+pyeJi4znd9Pm4roNN7S0+22B+JcFm9CW
yM/kLVPpqeKeoaZOtBXiGXvIl56B/Ou0htHWyE9MVgxtI456fjKZthXH5Efk
0HbYz27cf2l75K950z16HurxurWFdkR+mm/30c6I/5bS4CO+/8jP42AL2g3f
v2c1j16A/dIMfOiFqG/V8RDaE3//54Vo2kv813+RSbQ34p2aeZr2Qb5THK7S
vtivtE5F+4nHxZQ10P7Y/35UD70c++vu0tXh+w+rncfSAYjfPWo6HSj2fu/s
Qgfh++7On9PBqPdp79V0KOrTq9hEh4kd19fE0msxH4WHD9DhON+mkFP0etTf
vS2fjkC/Pv2sgt6IePSbH9CbUY8A7zY6UpyQe/jDwXz/xU12HiZ0NOLRHzuF
3o54XJsd6J3I5y8/+tAxYtUYz1A6Duu/vhBJx6O/DG/tpXcjnqCVJ+gEzMss
ZQG9F/VoXf4jrYC1P3xMJyIfudN+p5Pgv9lq6PL9R31crxrRyTjvVxMt6RTM
W/LbefQR3Dexnb50Gu6HiZmh9DHE+7A3ik5Hvr51VdAZ4rLS/Rn0KfT7s9pL
dBbqMbK3nM7GPI+Pr6OVqOfwy7/ROeKwF6t66Fx8X+f0oCF8//H750FG9EXk
t2ifOZ2PeTQ+bk8XYP3Ldi+6EPUb7hVAF2Ee/Cw20cX4fZhiN12C77fGptKl
qPeKwTl0Ge6HvF2l9HXUY2vWz3Q55kFlpqYrUW9lZwddhfOu3aqpx/cf87at
xYiuxv0Vcn4yfRvfXznbnlah3p3ai+la9O97hyD6Ls4TbhVJ38c8/pS5h67D
7y8lpNIPEX9n0zn6EdYXa5fR9Yj/aIGKVqPfTzqp6WdwX3c73YB+qJnXRzdi
/kcm6w7l+4/+K1g2im7Be3p596d0K85z+Iod3Yb1N3YsoF9hPuwdltEd+N4H
9WvoLqy/aR1Fv0E+5mTsoXvQv+PLUum3YvUVDyX9DvlI0bpM96H/H4VV0gOU
Ug/rSffogWL1sQONtIY4ycWxh9YSa8fYaQ7j+y8uenJmCK0jtv/PZkNaV5yx
2HAsrSd2NNlhTg/D9+b8Op3WRzyhW2bTBti/QuVCG+LvqnRP2lg8rnaKH20i
ftV0fBVtKo65uTSMHiPeHp4bQY8TP6rojqLNxFEfrYmnJyB+dV4SPUm8QBGa
Rpvj+/+blUVbiI/9OyuPtsT+jdGF9FRxwXKna7SVuGdNxy16hnh+Xdxd2loc
vNignrYRNxX+1ETbilvjzrXTdmJfl7l/0vbiXM9tGsP5/iM/5oqhtKP4SMiT
j2lnsenCRDN6PvKdcWQK7YbvrTs6i14gruua5kgvFNumDfWgPcWWs/18aC/0
zx8+K2hvccQXD0JoH/Hm1CfraV/Em5qzjfYTmz+Zvov2F/sftVHQy8UN+35O
oVeIFb1+J+gA9OeWg2foQHFXy51LdJA4IfVmMR0sTp779AYdKl6RllRDh4nf
tY2so9eKS1zKn9LhOF9nyQt6vdjaNeY1HSEOdDv3nt4IRzVq6/P9F+vuOj2C
jkQ+Do0fQ0dhvYfjZDoa8Ry3nUFvF99NmGFP70Q9awa50zGYv1jXJXQc+sdo
xBd0PPJz9mgIvRvzU3llA52A821tiaL3or+PDN9FK9AvdtGJdCLqv3hAKp2E
/F6ryKQPIh73qjw6GfWLG11Ep4jLvZZeo4/ge/X/qKbTxFaqAw/oY5jXgIzn
dLp4QGD7SzpDbOz0/E/6lLh67jqtEXz/kT/fVn06G78fUjOaVvbfX/YWdA76
r/n7mXQu8rdJby59Hv3XqONOX8R5jKYtofPFYdNWLqMLxGW7lUF0Yf88DQyn
i7Df/uuRdDH2u+oYQ5eIPffHKuhSzM+pNSl0GfI/wPQkfR33jX1NDl2O+jlf
L6ArxVmel8voKsxLrGYNfQvn/cOpjq7GPD9+oaZvo7/cJjfTKnH4uWlddC3W
/9b7jr6L883aqGXA918c76w/lK5D/qvuGNIPkT/D1tH0I9T/QsVEuh5/92md
SqtRr/QkG/oZ7uv3eXPpBvGwfJf5dCPyabnWk27C+/JS73O6Be+b+Xf+dCvu
w1rzVXQb5jPTLJR+hfsz6ME6ugPz5KP3Fd2FfHUviqTfYP/sgm10D96nOdnb
6bfii3u6d9LvcN7KmTF0H/p3n/Vf/j/8qfLa
         "]]}, {
        Hue[0.5585438199983166, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxc139czOnaB/BBCCGElpZBCGE2IQmDEMJsG0IYhBAGIYRZOmkJIyFJBrFt
wiCMJIPQEgYhhEEILYPWxrb2efrcn/ljv+ef83qf67qvH/c9X71Oi8lzA6ZW
lslkKxxksor/5n+Usv/8x15iR4mdJHaW2EViucQtJXaVuI3EbhK3l9hd4k5w
6rHv+gorJP5BYg+Ju8Cam01pT3hKm/501wprd8bZ3A3xm8k2d0e88yGbvSTu
IbG3xD0l9pG4l8S9Je4jsfK/1kos6yuJSyzrJ4lLLOsviUss85XEJZYNkMQl
lg2UxCWWDYKb5tviwvZPbHG//1orsWywJC6xbIgkLrFsqCQuscxfEpdYNkwS
l1g2XBIXPufpy/iI/1or/LKnLa76r5USa2GZezJtklj243+tlFgrsUm49pQB
PB/wXysl1kpsklj2E9zFOJDnJdbC2r+v0CaJZYH/tVJiLSxbd912XsTnDB3E
8yP/a6Vw/jhaC8tqTqZNwg+m2c6P+q+VwpHLbOclNsHawv/Zzo/+r5USayU2
SSwLkpyXWCuxSWLZGDg+1nZeYq3EJollYyXnJdbCsnrxtvMSy8b910qJtRKb
JJYFS85LrJXYJGxvGMzz4/9rpfDZbForsUli2YT/WimxVmKTxLKJkvMSayU2
SSxT/9dyiZUSqyXWSqyX2CQc9zttkVg2Cd5yy9ZfYqXEalhbrcUQ9pdYL7FJ
YovEssn/tVxipcRqibUS62GZa+xw9pfYIrFsyn8tl1gpsVpiLaxVn1Gxv8Qm
2LTiEm2RWBbyX8slVkqsllgLK4tP/cj+sHZFAW0SblkjgP0llk39r+USKyVW
S6yVWC+xSWKLxLJpkv4SKyVWS6yVWC+xSWKLxLLpkv4SKyVWS6yVWC+xSWKL
xLLQCiv/7mvrL7FSYjVsauZr6w/Ltv9k6w9rJ42y9Rf57dS2/sK5M239ZyA/
aZWtv8RKidUSayXWS2yS2CKxbKakv8RKidUSayXWS2yCZannbP1FPLXhT+w/
C/dRN5uWS6yUWC2xVmK9xCZYGXeRtsDa51ds/cOQX3zV1h/Whltt/UV88tiR
7C+xVuTfmErrRTzxAG2ClT0HjGJ/4cNDaNls3M/DAFousVJiNWwa+orWSqwX
+dve0CYR//De1l9i2RzMo/xm6y+xEtaaaoxmf+FPdWgtLFN3ovUi7t2XNol6
bbKC2F/EN1+hZXP/azls+ug0hv1h2bDmtBpWFkTTWon1EpvE+X/iaIvo1yeR
lmkQX3SRdhT+7RIth7W/XaYVwl1/t80nsUq40GybV2KNxFqJdRLrYeVg+Vhh
g8QmMe+vrrRZYovEVoll89DvrIV2FL5aRMthZft/aYWIL606jvvDptwGtErk
W6NpNSzruo7WSKwV9SI20DpxPv0grRf+t10w95fYJM7PDaLNYh5LMG2R2Cr6
y2fRsvmIN8qgHWHlw3xaLrEC1j6pM577w7J2n2mVyE+vNYH7S6yRWCuxTmK9
xAbhEAVtEm7jPpH7S2wR8974gbaKeKEnLVuA/Zuk0Y6w+sloNfeH9ePm0wqJ
lRKrYPkuLa0W9fw20BoRP19Ea2HLULtJ3B/W7q5K60X92tVpg4g3dqRNEpth
pXkkbRH9lNG0VcwzPpaWhSPe7T7tCCs/vKflEitg/eYmk7k/rH7UmlbBsr87
0GrYcsSH1oj4b31prcQ60e/7gbQeNnmraIPIfx1AmyQ2w1qX2bRF7GdMoa2c
v/EU7r8Q831tQzvC2i8etByW3+hCK0Q8yZtWivP+PrQKVj5cQasl1sD6HlG0
VmKdcHkhrRf12z6mDaL/leoh3F/Ul3elzbCphRdtEY71oa0Syxb9146wReVL
y2H1FpsVwhOG00qJVcJDA2m1qKdcRWtg5aTVtFa48QZaB8tbb6H1ot6SXbQB
lt2+atsf1t7Js+0P6wtttoj6xY9t+4t6xiLb/ovh3QOmcn9YOX0NLYdNJfto
hfCGNFoJy9+cpFWw9shVWg1b9jScxv2FnV1oreg3vjWtE55ks17USxtGG4S/
jKBNEptZT0VbRL9fRtFW4XbzaVkE7rNfGu0I61vk0HJYu85hOveH1Q+caSUs
/0dOq0T+WAWtFvnNu9Ma2FLzZ1orzi8y0DqRP/E4rRf5i8/QBjGv9SxtEv3G
mGgzrKzSPZT7C/ftRVtF/dLetGwJzjdS0o6wbOIYWg6bYqbSCli9TEsrhaMS
aRVsMe6g1aL+uGJaI+IN3tNa4bw/aZ2oN6+M1ot5zn+jDbByuGwG9xfOqkSb
Rf7aeNoC648n01YxT9w+WrYU+zml0Y7CygO0XDjpAq0QrmE/k/vD+qRatArW
hjvSauEqTrRG+NVEWgurP6ppHSw/HU3rYeWSDbRB9OuylzaJ860yZ3F/kd+v
RRj3h2U3O9JWiWXLsM+WbrQjrPX2ouUi/sRmBSyP8qWVsGXIQFoFy26NptXC
OeNpDaxfMYnWin6/N5rN/YVHOtN6WL38e9og6j1uRZtEvd2etFn440TaIs7v
nk9bhT2X0rJIzD/xZ9oR1rbbQsth09gEWgEru22nlbC6SyGtEvltimi1iDcp
oTWwXvaO1sKyFeW2/YXdq87h/mK+cHvaAMuHOdImEW/qSpuFX5ykLaLesPO0
VcStV2jZcuz72x3aEVaeaTqX+wtPi6QVsHzX/2glbNLpaZXIj8qk1SJ/tJ2G
+8OOhhq0FlZHNqZ1ol7XprQe1vi1pA0i/t6VNsGK921ps4hv6UhbxPlEm62w
VdaJlq2osGFaF9oR1lb3pOWwbNVUWgGbryyklbB+0SJaJeJLVtJq2JoZY9sf
dnyx0ba/iJdtse0vfHmrbX9Rv9122/6wOn2nbX9YsS7Vtr+w6bBtf1hX9bRt
f9Hf85xt/5WIV/rdtj8sm37Ptj9sHfbWtj+sDSqx7Q+bk77a9odVqxvP4/4i
ntyM1sDyjm1pLazw60DrRL/inrQeVs8dRBtgQ/dhtAm2PJhOm8V8W5Noi9jn
4nnaCmsSX9AyLRz0kraHLTmfaEfYfLqMdoZVDb6fz/uBldaOtBvsuFtBK2DT
ci/aC5apBtBK2DprGO0n6o0ZRatE/rPpdJDI/7aYVsPydRvpULHP0yRaAxsG
pdARYv5B+2gtrLiYQceIekPO0DpRz/sCnSDqVamygO8j9mtRlU4V58/VpA2i
36Ny2ijmv189nO8H6+4NpXPFfW+eTJvF/i1W0gWst5q2iPl7xtDFov+eMtoq
8vPnLxEuE+97P5KW/Vxhve4AbQ87Gg/RjrDsRf2lfH9YPbg1LYcNjQbTbrDl
0G+0AtZk59BesPLbLVop4hse0H6in+IxrRL1DhTTQbCpW+VlfH9Y0bQxHQrL
c+W0RvQ73JGOEPHTPWktrMrwpWPE/qHDaJ04/+gnOkF40ihaD1vHh9OpYv4W
ibRBxOccoo3iviOO0yZYF3eOzhX3u+06bRb10h/RBeK+W38XyfeHzU61lvP9
Rf4BD9oq9l3blS4T+3YcSMtWYd8mdiv4/rBuQ13aUXiNnHaGDed7rOT7w/qY
LbQbbN54jlbAoU0MWr4/bPG6RCthWf/LtB+sKL1Gq+CyrEI6SMQvK37m+wv3
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
U4uOoBdjv7PzdtN2OB8h2kcvwbyZ3vG0PfY9rT2RdkC9qrZjtCPmybJJpp0R
l8jSaBfM3x2SQ69C3NusgHZDvMu1kHZH/OO4YnoN5m0pqqC9YNmvlfQ6zO+V
U01vQL3k6BraB+c/jb1D++I+owcaaD/EN0x9TPujf9hXr+gAWJzVSQein1ux
jN6K+G7JWzoY+0jp/ECHYJ/FW/vpUOS/uKL0mt9/xfv820g6HPWuCTTpSOSX
7tOhd8PDNuvTe3Ffi+mGdDQcs1FE74cfOM2lY+FZ5t/T8ZinIcKWTkD976qX
0Qfltm6PcaYTFf8XcavoI6iXqu5JH4NFR33o47jfGqMAOgn7lkQG08nYl7Fg
J52K80vL99Bp2Id2YTydgfm8jh6mMxGXqv5CZyFfeUIGfQbxwI58Ogf5qsIS
Og/z3L93mc7HfZVyb9AFivioO3QR8oNN7tHncd/s6010CfpZtT6jy+AMt3b6
IvzS4zVdjn5i6XtajP2aaH2kK3CfNp1/6avwWGtlGb//mE/try/pKtj/lip9
A97Rq0HXYF4124n0TfRzSJ9M16F+n8yQvo142CsRXY/7m0lM6bt4fqcWmtP3
ke+52ZJuwH0FKvPpRsX/6QEbugn5DT5L6GbM16jvQEswv2nQCroF+wrb5Eo/
Q78THz3oVtg3eS39HPM6ma2n23CfqLd+dDvqdW3ZQnegn07dNrpT8XsS76Sl
8JiYcFqG/AXLo+g36Bd0O57ugc9JDtLvUV/fLpnuxT5e/JhO96NeoutpehD7
eaCdSQ8p/v/9//dnnFeR+z9p0NjH
         "]]}, {
        Hue[0.7946117974981064, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
D/5H7TZ27FVPMuvZFFHnmP5tjY/o/W9821fqXOOnbpmg97/p91a1Os+st6VD
PV33/4faA880nnTBRL3/4Tlm3vIb1AVm3i8F6rkm/6fX1YVmPwOOq+eL7Sc8
br3/TbynV71AHN5VqS4y+Zs3qhea/n/dpi42+Uf2qpeI/YtPq0vE7qtufVTv
f7P+C0arfabfhQ+pl5n4T/nqUtPv53nq5aZfXZm6zKz/iir1KlM/aJO63MQ7
d6hXG/9rn9pvfOkf6jVmP1Wn1RXmfO3OSXr/m/VekaWuNPMuzFGvN+utmqyu
Mq4tV28w80a8rQ6Y/XTWqjeaeY9/oq4253+oTb3Z5P/+t8f0/oe3mv6HHlbX
wtvMeufkqoPwdjN/4lR1HbzL7GfD0+p6U79gnvpTs57dr6gbzPz4N9V7jCuq
1SGzv4sb1fvgRuM7j6v3w02m38hzc/T+1/viPHWzid+brT4Eh83+ekxVH9bf
w9jJev+b/Je3qI+Y/Y38XN1q3pd/NaqPmvWl7le3mfPyt6iPmfj3M6bo/W/W
+98F6hPGH/vU7Wbe2JXqkyZeu0HdYdY3u/Jxvf/hTlNfkZ2r97+Zv2uy2loj
XnnuE3r/i8Oze6mjjBtOTjXuLvanXz7NONrUxz2s7iG2xryujjH5WT+oe4qD
9yXlGdvEzsfPf9K4l9gbGK+OFbu73T7duLfJr39EHQf3Mf2vn6+ON/NffF3d
16zv2i/UdhNfMX2GcX+z3+Kn1AnGj//FYzxAHLo/Wp1o1pd+ifo6k//BVeok
ceSaIepBZr23DFM7zH63O9VDTP+LF6iTxb7Kf6mHiW3rjqpTzH5CberhYs+n
x9WpZt6vEfUIcz4zO9RO02/ZNU8ZjxQ7Koaq08z53DdSPcrsLztNnW7W++wo
9WizHsdd6gyTPy9TPcb0Oz5J7TL142apx5r1zrp0pnGmWc8riepx5jwm36bO
MvWLytTjTf0vH6qzTX6vbeoJYtdrR9VucSDjZ/Uks/5ZE2cZ55j5/VvUU8y8
U7PyjXNN/ht71FNN/xd6zDbOM/lTx6uni4PHflZ7TP1bVzxtPFPsXfWlOt/0
2zC2wHiOWe+psLpAHLlk2zPGc8We156ca1wo9j+4WT3fzBuZ9qyx1/TrvazQ
eIHYXr1XXWTW++aBecYLjWcnzjcuNv3mrlUvMet97MBzxiXiuNcv8hovNet7
5iG1T+zb+7x6mTjd8qtLxU2j96qXm/6H/qsuEzseueh541Vid+kD6nKT3/CO
erWZ9/Qxtd+svyF+gfEacdazY9QVYqe73wvGa8WRh8apK828xfcuNF4vtoVe
UFeZuG3pIuMNZj3tH6gD4lDlKfVGU59bWGxcLS4+3KbeLE754LbFxjUmf2+B
eqtZ/6XH1LVm/tY5S4y3mfO6fqM6KPZ8et5LxtvNeRx5QF1n1jv+NfUus//c
79X1pj46vcT4U3Gry/GycYPYO+Nx9R5x7or/qkPimntnLzXeJ67/8nN1o9j/
qusV4/1m/09UqZvE1QvP9xkfFJfvvlndLI5bvVB9SNyWU6EOi51/rVYfFqc/
/cSrxi3izB8Xq4+I20+uV7eKa9fvVx8153NxRN1mHBe7zPiYuHL8TeqI2d+Z
p9QnxIUH29Tt4uCW3q8ZnxTH3zdF3WHOM71IfcrUj69Sd4pjXYfUZ8RpPS8t
Nbb+ftY576Squ4mzHstXR4lzSyrU3cUV33+rjhbXJF7+unEPcdKiDHWM2P9L
ibqn6b+9Rm0z898/d7lxL3Hjzf3UsWJv+C11b9NvZ1AdJy6et0/dx+SnR60w
jhc32Iep+5r1uvLUdnHmR2+q+5v+8UF1gjihNbbMeIDpN2O0OlEc+kuR+jqx
e0mVOklce+NJ9SDTf5NjpbHDnIfzfvUQcZV7gTrZnGf/SvUwse/+veoUE69t
Vw8353fAuco41ZzvW/PUI8SVn7yrdpp5M3q+YTzS1K9fpE4TF3r3q0eJ65+7
uNw43eQPdKpHi5uSPOoMccljreoxYs9fB75p7BKHo55UjzXnfewzdaY5nx/P
WW08zjzvAUPVWWY/Fz+mHm/WO+ZFdbZ5PjftVE8w9SMvecvYLY65bJZ6kjmv
t0PqHLO+u8/1G08RH543SJ0rPvV9lnqq2HLOVOeJ7X/1qaeLR9+wQe0Rr3/r
c/VMcz6nf1Lnm/UlXvq28RxzHkvT1AXihUtmqOeafgdeVBeKB+35Qj3fnNdH
560x9prnucOtXiCOXVemLhL3bQmoF4q7Df9aXWzqp+X+3XiJ+Ng/StUl4uWf
faReavZ36X61T2zbdUK9zKxv5JUVxqXik7c/pF4uHj9plrpMPOnkS+pV4kC3
repycc8NIfVqca/ICbVfHO2Of8d4jXjrIae6Qly371H1WnF8cJG6Unzm5g3q
9eK2f3yhrhJXtP+m3iDeN/natcYBcx7bXOqN4jUzpqqrxdvee1G92bwPa4Pq
GvO97D6k3io+EndSXStusc5/13ibuHPoQHXQvK/3jVNvF4+43KeuM+u5OqDe
Zd63pjp1vTm/9G/Vn5rzmd6pbhAnPx1fabxHfOKvt6hD4ulxT6j3me/t+WfV
jea8XGXq/eIFD1arm8SZ7x9QHxSvKj93nXGzeFx/u/qQeV5XTFCHxcN3zVEf
FufXvaFuETvbD6iPiBMj0euNW816ZiSoj5r4lDvUbeb7mJOnPiYeNaVYHTHP
7/gG9Qlx3guH1O3m+xnd/T3jk+Ixjw9Rd4jHvny/+pT4oH22utOs/9Ey9Rnx
6nO2qK2Ks55y9xF1N3HKC3+qo8Sl315cZdxd7LjjJnW0OG/ZVHUP8dgvtqlj
xBsW/a7uafIPX/0PY5vYOfwBdS9xw5p/qmPFvqu+VfcWd157/gbjOPGxH25S
9xHvemmuOl68+bkt6r7iigOH1XZx9ODz/2ncX9w24WZ1gjh5yVT1AHH3ae+o
E8VNKfvV14lbfj83YJxk+idepR4k3vPaLLVDnHhmsXqIeFNqtTpZvPJ/+9TD
xNdEtapTTP7IHu8bDxfP3XSdOlX8w1V3qkeIL/FOUjvFrkPPqUeK35ywWp0m
Hty+XT3KPK+HjqvTxb9uvnyj8WhxxztOdYZ43fGH1WPEp/YuVLvE2WM2qceK
rx64W50pPpn/s3qceEKMbZNxltiTk6web96v5vvU2eJZn89XTzDPp/ATtVu8
pVtYPUmcGf8/dY55H3Js1cZTxKn9BqtzxXcNmaKeavbz32XqPPHoxn+pp4vP
vN2k9pjzfTbqA+OZ5v3oGKzOF59+dbR6jnhi0WR1gdj6+iX1XHG+d6O6UDwu
oUE9Xzww5xe1V7xj3uWbjReIX/XcrC4yz+v1LPVCcfy06epicZ8fFqqXiG88
UaYuEU+d+qF6qfi2R0Nqn3kfv/5evcx8z2s61aXidwb33mK83Oz3i5vVZeJD
/VzqVeKYGo+6XNyv12L1anHQvUbtN/2e/Ld6jfitP35QV4jPveG0eq347vsu
rTGuFH945WD1evGJR9PVVeLvHpmo3mCeT+NsdUA85LIV6o3i1T9sVVeLbb/t
Vm8264/5VV0jvnfRRR8abxUv//A6da05v+Lb1NvEM/7yqDoozvnnCvV2k/+3
Teo6sx7nXvUu8U3ftKnrxYEnu201/lS8/uCV6gbzvlakqveIm58eqw6Js87N
Ue8T+yc/r24U//7TOvV+8cO/NKibxEOH/64+KL71Qfu/jJvFzy9yqA+Z/V11
pzos3n3tFPVh8Ypf56lbzO/ZnyvVR8TvLqlVt5r3586D6qNm/+POrTVuE3+1
8GL1MXFjn8HqiIm3pqlPiP+7Y6K6XXzeiAXqk+b9/u4tdYe4feIn6lPi11f8
qO4Ur/n7BR8ZnxEvmjxAbb1z1nfNuUndTfxAq0sdJR7e7FF3Fz/W9JI6Wnxu
6mp1D/Hb32xVx4i3l3+j7imOW9OhtoltH1+8Te9/8Q1uhzpWvO2Ce9S9xZmO
J9Rx4obIUnUfcX1wnTpe/Ixvh7qvuP/NB9V2cUHy/9T9xY+su/rfev+LD88f
pR4gHt05Tp0ofm/gk+rrxK9EvaxOEle9UK0eJF796edqh/juP9rVQ8RX3HBZ
UO9/8V7f1ephZ+196cIh6hSJr/vdqR4u/n32OHWq5F8y7wn1CInPGzpf7RTf
+dzb6pHicQc2qtPETs8u9Sjpd2LyPnW6xFckhNWjxbkvnlBnSP7JgRd8rPe/
2d83drVLPPj3geqxkj81+RZ1psTXBO5SjxN/t/wRdZZ48r0e9XjxFw+8qM4W
n2j1qSeIHx+6Wu2WeY/NWKeeJPFNUR+rcyT+fmyDeoq47J3D6lzxuqhf1FOl
/uTYTnWeOH5a9+16/0v+fS/+Ve0Rvzb8GvVM03/cMHW+1B/7Yqx6jnhISY66
QPK/mT5XPVc8Z8xL6kLx+tJy9Xypf/+iTWqvPv/P1AvM++n/Tl0k9Zc3/qZe
aM5rSPQOvf/Fo1L6qJeIU4KJ6hLx0INp6qXSP+2RcWqfxH//ZIp6mbhp4Hx1
qfk+n1+hXi7x069WqsvESTf/S71KfOmeRnW51I+1jqpXi/991Z9qv/jduIvq
9P6X+gNX9VNXSLzb18PUa8VzXhijrpR81yOT1OvF+yYWqKvEza+vVG8Q1za9
qw6Iv5+6Vb1RnDi4QV0t80bcfli9WbwxqUNdIx6WfcFOvf/FOcuuVNdKvwuK
blVvEz/72v3qoOSHs3PU2yX+ScZMdZ3E77h8oXqX+f3rV6Gul/zpiTXqTyXu
vmW3ukHi3c8/rN4jbp/2P3VI8m9ZeNEuvf8l/vTsIepGiR8clKbeL/GPEh5V
N4n7lnrUByW/KexVN4vr4pepD4lfLX9HHTbfW/gD9WHzPs3YrW4R1732o/qI
+I8HT6tbxbt3XviJ3v/Sf8vQq9RtEr/1wI3qYxLv8UymOmJ+rz6eqj4h+SsL
FqnbxYG1a9Unze955GN1h3jLme/Vp8QXHfifulO8ccVl9Xr/y7yJs65TW2vP
elgkTd1NfGDkY+oo8fiZc9Tdz9p78zVl6miJ3/NhlbqHxP+9bIc6xvTv06Lu
Kd6SeO5/9P4X9zhzlbqX1CfsSlXHSvyOMePUvcW37H1KHSf5WX8+r+4j8d9u
X6GOl/iZvC3qvuLrPvtSbRc3hCLq/uIlA6I/1ftf7Lz+GvUA6f9K99vVieLr
n3Crr5P8Q0sWqpMk/l2/99SDxF/t3KV2SP6Ggm/VQyQeXHpGnSzxubWXfab3
v3h/n5vUKeKMz+5XDxffUD9LnSr9Lti0Qj1CvHpTldopHjNmh3qk1Pf65lt1
msQX3HRKPUri3/zWq0Hvf4lf+f1A9WiJn/jHSHWG+NJrJ6jHiC8OFKpdUv/z
X1aqx4pLyz9QZ4qXXHtQPU7c+Pwf6izxJZP67Nb7X/r3+GW4Olvi75Q/oJ5g
nufFT6vd5v1c97p6kvjrvFp1jnjngwfVU6T+jmCHOldcdc/Fe/T+l/zJrwxU
54k/fjhdPV3c1neS2iP+KLFYPVMcNWGdOl/8w4id6jkyb9yFP6kLJB73Tve9
ev9LfGvV1epC8WXRTvV88W1zp6i94tvTF6oXiDPvqVQXSf91MZ+rF0r8vHN/
VxeftfP+qAtCev+b/d3ZW10icffn16iXii98ZLjaJ/0mHE9TLxP3WXyfulT8
3S8T1cvNfiY8pS6TeTFZ89Wrzjq4rORldbnEL/9spXq1zP869V21X/ITVmxR
rzHv+/d16gqJX3v7F+q1Mv+xjw+pKyX/kerj6vXS/9Htp9VVEj990fmf6/0v
/VZPvkwdEA/deI16o9Q7/TerqyV+/d509WZxYa8J6hrz/VY8qd4q69s3cZ66
VuI9F5Sot0m8Z/1KdVA863iVerv0P6f/h+o68XOLGtS7ZH1T5ofV9RKPG39C
/anMezHV2qf3v/Qfk2VT7xEPurK/OiTefPoG9T6pL+kYpW4Uj/7Pw+r9kv9i
32nqJonXvl6oPmjia5eom8XPx/jVh8zvxTn/UIcl3rxvh/qw7GfwnAPqFok/
1Ocn9RHzvr94Ut0q/RbGdf9C73+J33X7Jeo2qb+z7Gr1MXFUyTB1RPxUVLr6
hDmfazLV7dLv1n9MVp805/Ps0+oOyR/78UvqU+Z9u/NNdaf5PuI3qc+Y8+lT
r7bePeskxwF1t7N2HjzxgzrqrK3Cl0+pu0t8bs5FjXr/S/24965V95B4v/NH
qmOk/p7vx6p7Stzz3iS17ayDyz70qHtJv8PRL6hjpf79ISvVvSX/u/B6dZzk
v9GwU91H8nc7w+p4iU+y/aLuK/Fgc9SXev/LelY/dIm6v+TvnJ+oThBfmXOb
eoDklwzNUifKep74aqr6OvHHjmfVSWZ9mUvVgyR+zx9+tUN8cutG9RDJv9G3
U50scecLX6mHyfoPLG5Tp8h6jt78p3q4eMC1tv16/0v+iFBf9Qjpv77gBrXT
nPcrTvVImXfj38ep0yR+/tfT1KMkPnj9s+p0mTftx5fUo8VvPPCWOkPy7z66
UT1G+n08YpfaJfGv275Rj5V4eOsJdab0az4TdUDvf/GP/+6lzpL9VV/eVz1e
vPbIjepsyU+LS1dPED+1MEvtlnkrBj2pniTrSXu/UJ0j8RsWL1ZPEf/nvJXq
XOm3Yva76qniT9+rVueZ93FavXq61G8u/FrtkfyGhcfUM2X+w1+eVudL/djt
FzTp/S9uzolXF0i/9nUD1XMlXvPNSHWh9H9n6X3q+dK/+bzH1F6p77dnlnqB
eMSrXnWR5G+86DX1Quk3de9adbG48qsa9RKpX/vtbnWJrOf4M4fVSyV/zavt
ap94TCDqK73/Jf/8U/HqUvHW1uvVy2U91wRGqMsk/uee+9WrxP88+ri63Jyv
+2n1aqm/7I5itV88dt4K9Rqpjx1Yqa6Q/Yx2bFGvlXj/wnp1pdS7OxvV6yWe
F/edukrm3zqxTb1B8htn/akOSHzQygsP6v0v8YP39lNXm9+XEzeoN5vnNXGk
ukbmXbJmrHqr9Kv/fpK61vye2/LV26Q+avACdVDqTz+5Qr1dfPUl76rrpP7D
AdXqXRL/YPzH6nqJpz6/R/2pOOT7Vt0g6z+/x8/qPTL/9S/P+Vrvf8l/e5NN
vU/6973wanWj1F84e7B6v9S/c4VT3ST5uevvVR8UPzlrgrpZ3CNjpvqQ9Lvj
qUXqsDhxSpn6sPSvjnpX3SLx1x78UH1E/L+f6tWtkp93x5fqo+LTP/+sbhMf
fPOU+pjsd18gulnvf4n/+mGs+oTE09v7qdtl/d0eHKw+KfNvPnWTukPiN9yU
oT5lnueFE9Sd4tRpeeoz4n9sL1RblWfnf7JvlbqbeLj1gTrqrJ1X1daru5+1
9cKmb9TR4h6BX9U9xJHgud/o/S/1nqU2dU+JNz3bT2076+DlH/1N3UviF8SP
VMeKbxhwv7q3rG9HS646Ttxj5lx1H5l39Z5idbz03zJlhbqv9Nt5ZK3aLvlR
BTXq/tLvm5f2qhMk3jLqe/UAqb+u46Q6UfJnX/fXQ3r/i995+Sp1krjXjr+p
B0m/bhW3qR3i5S+51ENkvc4XJqmTJb7ztunqYeLgZ3PVKZKf5FusHi7zHj2+
Up0qPl1dqR4h+XGX16qdsp/JiXvUI6V/7+u/UadJvCjvJ/UoqS9Z0aFOl/yH
Z57/rd7/Yn/u5eoMyd++43r1GIk7VqaqXeKY++9Sj5X8db89oM6U9R+PmaQe
J/ljhz6lzpL4kV8L1eNlvU89UqrOFq99o0I9QfKv2fu+2i2+4KKP1JOkf8YH
e9Q5Up98/bfqKeLt/z2qzpX6j7qfUU89a/9HW/8S1vtffP8am3q61P80+VK1
56ztj1b0U8+U/F3rB6jzpf/2ooHqOVI/aHCKukA8bOxt6rln7b7z93R14VmH
u1fep54v+7vdN17tFW/omKReIPP+fHeaukji6+6Zo14oHvny8+piWf+IaYvV
S2Tej3t86hLZz77z3lAvFXdOqFD7pH7VZ++pl8l+bnuxWl0q+xnp+rd6ueTH
XLNTXSbzAhfuVq+S+ANvfaEul37z7mxWr5b51z/eovZL/eH/HFOvkfy2CX+o
K2S/cwZEfaf3v7yfN067QF0p59X8t0vU6yV/sCdeXSUeOvEq9Qbzfv2WqA7I
eqd3d6g3yn4nLR2qrpa458ub1ZtlXkn2SHWN5L9/4k71VlnfkENj1LWyn39e
/JB6m+z33ohbHZT6nS1PqLdL/dbmGeo6qf/k+mfUuyRe8ftz6nrZz+d3Fqs/
lfz9f/epGyR/6GMr1Hvk/I+/8aY6JPMfu75SvU/2++D6f6obJf+SWVvU+2X9
VVX/VjdJfca9n6gPyry1H+1WN0t+9rdfqA9JvOfFX6nD0r904Lfqw+K7rmlR
t5j7oeeP6iNy/jsvjahbJT/yy2/qo7L+O/yn1G1yHmXdrMN6/0v+jlui1BHp
/+fE89UnZL0zZl6obpd5k2/qpT4p7n7FpeoOccWiPupTUj+9Z7y6U+anPHKF
+oysb8VZ/x8yip4J
         "]]}, {
        Hue[0.030679774997896203`, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd1X9clFX6N/BbIyMjmwyNXNadDP1OhTYZa5NLNhoZGdFk5JKiTUpGRjoZ
GRnanZFNRjYa2WRYk5FLRjYaueSS3RkZGdlkZOSyNilr5KI7GelkrPs8e12f
+YOP//B6e+5zrh/nnDkXzl4w9a7+hmEsTTGM//3FP7fR518y2UZOJaeR08l2
8ghyBnkU2UG+hJxJHkN2ki8njyVfQc4Sm0Wf4///SB5HvpLsIl9FHk/+Ezmb
fDV5AvkasruvTbIxkcbJxiQaJxvX0jjZyKFxsnEdjZONyTRONq6ncbKRS+Nk
4wYaJxtTaJxs3EjjZCOPxsnGTTRONvJpnGzcTONkw9PXbrJJtsjGLTSfbJIt
sjGV5pNNskU2bqX5ZJNskY0Cmk82yRbZuI3mk02yRTam0XyySbbIxp9pPtkk
W2SjkOaTTbJFNm6n+WSTbJGN6TSfbJItsjGD5pNNskU2img+2SRbZGMmzSeb
ZItszKL5ZJNskY07aD7ZJFtkw9vXdrKb7CWb5BDZIkfJxp0Un+wme8kmOUS2
yFGyMZvik91kL9kkh8gWOUo25lB8spvsJZvkENkiR8lGMcUnu8leskkOkS1y
lGzcRfHJbrKXbJJDZIscJRtzKT7ZTfaSTXKIbJGjZONuik92k71kkxwiW+Qo
2Sih+GQ32Us2ySGyRY6SjXsoPtlN9pJNcohskaNkYx7FJ7vJXrJJDpEtcpRs
3EvxyW6yl2ySQ2SLHCUbpRSf7CZ7ySY5RLbIUbJxH8Unu8leskkOkS1ylGzM
p/hkN9lLNskhskWOko0FFJ/sJnvJJjlEtshRsuHraxvZTnaS3WQP2Uv2kU1y
gBwih8kWOUKOkmNk436qn2wnO8lusofsJfvIJjlADpHDZIscIUfJMbKxkOon
28lOspvsIXvJPrJJDpBD5DDZIkfIUXKMbDxA9ZPtZCfZTfaQvWQf2SQHyCFy
mGyRI+QoOUY2yqh+sp3sJLvJHrKX7COb5AA5RA6TLXKEHCXHyMaDVD/ZTnaS
3WQP2Uv2kU1ygBwih8kWOUKOkmNkYxHVT7aTnWQ32UP2kn1kkxwgh8hhskWO
kKOL8P8R1I/xIV+j/of62ka2k51kN9lD9pJ9ZJMcIIfIYbJFjpCj5BjZKKf6
yXayk+wme8heso9skgPkEDlMtsgRcpQcIxsPU/1kO9lJdpM9ZC/ZRzbJAXKI
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
//f/A0+cV0U=
         "]]}, {
        Hue[0.266747752497686, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
islXEv0059+sn/oWnWbi7n20g/3kOTj/sLX3Gjrd+Poaeioc+K7jWM4//H+/
InSGWT9uCZ1p+iu5dxzn39TPf5x2mXyvZ9HZxs1/oHNMvubh4zn/sGdne9pt
6i/sSecZ59npfLP+wBy6wOS7OJf2mH7uf48uNPt3bKCLTLzfdrrYxL1Haa85
33dn6c2m/+HhEzj/xjGd6VKz/2o87TNx2zG6zPR36raJnH/zfPJt9D7Tz+6R
tN+8H90a6AqTb+Vdkzj/xpuepI+b+qPW0AGTL3UPXWXu63LIM5x/E6+4h64x
9T5/mK41549fRNeZ/t8+TdebfLubp3P+Tb51D9KWVdi/fTwdAnuuCdChsPVA
/LOcf9j33jOTOf9wYLOfjoBt/3adwvk3+V56lI4y+U6m0Vazfvo4Otqs71ZI
x5h4SDEda/YP+JiOgx0X+k3l/MOWypfpBHO+p/PpXqb/qx/QNhP/ZQOdaM7T
Pmwa59/k796DTjZed5y2m/V3h03n/Jt+4zvTqaafaY/Qaab/FdNoh6n/xUp6
golPLKfTTfzttjM4/ybfsjW009xXzmk6A67Nu97J+Tf23Elnmfz39KVdJj7t
BTrbnO/Lz+gcOHzafjrX1Nv/E+2Gnb3q6DzTX+tbZnL+zf6qYXQB7H9sJu0x
z+N5D11o7nO4jy4y9bJ+ootN/ktXaa/JX9JsFucfdjvtdInp7+kn6VKz/n9T
aR/s/d9SuszcT3I5XW7uf0W72Zx/83xHx9B+k79bMl0Bx0XPoiuNf36NPm7y
jyikA6b+ocN0FWz/25LB+Tf7K6LoGnNfV26na815jz9O15l+bG/Q9ab/v9fR
DSZ//X+05R3c54a+czj/xrOH0qGw/UsnHWbiy697jvNv4rOG0xGwMy1ARxr/
cuPznH/Y92wsbYXDDw2io02+/+2iY2D3q7GZnH/Y2mIaHQcHNr1Dx5v8vxyg
E2DXkufmcv5hW7dVtM2cp/MFOtHU31s6j/Nv8nW87QXOv6nX+kPaDjva7aNT
zHnW35zF+Tfn3zCFToNrJ+TSDtj/XtSLnH+z/tsldLrp7/Ct8zn/5jwfptNO
2DunhM4w9/PRPS9x/k1/VevoLNhz740uzj8ccySWzoYr271I58Cp775H58Lp
H++i3ea8idV0Hpw047qXOf/mvAk5dIE5r+8r2gPnfFZHF8L1O+MWcP7Nfaf2
p4vN8+m/iPaa+3juOL3Z5O9ne4Xzb+7vbzddau53yqe0z9Qb0SWb82/u680n
6HLTX/hyeh+csKKc9pv7tv1JV5j6MQmvcv7hknNz6ePmfo4X0wHT/65ddBUc
d7GSrjb1Tl+ha+CiCcMWcv7hTN/ndJ15PrOq6Xrz/ra6TDeY5+u/bRHnvwD1
04fQIXCgahQdCluuLKXD4MxZG+lwOH3KSToCtr53XQ7nH87pFE9HwdW1U2gr
XPnQTjra9NOy1WucfzjSkkbHwuGvLqHjYI/7BB0Pp6ZephPM/vljF3P+TbzL
JtoGO186Tyea9XV3LeH8w7Uds+hkuOjlFbQddny7j06B4/5qmcv5N+d7PIFO
M/f1+WzaYfZbVtMT4NDsX+l02Ldw9FLOvznvUzNpp7mPq7voDBOf1nwZ59/c
/7EH6Sw4oWEe7YKT0vbQ2eb5/njL65x/uGROMp1r7uvEPNoNx/TdRueZ9+fT
pm7Ov7mvmzrRBXDu+sG0x9xv9WS6EI5as4IugqNPFNHFpt/KbbTXxPv8RG82
+U93eoPzb/J9NpUuhW3PLqd9cPy1e+ky2P1zq+Wcfzii+H56n3m+T6bRfvO+
bn2BroBLq9fSleY+wq9/k/Nv7u+HO+kAXFgzmq6C/fl5dLXZf3AnXWPy19TQ
tbD3fGwe5x/O6ziRrjfvz315dANc9vbHtOXdoBPG1dEhsGXYA29x/uGci2Po
MLjo7Uw6HK768gs6AraF/kpHwpub3bCC8w8fXxdNW+GCOQl0NBw78Wk6Bk4Z
uZyOhWtv20rHwYnbL9LxcOrdg9/m/Jv+fptJ94LDk/Jpmzn/aj+dCFf/eX0+
5x/OS+lCJ5t6nsG03eS7Zx6dAqflvkOnmvNHldNpcG55gHbAdpdlJecfLr/h
bjrd5D/+DD0Vrjv9Fe2Ea+64SGfAmWu6reL8ww0vhLzD+Yf3vdCDdsG++Bl0
Nly2uYjOMfdxfQWda+rH3FzA+YeTRo6k80y+DW/R+bBz4j66wJynz9+0xzyf
0gff5fzD6X+OoYvMfZ7OoYvh0l6HaC9cn2xZzfmHK+7uSpfA1ufH0aWmXo+F
tA8OCX2PLjPv+/DtdLm5vxMn6H2mXlKzNZx/uPjo3XSF2X9oHl1p+n1gCX3c
PK+UtXQA9jQcoKtg180hHs4/nH3odrrGrH+0G10LT9ryMF1n5vOaIXS9ue9b
n6EbYH/hXNqyGufrmEuHwJ6WhXQoHNbkczoMdiWW0+HwkWU/0hFw9MPn6Uh4
fnb4e5x/OGdlJ9oKZ+2Pp6NhR49BdAzsPuOmY+GQDcV0nOlvYQkdD0/etptO
gMu6NlnL+YcXP9uOtsEHz/alE+Hub6bRSXDLRdPoZLjL9nm0Ha6yvE6nwPZO
BXQqnN1yB50GT912gHbAx/y/0BPgorst73P+4YuvJNJT4fx+Q2knPH3q63QG
nPZCMZ0J9+ryPZ0Fry/5iXbBI/rV09nwji7NCzn/5vkO60DnmvMGHqHdsPV/
U+g82PvzVjrfrD/6PV0Aryg4RXvgXePvXsf5h+Ou7UsXwSlpaXQxnPr7AtoL
p29bQW+Gx9mK6BK4X72fLoVXraqmfXB97nXrOf9wQrdouhxObjuQ3gef+mQM
7Tfv9+ez6Qpznz8uoivN/d3wNn0cDmxZSwfM/rt8dBU8ae8Jutrc36VLdI05
/5RbPuD8m356RNN1Zl7G3UfXm/ets41uMOfdN5a2rAm6yelX6RA4YeMOOhQ+
+MgROgxO/KmGDofLd/9DR5j9Lzcr4vzDk/Lb0lGwq/39tNXkf8tBR8MlLVx0
jMn34Ao6Ft66fx0dBzdcs52OhzeU/kgnwKUTL9K9YNvKiA85//D0eiudCA9q
15dOgnd4BtLJcNyeJ2k7XJ8zi06Bh+1z06nwvsc+pNNg37Wf0w44fOchegKc
ceAvOh2OHxe6gfMPFzzZnnaa+4kYQmeY+3lqHJ0JJ0120VnwYzMLaZfp//sS
OhvuM+oknQNP/b35R5x/uOOAWNoNt+wwns6DFw7PofPhXe9vpQtMPzE1tAdO
djfQhaa+7/5izj985aZkutjcz8p5tBd2fvomvRkufreYLoHL7jhAl8In66tp
Hxwzs/nHnH+4cl1nutzUW9Sf3mfypT9P++EOffLpCnhk7Ba6Era85qePm3lY
WksH4L3dmm/k/MOXc3vR1eZ8oU/TNfDuN/PoWvP+zPqKrjP1Hq2l683+5Kmf
cP7NfGxcTVs8Qdfv+ZZuAvfb+ScdAk+/sYXXuCl879130qFwwQvd6RbwD8UD
6DB4/+En6ZZwytp0Ohzu9FIW3Rq+cUAeHQEf/ucTuo2p9+LXdCT81pBKui38
YtYFOgp+ocl1nxrfDvdtGkVb4b8qu9Id4LTHHqWj4ea9h9EdTf+e8XQMHFI5
h+4C/zL2VToWfnLLKror/ETLLXQcbHvtBN0NvqXLJToe/jYucpNxd/in/+6m
E+Cuz9ronnCzVSPoXrB71ES6D7zu2wzaBi96L4fuZ+535Uo6Ed560Ev3h3v2
2EUnwcs6HqEHwUsOnKGT4etnW/5n/Bic3601bYcdzTrSw+ABL/aiU+Ahvsfo
EfAHAyfRqXDCg9n0SHjiYg+dBt/05GZ6jHme7kO0A5457zQ9DnbuD93M32Pz
PszoQk+Ce7/6CJ0OT3ppFD0ZPtPKSU+F7XOW09Ph3ze+TzvhlwftoGeZehEV
dAb85+mz9HNwUvpVOhP+dEb4FuN58LQnutJZcP8LSfR8uIljEu2CMx9+gV4A
n0px09lmfa8ieiHc4qcddA7c9vAJejHc9OxlOhd+yN9+q/Ey088t3Wm3qXf9
4/RyeJ7XSeeZ35+6BfQK83vy1Ho6Hy5Ze5xeBafOu0oXwPvej/jMeLXpNyuW
9sB3vZpEr4VHDBtPF8IRd71Ar4fbb3ibLoKP/baF3gBvvC1AF8Pjnw8pMd5o
7rN/O9oLl33/AL0JPlqaQm+Giz+ZR2818/zSaroEvphVQm+D/wkcpEvhmwfW
0DvgFcOu0j74j+ZRnxvvMve7sjtdBvvznqR3wydmzKTL4WH7l9B74ayx6+h9
8KiHttL74dN5R2k/fHXERfogfO2W67fxewrfMOVO+oi5v2MP0ZXm+Q2aTB8z
5307mz7O99lDnzDzc9dOOmDex1VV9En4yrD/6Crze9Dlhu3Gp+Ajs210NWy5
IZU+A4/tk0nXwJ9cu4o+B19+wEfXwhM+qqTPw54LdXSdme/bbyw1vgivfDSG
rof/i06kL8PxzV+iG8zvTfw6+op5Xyq30pb3gq75+BDdBH661VU6BG4Z2u4L
fv/hpfaedCi85YuJdAv4s5giOgy+5+Q3dEv42hdP0uHwlOJuO/j9hz9oO4aO
gI+en0O3gcOeWUVHwiP3/Ei3hZuObaCj4M+9d37J7z+8bGJv2grvLUmlO8Bb
Gz6io+GXJxyhOwbtOrG1uY/ff3jE5HZ0F/iOR3vQsXCnQQPprvA1bzxFxyF/
2dVZdDfEdyYvouMRP9dvHd0d8S92fkknwEv8fronfNe2U3Qv7F/87SW6D+JP
Dr5hJ7//iHfKv5vuBzdf8QSdCF+XN4HuDz/T5WU6Cfm+H/oOPQhu+t8HdDLW
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
75y6hF6M/WVHVtK58Bc3rKOXob89fi/txvliMr6kl8PX7DtA5+E+PLf/Rq9A
P/+r/4vOR75rVlvO8vuP/Qdua0UXYP3oHtH0asTHr+5Ne8z824bTa7E+Of4Z
uhDxwIx59HrUm1G6mC7CfQSmvENvwHkvXltMF+N+Wo7YRm+EQxr20l7sP5x6
jN6E9zGkqobeDCc+1kBvxfqsd1uc4/cf+bZfbUtvw/oPmsbSpeg39Pue9A6s
H9beTvvQ75B9DnoX8l9qMYMuQ77Cdgvo3VifkPEGXY77PNl3Pb3XzPuorfQ+
xFsO+Zrej/t8ZG4F7Ue+7TNP0gexf/Y1f9EV6Ofho1foI+in/3et/uT3H+ez
xLSnjyF/8t9x9HHUXzPgYfoE6uXuH0oHkP+dlx30SdRPfXUGXYV8Nw3Kpk+h
/mO5y+lq5JtYuZY+g/WDR3vpGuT7zFZKn8P+My+V0bXo74GX9tPn0c/b2wJ0
Hc739NO19EWsv67iCl2P9zWQEFLL7z/Wz/e1oBuCtgfub0VfQf7eXW+hLev/
z+5/oqx0E7jv2x3pkKBtv16KpZvCVaHd6NCgre07JdAtgnbtmdCbDgvam3Wq
H90y6Li2Tw2mw7F+79tD6dZBWyZufJKOCNoeMjqNboP6Qw6PpSNR/6vXJ9Jt
Ua/3p8/SUUF77ts+i74d9Qa2yqStQYe3Ofwi3QH9Nbdm09HIX9nxNboj8n9U
spSOQX9PjFlOd0F8543v0rGot+GPtXRXnG/RV0V0XNC+S+98QnfD+Xq5P6Pj
Uf+6u76gu6PftwNldALyL5yzn+6J/dX2H+heeJ7bt/9M90G+Vw5W0zbEh206
R/fDeeZk1NGJuI+tt1+m+6Pe6KnX/sXvv7nv/5rTg4J2jmpyE50cdCBlQiT9
GPI/erQ9bUe+jMt30sNwPzNXdqFT4Lm3x9MjkG+u8yE6Ffm+f/URemTQtT/M
G0SnIX/cR3Z6DM7zRMMI2gG/ZB1Nj8N9FDw+iZ6AfAMOTqMnBe2vGT2HTsfz
s3adT09GvsRd2fTUoB17Arn0dOTPX/wm7UT+Rzu8S8/C+g+fWUdnoP8HJn9C
P4fn99ehzXQm1v/t20bPw/18tWcnnYX7qWi3h56P+nccPkC7kN/S4Si9APnX
jf2Fzsb6rruq6YXw6/+dpXOwf+prdfRiPP9Omf/SuXh+H94Ucp7ff8zj3feH
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
fBf1Ot2A5zG5nZu+gnzXRP2f/x+FypiV
         "]]}, {
        Hue[0.5028157299974758, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd1n98zeX7B/CT/FhaHAz7IE4sLS0dLIbRwWh+NsyMFgeL+b00WgwHi5lf
h5ZGw6HFYhgtjYaThuXnCWlp6dBiGI2GxfD9ntf12h+u/qjH83Fd93Vd932/
751eGj110PtVDAbDHG+DwfNf/mPx/Ov58+27Cb2Ujco+yr7KTZRNys2V/ZRb
Kvsrt1IOUG6tbFZuo9xWuZ1yoPKbyu2VOygHKXdU7qTcWTlYuYtyV+W3lC1P
26Zs6KbiyobuKq5s6KHiyoYQFVc29FRxZUMvFVc2vK3iyoZQFVc29FZxZUMf
FVc29FVxZUM/FVc29FdxZcMAFVc2vKPiyoawp21Rtik7lQ0D1Xplm7JT2TBI
rVe2KTuVDYPVemWbslPZEK7WK9uUncqGIWq9sk3ZqWyIUOuVbcpOZcNQtV7Z
puxUNkSq9co2ZaeyYZhar2xTdiobhqv1yjZlp7LhXbVe2absVDZEqfXKNmWn
suE9tV7ZpuxUNoxQ65Vtyk5lw0i1Xtmm7FQ2WJ+2SdmibFW2KTuUncpuZcMo
1V/ZomxVtik7lJ3KbmXDaNVf2aJsVbYpO5Sdym5lwxjVX9mibFW2KTuUncpu
ZUO06q9sUbYq25Qdyk5lt7LhfdVf2aJsVbYpO5Sdym5lw1jVX9mibFW2KTuU
ncpuZcM41V/ZomxVtik7lJ3KbmVDjOqvbFG2KtuUHcpOZbeyYbzqr2xRtirb
lB3KTmW3smGC6q9sUbYq25Qdyk5lt7JhouqvbFG2KtuUHcpOZbeyYRJc70pl
f2WLslXZpuxQdiq7lQ2TVX9li7JV2absUHYqu5UNU1R/8fJeQeyvbBWHR9I2
8cxvaIeyU9mtbJj6tE3KFmWrsk3ZoexUdisbYp+2UdmkbFa2KIcpW5VjlW3i
zvtou7JDOUvZqexSdosfH6JLlQ0fPG2jsknZrGxRDlO2Kscq25Ttyg7lLGWn
skvZrVyqbJim9q9sUjYrW5TDlK3Ksco2ZbuyQzlL2ansUnYrlyobPlT7VzYp
m5UtymHKVuVYZZuyXdmhnKXsVHYpu5VLlQ1xav/KJmWzskU5TNkqrhPakftX
tinblR3KWcpOZZeyW7lU2TD9aRuVTcpmZYtymLJVOVbZpmwX732ncv/KWcpO
cZV3K/ev7FYuFffeVLn/GU/bKB6+rXL/4qv7K/cvnlpeuX/lMGWrcqyyTRzy
v07cv7JDOUu8bBTtVHYpu5VLlQ0fPW2jsknceAdtVrYohylblWOVbcp2ZYdy
lrJT2aXsVi5VNsTDZc06c//KJmWzskU5TNkqvtqKjlW2KduVHcpZ4jc70k5l
l7JbuVR8oQdt+PhpG8X3Qyv3r2xWtiiHKVuVY5VtYvOYyv0rO5SzlJ3KLmW3
cqmyYebTNiqblM3KFuUwZatyrLJN2a7sUM5Sdiq7lN3KpcqGWWr/yiZls7JF
OUzZqhyrbFO2KzuUs5Sdyi5lt3KpsiFB7V/ZpGxWtiiHKVuVY5VtynZlh3KW
slPZpexWLlU2zFb7VzYpm5UtymHKVuVYZZuyXdmhnKXsVHYpu5VLlQ1z1P6V
TcpmZYtymLJVOVbZpmxXdihnKTuVXcpu5VJlw1y1f2WTslnZohymbFWOVbYp
25UdylnKTmWXslu5VNlge9peykZxHzvtq2xS9lc2KwcpW5RDlcOUI5WtyjHK
scrxyjblJGW7cqqyQzlDOUs5R9mpnC9eurvyPpULlN3KxcqlyuXKhnlP20vZ
qOyrbFL2VzYrBylblEOVw5Qjla3KMcqxyvHKNuUkZbtyqrJDOUM5SzlH2amc
r+wSX9tTef/iYnfl/SsXK5cqlysb5j9tL2Wjsq+ySdlf2awcpGxRDlUOU45U
tirHKMcqxyvbxOtrBfP+le3KqcoO5QzlLOUcZadyvrJLuUDZrVysXKpcrmxY
8LS9lI3KvsomZX9ls3KQskUcEE+Hik9uoMOUI5WtyjHKscrxyjblJGW7cqqy
QzlDOUs5R9mpnK/sUi5QdisXK5cqlysbEuFrByrvX9mo7KtsUvZXNisHKVvE
c2p34f0rhylHKluVY5RjxfaedLyyTTlJ/E5/2q6cquxQzhCfm0JnKecoO5Xz
lV3KBcpuccvP6WLlUuVyZcMnT9tL2ajsK26yjzYp+yublYOULcqh4hVnK+9f
OVLZqhyjHKscL07y7cr7V05StiunKjuUM5SzlHOUncr5yi7lAmW3crFyqXK5
smHh0/ZSNir7KpuU/ZXNykHKFvGON+hQ5TDlSGWrcoxyrHK8sk05SdmunKrs
UM5QzlLOUXYq5yu7lAuU3eJ10yvvX7lU3O+vyvtXNix62l7KRmVfZZOyv7JZ
OUg865/K+xffKa+8f/HxZ97i/YuPvExHKluVY2CbdW033r/Eb52m45VtyknK
duVUZYdyhnKWco6yUzlf2aVcoOxWLlYuVS5XNiQ9bS9lo7Kv+OEvtEnZX5z1
kDaLXzF25/2L/2pOW8Q13qJDlcNgW0l/OlLZKvlVBtIxyrHiwRF0vLJNOUnZ
rpwq/etMoR3KGcpZyjnKTvH8uXS+sku5QOa5vph2KxdL/q+r6FJxwHW6XNmw
+Gl7KRuVfZVN4o8MPXj/ymbYUKUKHaRsUQ5VDlOOVLYqxyjHyjyzvqDjlW3K
Scp25VRlh3KGcpZyjrJTOV/ZpVyg7Jb9BjnoYuVS5XJlQ/LT9lI2Kvsqm5T9
xY8yKu8ftv2wvfL+lS2SP+CHyvuX+MrfKu9fOVL8zh+V968coxyrHC+u/k/l
/Ytful15/zJPyN3K+1dOFdseV96/cobUW2AI4f1LfPYAOkfZqZyv7FIuUHYr
FyuXyjzzh9Hl4hpjacOSp+2lbIQNxljaV9mk7K9slnp/fkwHKVvEvZbRocph
Uu+dbDpS2Sr5z+6jY5RjJT/SSccr25STxJ8doe3KqcoO5QzlLJln7tXK+1d2
ihOMPXn/yi7xV+3pAvG4jrRb/DiELlYuVS5XNix92l6woVEobVT2FderEsr7
V/YX7+lLm6V+k6/pIPHvR2mL5N8vokPFHZ/rzfsXRzWhI5WtyjHi6TF0rPTb
MIuOFz+50of3L/7upb68f1lfxZ+2K6dy3j60QxwaRmeIB0XRWco50m/xeNqp
nK/sEt+eQxeI9y2i3crF0i/G1I/3r1yubFj2tL2Ujcq+dDfaJD7Zh/ZXNisH
KVvE1frTocphypGwLW4kbVWOUY5VjhffXU7blJPExx20XTlV2aGcIfM+k05n
KedI/o0s2qmcL/k3v6ddygXKblmf9wddLPHt1yvvX7lc8jfdr7z/5U/bS9mo
7Ktsgg33nunP+1c2KwcpW5RDlcOUI5WtyjHKscrxyjblJGW7cqqyQzlDfKMb
naWco+xUzld2KRcou5WLlUuVy+X+HvWgDSsQz+5DeykblX2VTcr+ymblIPGd
fpX3rxyqHKYcqWxVjlGOhW0+YZX3r2wT1xtcef/KduVUqb9gSOX9K2coZynn
SL0nH1Tev8Q/jKu8f2WXeM7syvuX9etSKu9fuVj8y/MDeP/K5coG+9OuKnbV
or2UvcX7B9NGZR9lX/GZVXQT2DAuizaJ3/qJ9pP8a6dof+UAyd9wizaLW1TQ
gcpBysHi1uPD+P0ph0i/qRvpUNiy5Bu6n3KY+O2TdLisb3aLjhSfrD5QHCWO
9qat4i0v0NHKMcqTlGNl/kUt6DjleOUE2LnPTNuUE5WTpF+rjvRSZbtyivTL
r3SqnE/XrnSa1O/0Hu1QTlfOkPUDR9CZylmSvyWGzpZ5ltvoHOVcZadyntQP
WELny35CltMnlF3K55QLpN4rn9KF4pZrabe4URpdJPsZnkMXS72S/XSJcqly
mXK5eMghukI8tMogvv+VT7sqbPkgjPZS9pb8Xn/SRth2+g7tI/mB92hf5Sbi
5dUH8/3Dzk1etJ/EI/5H+4t/bUwHSP6+N2izeF5POlA5SDlY5h8zmLaIZy2i
QyQ/cB0dKvGb6+l+Ms9/B+gwiU87Q4eLPyukI6Xezlt0lJxX/0e0VTma66uF
8/1LPMuHniTxXQPoWOaPoONkPssCOl76H0qkEyQ/cQVtU06U/Jlth/D9S7zN
F/RSZbvMtyyDThHnf02nyjxdM+k0qR+xi3aIa+bR6ZLvc5fOEHeMiOD7V86S
fvYxdLbEu8ymc2TeRol0ruSvXEM7JZ6zkc6T+LQ9dL7Ex56lT0i8zg3aJfOf
vEefUy6QeXo+oQslvts4lO9f6vn70kUSj7tBF0vc9yZdIn6laSTfv9jSni6T
fpv60uUSPzCNrpD9vDqXNqyCmyXTVWHnkq20l7K3slGcaB7G9y/1vulM+8KW
G8PpJsomZT9xoyjaXzlA2awcCNsmL6eDlIPF/rnD+f6VQ2T+Fj/SoeIhv9D9
JH/sNTpMOVzmCbhDR0q89V06SuKD7tNWiW96/12+f4lv/5yOEU85T08S/1NA
x8p8i67TccrxUj9qahTfv9zX1njaJjYfoBNlvfdNOkn8/cz3+P6l/6oM2i7x
ztl0itTrdpBOlfw3j9Fpyg5Zf946gu9f1j9YTWfI/L330ZmSf+YXOkvik+7Q
2bL+y+oj+f6lX7CRzpX1A5rRTokHvUbnSb2z3el8ic+OoU8ou8TJK+hzygUy
z+6v6UKJX/6WdisXSX7h33SxxMOftfL9w465dehS2c8bPnSZcrnsJ6khXSEu
DaANnz7tqrB13nu0F+yOGE97w5Y6H9JG2JmVQPtIPGsu7QubLAvpJrBj86e0
SfxcGu0nnu6g/ZUDZN7bW2mzxMuP04HSv+fvdJD0n13pYIm7L9MW2e/ue3SI
1D9eQYfChj2vjeL7l/X5fekwWb8zjA6X83gvko6U+YYMp6Mk/vu7tFXq35lO
R4ur2ugY8fJF9CSpZ/uUjpX72b+ajpP88GN0vOwn5QqdIH6ljLYpJyonyX4/
f0Avlfozaozm+5f9v/EinSL7s7WlU2XedUF0msRf6EU7lNOl3yfv0hnS75KV
zpT57i6ns2T/nTbQ2eJL2+gcqW8+QOcqO+X78PuHzmP9J3S+zB9Vewzfv+w3
uQ3tknij3vQ5qeczli6QfmGT6ULJz4il3RL/YjldJPU3p9DFsv9Vm+gS2V+G
ky6V/AOn6DI5v35/0OUyj/9NukLZkIJ5mj2iq8LWZU9oL2Vv2LnkpWi+f9h9
tCXto+yr3AQ2NfuTNin7Sb/Zzd7n+4dtqfPoAIlfX0mbYcOTn+hAma/qaTpI
+i++TgfL+holtEXyh/9Hh8h5fPHiWL5/qf/FG3Q/ibva02HK4dLPuyMdKft7
3I2Okn7f9qGtYn8rHa0cI/33xtKTlGOl/spNdJzM80YWHS/1QnLpBPH+w7RN
zvcrF50o5zPjBp0kvl9tHN+/rN83kraLC610itRzbqJTZb6WR+k02GL7mXbI
fqx9Y/j+Jd4uls6Q9bWT6UzZ3wu/0lmy/rlrdLasL7pB5yjnyv0E/EM7pd7N
euP5/iX/ZgM6X+r/Mpk+IfNUmU67ZP+5lT4n55WxkC5QLpT66zbQbonv3kIX
yXwx2+hiiY/ZTpcol4qf2U2Xybytf6LLpd7hs3SF7PdBAW34DC6roKsqe8Gm
imcn8P3D7jk1aSNs+OQF2kdcox7tq9xE2aTsJ/WnvET7Kwcom2HLxlfoQOUg
5WDYOf812qIcAtu6vU6HwtYebel+Uu/jdnSYcris3xxIRypHKVuVo5VjlCcp
x8p8vUPoOOV45QSZt+Z42qacKPn7J9BJykuV7copcp6LJ9GpymnKDuV05Qzl
TOUsmT/9Azpbvt9lcXSOcq6yUzlP6plz6HzlE8ou5XPKBcqF0u/8Xtotfs9N
F4nfuUwXK5col8r7ybtClymXK1coG1Y/7aqw83uviXz/sCX5edobtga8QBuV
fWDH2tq0r9RvPYhuIm48mjbBpuho2k/6ZcTQ/soBsO3GBNos/WeupQOlv+8p
OkjyV7joYNlfg7O0RTlE1r92jg4V1z8zie9f+oVeoMPEu/6mw6Vf+JeT+f5l
fc3TdJTk33x2Ct8/7Pb3pqNl/bEX6BiZ7+c69CRZH/EqHSvxkHA6Ts53SSQd
L+fbZRSdIP5lEW2T/v/Z6USJb9tKJ8n5H86ml8p+Nlym7TLP8mI6RfKbPaBT
pd7i1lP5/pUdyumyfpaZzlDOVM5Szpb9bGhL58h5rBpC5yo7Zf319+g85Xzl
E8ou2f+KMfQ5qb9jIl2gXKjslvt+9gO6SOYfO40ulnjGh3SJnNfuGXSpcply
ucy3fh1doWz4/GlXhU3zN9Be4kgH7S02ptNGZR9lX+UmyibpP24z7Sde8DXt
D7vnZNMBymblQOUg5WBli3KIcqhyP+Uw5XDY0PIIHakcBdtm5dNWWb/tGB2t
HKM8Sc5v2Bk6VuqVnqXjYMfUX+l45QRlm9RfW0AnKicpL1W2K6fAxm3VYvn+
YfOC6nSauK4X7VBOh10Dh9EZcKzXe3Sm5L8xgs6S/fuNprNhS5doOke+p3/f
p3Pl/DKX0E65ny4b6TzZT9AmOl/8U6VPyP5+2EK7ZL43vqbPKRdI/u+VLpT5
5m2l3XBYSCZdJPO13E4Xy3q/b+gSOR/fR3Spcpnst2vND/j+pV7om3SFsiH1
aVeFzSXtaS/Ynj+S9pb89WNoo7IP7P5wDu0rPjiXbgLbzmXQJmU/ZX/Y2m8r
HaBshrPeOE4HKgfBlhEn6GDZz+FKW2BDj9N0iHIoHBbgovvBztqldJhyuHhg
jWl8/1LvZm86Ss7j8ijaKvV7X6GjZb6W1T7k+xcvrvQk5VjZX6kXHQeXvl2b
jpd8eys6AXa98zptU06U+4+tdBL8/6+UXir1C7vRduUU+R4uv0unwrHvj6TT
xL9ZaYec16ppdLpyhnKmcpb0r7GdzlbOke9l6g90rvQPu0c75fxP36fz5Dw6
/kfnK5+Q9cfqxPH9y/l/UI8+p1wg/UcF0IWwcUEQ7Zb92LrTRfL99h9BF8t7
8FlBl0j/USfoUql/v4Auk/Vlz03n+5fvrZ8PXSH9GgTShjXwrDYz+P5h885x
tBdszJpPe8OOS5/TRth67SfaR9Z/dJ32lfx5NT/i+4dNdd+kTVLfL5r2gy3n
G8Tz/ct8+3zpADjrVCBtlvixd+lA6T9+Jh0krptMB8Nhc7+jLbAh4ic6ROar
c4IOlfW3/qb7Sb9bpo/5/iU+YSAdDrsCp9CRcOnCfXSUnFezY7RV4iFFdLTM
59dzJt8/bH8tiZ4k8bt2OlbO49MLdBzsPtBsFt8/bLv9Mp0g5xv3Jm2TeQzN
E/j+xSVd6CSpH7GQXirntS+dtst5ud6czfcv9z3yHJ0q5xH6L50m5ze/7Ry+
f6mfGkeny/zZGXSGfB87HtKZct67fOfy/cv5tDLR2TJ/XGc6R9Z/FEHnyv6v
7KadMv+mIjpP5n9wg86HvZb9z8b3D/v3nUS74KAtn9Dn5D4vrKQLZN7oL+lC
yff6nnbDoU+cdJGcz1vn6WI449BVukTm//UhXSr5exvO4/uX+i1a0uUyz9UO
dIWcz4iFtGGtx7bxX9JVYZfpPO0F+7/pP5/vH3auiKCNcL5pCu0DZ2Wn0r6w
V/9ddBM4addR2gTHfPcL7QeX/2pawPcPG7p2pwPg0Fen02bY/NLndCDsrnWQ
DpJ+5lN0MFw8+yFtgTP+mJjI9y/96tvpUKkflEf3k/nGXKPD5Dy+LKPD4Zxx
bT7h+5d5+nSio+CwhU0X8v3LfNHT6WhZfz6JjoHtfdPpSbCv6xAdK/P9fJ2O
k/vMqLGI71/qBYXTCXDkZ3G0DXYMWUInSj/fDDpJ7qfIRS+FTTNv03aJp3kl
8f3D8bufp1Pl/g9MptNk3o+SaYfMN2wnnQ6n9jtDZ8j39XE5nSnfY0aXxXz/
ch/RYXS2nE+PaDpHfGs+nSv93kqlnbL/i1/SefJ9lWXT+XJe5fvoE7Dl1Cna
JedR9Qp9TuZpWDuZ719c0poulO/t40m0WzzxA7pI5rN/QhfL/lscoEvkfjud
oUvlPGrfpcvke3v32SV8/3DQyi50BVxaMYg2fOGxc+N4uipsrfkR7QW7ty+i
veHyPmtoIxy/8SjtA4eObriU7x823w6km0j9x71oE1zceibtJ/HtC2l/WX9r
Ix0g+QG/0WY4a9B/dCBs/OyFZXz/sP3Mq3Sw1P+yP22R+Yfk0CHS74d8OlT2
u/pvuh+c8cbzy/n+xcEd6HA4bOk4OhIOajqXjpL5k76grZKf8icdDdsm36dj
YEde4Aq+f8lfF0bHwjF/TqPj4MiuyXS81MvPpRPggrP3aZvc/5f17Hz/cNTY
lnQSHLK8M71UzrN3X9oOlzaKoFPgvBFr6VQ4eEoWnSbxa8dpB1z0aimdDqcm
NVjJ9w8v3dWGzpR+10LoLLjJhfF0tsRr2OgcOCF3C50L5w4/SDth75dO0nly
P51+o/MlPreIPgG7Nt2nXbDP24ZVfP+yvk8dukDu39SWLpT+scNot5zP3xPp
Ink/C1fQxXIf9TPoEth/QC5dChsWHqfLZN57RXS5fM+tb9EVcp5ran3K95/m
cU5xc7oq7Bfbk/aCk2aH095waMQk2ghH35xF+8AVv66ifeGCod/RTST/i3za
BDuG3qT94KzDT2h/2H+4XwrfP1x8chBthqMef0QHwimjPqODxM9vo4Nh+7Af
aAucva2ADoHP/XCfDoV9Uht+xvcPm5LfosPkPDIj6HDYUt9OR8L5NbbRUbK+
zXnaKvPUvUVHw7njG6/m+5f9ju5MT5J500bTsXI/1gQ6Tpy5ho6HM3pvpROk
3spfaRsc61vjc75/OM7lSyfBJ+LN9FI45plxtB0Ojv6GToEzMwvoVFkf/IRO
k/qNm6Xy/cv9DxlPp8Ophrl0Bux8aROdCTc58wOdBZd/fo7Olvv+s9Yavn/5
nlq2o3Ol/+LJtFO+9xHr6TxZ3+hHOh82rq+zlu9f7sccSrvgIGcyfQ4Of+UP
ukC+n5vNv+D7h80vL6fdsOHhGbpI9n/WL43vH86b1psuke/pYjJdKu/r1EG6
TOZLvUuXy/4avbKO71/eu2EEbVjn8YkZ2XRVeOm6h7QXbOrht57vH45pn0Ab
4dgzLtoHTvI3buD7l3oT3qWbwFlhybQJzp9/kfaDH9/3dvD9w1WfDaAD4FbD
Q2gzfOz5aDoQ7nPHRgfBxhPr6GC47Sc/0RZ436K7dIjUd9bfyPcP15rWge4n
5/XjCDoM9u49hw6HM7/ZQEfCJQ+cdBTsOlJGW+Hc4uqb+P7hzQmN6Bh4RqfX
6Ukyz+i36Vh4ztxxdBxcVmcRHQ+vzdxCJ8AOyyHaBj8YXEwnyvmU1vuS7x9e
3yeAXgrH1+pH2+FJb06jU+Amb6+kU+V8LmbSabDt73zaAfvPuEqny3rjEzoD
Xv1ig3S+fzi8j5nOgufX6kdnw43OTqZz5PvsupjOhc/f30g74eW9s+g8OPts
Hp0PT9lbSJ+Q85xVTrvg4iovf8X3D59KbEcXyPdv7kIXyvfsHkK74ZRXY+gi
ODL8Y7oYDjmxhC6BzWO/pEvlPJ67QJfBTncRXQ43nVpGV0i/pCab+f7Xe+zl
3ZmuCo8oHUB7wfuGjKW94QvrFtBGeHWjNNoHNvyYRfvCnUwn6SZwwbhi2gQ3
+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
fcBju2HcTtqJ81qT+T19CPWrv59P52H9T6/8Qh9BP+cSN52P+LPlt+hj2H+3
gw/oE4h/OOG5O/z9x3kdbdiQdmHeqlNeps9gvuCHgfQ5+R6md6fP477sCf3p
Anw/2cZ36Qs4r1fWxNCFON9HCTPoi/D9LgtoN/YzduUq+jLWj5i4kS5Cv8kz
dtBXMO9nebl0Me5344Pj9HXc36dXfqNLMP+I94voW/C+4n/pUrnP1Ef0HcS9
vqvxL3//Me+Yqz70PczT80ILuhznOXBpW/oBziM6pztdgXmTLQPpx6iX+dYo
2rDF03/JxFi6isf2e/k2uiriv5y309U9NnxTuJH28tgxtGgnXdNjU+mFI7S3
x87aJ8/TtTzOGtLmCm302NxjZjld1+PSmKZeZfz9R//ZuY3oBohvSH6d9vU4
bOrL3ehGqHeqbBDdBP3X346mm2L9ujc/ok0ex1o7JdLNPXYlRa+m/Ty2Ba3N
oFvifD7ptJf2x3k0OXGUboX+fVcW0AGY7/Cz1+nWWP9u6EPajH4b+nnf5e8/
5vX5sCkd6LF7+Z42dHvM3+zW23QQ4pevR9KdPLYM2DOODsb5/VZ7Nt0V/b/a
v5S2YD6DfQPdHffTac0uOgTzNBj0I90L9z2wxTk6FPnu6cV0H5zHbq8Kuh/W
n9luvMfff8Rrb2lOh6HetrFv0oNw3q7/etLhyE/eMoyOwP5uT5xIRyJ/5PpZ
9HB8f9t6LKGjcL6Luq6jR2C/o9bvpK04n311D9Cj4WnbT9DRHhv7fHyBHguH
1r9Kx0h+r3/pCTjfWZ0N9/n7j3l2bq9DT8F+0xo0o2PhrlVfo6eh3v5L7ek4
1Gt8tDs9A+fx8cP+dDz2Z7z5Lj0T37P/t+PpBPRfUfsjeg7O79XzibQNvp+/
kp6P8/lm7Rd0IvZb5/EWeiHu+7L/HjoJ8YjpeXQyvs/M0z/TS1G/2pVL9HJ8
DzfTbtJ27Gfxn//Rq7Df92OqlfP3H/sx1q9Lr8Z9fzvaRKdi/ftFAfRanN/Q
mM50Gvo/2yeUXg/7lw6mHTi/oYGj6U2YvyJuCp2Oee9cmklvRv7qkoV0Bu5v
U9zn9Fasr9/hKzoT8wXcz6R34L2uCdxLZ2F/ybV+pHfjPD8fd5rOxn7Ht7lA
70G/6Df/pnOwH3P5bXqfvK+SCjoX99/jYPX/+PuP/OGPjLQTTtrSmD6E+63w
aUHnYZ5LjtfoI4i7mrSh87HfGUMD6WOYd8C4jvQJ1D/c+C36FO7nYO9etAvn
GRzanz6DePdHg+hzOK//LkbS57G/AYOsdAG+1/b7xtMXEJ/9yQd0Ie5v1tBZ
9EV4sTGRdsNFY5fQl+Xva2wKXYT7uVZvHX0F+8lquJkuxn0cDt5BX8f5ZD3/
HV0C3/jzIH0L9/FvRT5dCueMPUvfwX4HWi/SZfg9aT/tBn0P5zO25390Oc77
px41H/D3H/MGf1SfrsB8Tec3px8j/kKr12hDxv/bXlKtA13FY/N/b3Sjq3ps
GJnUn64Or5g1jPbyOKtGjbF0TY+tp3rF0t6o9337BLoW1nv7LaKNHjubjPuM
ruuxK63lRtoH66vnZ9ENEH9hcy7ti37XPsinG8Hdks/STTwurZbuppsiPsOv
hDZhntvNyunmiL9fq8ZD/v577D6aWY9u6XHYikQT7e+x5bb7dboV4n9M6kgH
YN4Re0Lo1ojXGzuINuP8lvQcSbdF/ueuyXQg5r8+dibd3mPT5uKFdBDWP0pY
RXfCvH8VrqODsb9puVvprljfLXgvbfE4dmTMEbq7x8a8X87RITj/029eont5
bHP6l9Ch+H4Kfr5P98H607erV/D3H477tz49APNe2/ASHYb9vVm7NT0I30O9
qUF0OPqtHdaDjsD5PXjUn47E+nahw+nhWP/rzhg6CvufsSaeHoF61oaf0Fbs
71nnKno05q33xEFHo/615J30WOTPn32AjkH9goJj9AScZ5s1v9CTkP/y7L/o
Kdj/4n236Fic31spD+lp8IdWr0f8/Ue9n27Up2fg+2z0oAUdj/2UPm+mZ+J7
PO3sRCeg3tBZb9NzcP9/DxxI2/C97Z0ygp6P/dybMYFOxP7/mvARvRDxXe3m
00moH/S7nU5GfEzCF/RSzHf65hZ6OfIbd8um7bjPvx4foldhnkMtf6ZTkF84
6yK9GvlFmTfoVMw37+cKei2+/z0taj7m7z/O63VzA3o9zv+11S/TDjh6YxC9
CfW3+YTS6bi/tIMR9GZ8H6H7x9AZ6Dfgt2n0VtzX/Io5dCbqN92ynN4B/+/+
WjoL89c/t4XeLe+52bd0Nu5r4ic/0ntwnuOenKJzEP+n7x/0PvneDt+gc7Ef
8+8P6QM4z/VVX3jC33+sf6GiCX0I538mqzWdh/ts9pqFPoL3lb83nM7HeXx3
+n36GPoHGuLoE8jfXXMefQrzvG1bQbvg2DFp9BnMd9o/gz6H/b5S7Xv6PPK/
uXWYLsB8hSfP0Rc8dtR65i+6EOfbM+Y2fRHrM6L+/y8d7Pa4+ODP1enLHnuZ
1r9AF3kc3+puPfoK9mdf2pgu9jhyy+qX6Os4j6O3WtIlHufMCgugb3mc33BR
G7oU5/Pylfb0HY+TPrjSmS7zOKjtTgt9D/1O3u1Bl+P+Rh3uRT/wOPTdjaF0
BebfMKU3/Rj7+yn2//1/C2sTrA==
         "]]}, {
        Hue[0.7388837074972656, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd139Yzff/P/CD0IjlxwjNzmg0GmfmRwgHoVkjxELsIMSandGINTt+jBBC
COGg0WjWaBYaZ4RY4yAWYgehWbMzM2v05vtxf9y7vpeHf7pu1/35eP5+ntfl
1bEfDR5f2WAwzPYyGJ795T+z4bl/nsreyvWVfZR9lY3KzZT9lFso+yu3Ug5Q
bqNsUn5TuZ3yW8rtlTsod1TupByo3Fm5i3JX5SDlbsrdlXsom5+3TdnQU+XK
hl4qVzb0VrmyIVjlyoY+Klc29FW5sqGfypUNISpXNrytcmVDf5UrG95RubIh
VOXKhndVrmwYoHJlw0CVKxvCnrdZ2absUDYMUvXKNmWHsmGwqle2KTuUDUNU
vbJN2aFsCFf1yjZlh7JhqKpXtik7lA3DVL2yTdmhbHhP1SvblB3KhghVr2xT
digbhqt6ZZuyQ9kwQtUr25QdyoaRql7ZpuxQNkSqemWbskPZMErVK9uUHcqG
0ape2absUDa8r+qVbcoOZYPleRuVzcoWZZuyXdmh7FI2jFHjK5uVLco2Zbuy
Q9mlbBirxlc2K1uUbcp2ZYeyS9kwTo2vbFa2KNuU7coOZZeyIUqNr2xWtijb
lO3KDmWXsmG8Gl/ZrGxRtinblR3KLmXDBDW+slnZomxTtis7lF3KholqfGWz
skXZpmxXdii7lA3Ranxls7JF2aZsV3You5QNk9T4ymZli7JN2a7sUHYpGyar
8ZXNyhZlm7Jd2aHsUjZ8oMZXNitblG3KdmWHskvZEKPGVzYrW5RtynZlh7JL
2fChGl/ZrGxRtinblR3KLmXDFDW+slnZomxTtis7lF3Kho/U+MpmZYuyTdmu
7FB2KRusz9tb2ahsUjYrhylblK3KNuUkZbtyprJD2ansUnYrGz5+3t7KRmWT
slk5TNmibFW2KScp25UzlR3KTmWXslvZMPV5eysblU3KZuUwZYuyVdmmnKRs
V85Udig7lV3KbmXDtOftrWxUNimblcOULcpWZZtykrJdOVPZoexUdim7lQ2x
z9tb2ahsUjYrhylblK3KNuUkZbtyprJD2ansUnYrGz553t7KRmWTslk5TNmi
bFW20Tez5G+Ssl05U9mh7FR2KbuVDdOft7eyUdmkbFYOU7YoW5VtyknKduVM
ZYeyU9ml7FY2zHje3spGZZOyWTlM2aJsVbYpJynblTOVHcpOZZeyW9kQ97y9
lY3KJmWzcpiyRdmqbFNOUrYrZyo7lJ3KLmW3smHm8/ZWNiqblM3KYcoWZauy
TTlJ2a6cqexQdiq7lN3KhlnP21vZqGxSNiuHKVuUrco25SRlu3KmskPZqexS
disbPn3e3spGZZOyWTlM2aJsVbYpJynblTOVHcpOZZeyW9kQ/7y9lY3KJmWz
cpiyRdmqbFNOUrYrZyo7lJ3KLmW3suGz5+2tbFQ2ia1X/+L6lcOULcpWZZty
kthZ+JTrF2c+MvSU9Ss7xHmDKomdyi5lt7Jh9vP2VjYqm5TNYmskHaZsUbYq
25STlO3KmcoOZaeyS9mtbPj8eXsrG5VNymblMGWLslXZppykbFfOVHYoO5Vd
ym5lg+15eyp7K/soG5X9xWWLq3K/lAOVzWL3uGriELHlAh0mzmxaXRyhbFGO
Fkd8TFuV48SujbRNOUE5STlFXHietiunK2eK7ame4mxlh3KeslO5UNmlXKLs
Vi5TNsx53p7K3so+YsPKGjx/cfbimjx/ZZPYeZsOFGf8Wp/nLw4e+hLPXzlM
nLK9Ac9fnLOlCc9fOVqc76KtynHKNnF4dV+ev9h3GJ0kDvmFThFHeL7M81dO
F0d3pDOVs8Vxrzfl+SvncX5m2iluM8PI81d2ic1ldIm4XftXef7i8nC6TNkw
F340gvYUP/yA9lb2Ee9cQhvFCT/Q/mJbEW0S9/JqxvMXTzDRZnFOAh2iHCbu
uIGOEKcW0Ra2b9mc5y82dKat4lnT6Thlm3KCOCKPThL71/Hj+SvbxZ4z6HSu
dyudqZwtPuCkHeJqVV/j+Ss7lQuVXcol4tNNaLd42AS6TNkw73l7ig9toL3F
aW+24PmLTd+34/mLd1+g/cUht2mTOH/AWzx/8eIptFlcupAOEa/aTIcpR4hb
H6Qt4m7X6GjxDa/2PH/lOHG112ibcgL9Bp0kfncgnaJsF98Pp9PFe0fQmeLT
Y+hsZYdynrJTuVDZpVwi7hlNu8WWyXSZsmH+8/ZU9lb2UTYq+yublAOVzcoh
ymHKEcoW5WhxyNSK81eOU7YpJ4jruSrOX9z8ccX5K9uV08Vd/ldx/srZyg7l
PGWncqF4bIMOPH/lEmW3uE5LukzZ8MXz9lT2Fo95nfZRNorXd6P9lU3ivj4d
ef7KZuUQ5TDlCGWLcrSyVTlO2aacoJyknKJsV05XzlTOVnYo5yk7lQuVXcol
YoeRdiuXKRsWPG9PZW9lH2Wjsr+ySTlQ2awcIs4OqDh/5Qhli3K0slU5Ttmm
nKCcpJyibFdOV84U/96x4vzF5aEV5y8OH1xx/spO5ULxyYiK81cuUXYrlykb
Fj5vT2VvZR9lo9jwecX5K5uUA8Wm4orzVw5RDhOP/q4Tz1/ZohytbFWOU7Yp
J4iTDtJJyinKduV05UzlbGWHuN1VOk9c/XfaKR7/kC5UdimXKLuVy8Q3PQJ5
/gnP21PZW9lHfKwWbRT7R9P+yiZxj1g6UNmsHCJ+r1Fnnr9yhLJFOVrZqhyn
bFNOUE5STlG2K6eLW4fQmcrZyg7lPGWncqE44kPapVyi7FYuUzYsgtfF0Z7K
3uInm2gfZaOyv3hgBm0Sx+2jA8WND9Nm5RDlMOUI8YyjFecv3uvowvMX78mj
rcpxyjblBOUk5RRlu3K6cqZytrjPXdqhnKfsVC5UdimXKLuVy8QHanXl+S9+
3p7K3so+ykZlf2WTcqCyWTlEOUw5QtmiHK1sVY4Tf72PtonX36YTxB4Pg3j+
yiniSgHdeP7K6cqZytnKDuU8ZadyobJLuUTZrVymbFgC70ikPZW9lX2Ujcr+
yiblQGWzcoj4xIHuPH9xv6N0hLj6OdqiHK1sVY5TtiknKCcpp4hDO/fg+Sun
K2cqZ4un9qQdynnKTuVCZZdyibJbuUzZkPi8PZW9lX3Elz+ijcr+yibx1c/o
QPGURNrM/n+gQ5TDYNvTBmaev+RbX6EtytHS/t9etFXyUW/TcZInDKJtygnK
SVK/OZxOkbzluJ48f/HGL+h08amFdKZytnjsUtqhnKfsVC4UP06hXTK/Fofp
EmW3cpmyYenz9lT2VvZRNir7K5tg2wa/Xjx/yW+1oM3KIeLHbekw5QjxqTdp
i/Tv2Z6OVrZK+2596TjJn7xD25QTlJOkfuNxOkXZrpyunKmcrewQj/+ZzlN2
itNv0YXiub/RLuUSZbdymazvpX9ow7Ln7ansreyjbIQNlctpf8lHPAnl+SsH
Kpul/krVATx/5TDlCGWLcrSyVTlO2aacoJyknCL+x4u2w+YG8WE8f8knrqcz
YUfCRjqb+7WFdijnKTuVC5VdyiXKbuUyZcPy5+0JO3al0d7ixrtoH2WjOOQE
7a9sgs1L7tOBymblEKl/e9Ugnr9yhLJFOVr667+RtirHifvspW3KCcpJyinK
duV0cey/dKZytrJDOU/ZqVyo7FIuUXYrl4kbHhjC80963h7Knspeyt7K9WHD
ychw3hdlX2Wjsp+yv3KAskm5vXKgcpCyWTlYOUQ5VDx3FB2mHA7bWi+lI5Qj
lS3KUcrRyjHKVuVY5TjleGWb8nzYEbiNTlBOFMe76CQ5/1uVh4qTlVNkf7oO
oFOlvtpm2i756W10mnK6coZypoy3ewedpZwt6/u6hM5Rdog7vjpMnKucp5yv
7FQuUC5ULpL55/rTLtmPlW/RxeJxg+gScffldKms7/gT2q38QNpP9XiP7125
XOazqh5tWIF8YCDtAdsejKE9YfO0phF8/+JfmtPe0n5YF7q+eMZq2kfZV+of
b6KNyn7K/mL7l3SA+L9c2qTcXjlQ1lflNB0k80k+R5uVg5VDlEOl/+VNRvD9
K4fLeE8rHCEeNIaOVLYoR4kDJtPR4iHT6RhlK2wwltOxMh9r1Ei+f8mj99Dx
kk8ppm3K82W97iaRfP+S151AJ0q+LJpOkvl0XEonS77kBzpFPGTEKL5/6e+z
CbRdfPsCnSb9NfAczfcv8y/9ns6QfN1VOlPyqwPH8P3Dlt2GsXz/0v7f5nSO
skM5VzlP3PA1Ol+cHEw7lQtk/DkRdKE4cwJdBLvuTaZdkj/8kC6W9eyMpUsk
P/QJXSr5u7Npt7juZvqB7Peir+gyqb93ny6XPOMf2rAS+Xv/9x9a0AO2f/YG
7Qkb+gbSXrDDGEp7i/cNoutL+zeG0z6wq/c42lc8awlthI1eZ2g/secl2l/m
8+k1OkDqYx7TJpn/XY8ovn/Y3OUFOlD6e7cGHSTtD/rRZun/fhc6GLYNHEaH
SH+/LKFDZX1dttBh4lNZdLjML/sYHSH93cmnIyU/e5q2iGt/OJ7vX1zlMzpa
9nfCPDpG1tPmNG2V+T88Q8dK+4LzdJz09+giHS9uc422yfpq3aTni+11JvD9
S3+LX6ETxXmv0UmynyO70MmS/9OLTpH5TR9Op8r4uZNpu/jqAjpNvGApnS79
TVpDZ0i+YT2dKf2PSqWzZL9vZNHZsp6pR+kcOa/zx2mH1K/4ic6V8YY0m8j3
L/ud6U/nS/t5HWincoGM/2pnulD6K7PQRZJn9p7E9y/r+SGNLpb5xW2nS6T/
/ul0qbJb1nfoHP1Axou9RZdJ/2khk/n+5bxMS2nDKuR5ybQHbPBKoT1hy5wD
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
Q6qdo8vl9zq4wk/+v/8f+9A+1Q==
         "]]}}}, {}, {}, {}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 3199.}, {0, 2.352899194*^10}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5], 
       Thickness[Tiny], 
       Dashing[{Small, Small}]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 3199.}, {0, 2.352899194*^10}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\:52a8\:753b\"", "\"\:756a\:5267\"", "\"\:56fd\:521b\"", 
       "\"\:97f3\:4e50\"", "\"\:821e\:8e48\"", "\"\:6e38\:620f\"", 
       "\"\:79d1\:6280\"", "\"\:751f\:6d3b\"", "\"\:9b3c\:755c\"", 
       "\"\:65f6\:5c1a\"", "\"\:5e7f\:544a\"", "\"\:5a31\:4e50\"", 
       "\"\:5f71\:89c6\"", "\"\:653e\:6620\:5385\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #12}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #13}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #14}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.75, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.647624, 0.37816, 0.614037]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.571589, 0.586483, 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.915, 0.3325, 0.2125]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.915, 0.3325, 0.2125], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2672148173956843, 0.34800444289592275`, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.40082222609352647, 0.5220066643438841, \
0.85]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6485525936249404, 0.4144296347913687, 
                    0.048907997212660946`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    
                    "RGBColor[0.9728288904374106, 0.621644452187053, \
0.07336199581899142]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4911884484706007, 0.23866666666666667`, 
                    0.3353511049170246], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.736782672705901, 0.358, 0.5030266573755369]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11, ",", #12, ",", #13, 
               ",", #14}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                 "True", ",", "True", ",", "True", ",", "True", ",", "True"}],
                "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7325557125744667`*^9, 3.73255573194989*^9}, {
  3.732556034618621*^9, 
  3.7325560576903734`*^9}},ExpressionUUID->"c855b533-54cf-483c-9f75-\
27ae0316adce"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"BarChart", ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", "12"}], "]"}]}], ",", 
    RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameTicksStyle", "\[Rule]", "16"}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"FontSize", "\[Rule]", "16"}], "}"}]}], ",", 
    RowBox[{"GridLinesStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Gray", ",", "Thin", ",", " ", "Dashed"}], "]"}]}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7255537590635843`*^9, 3.725553843494896*^9}, {
  3.7255539287601967`*^9, 3.725553954104521*^9}, {3.7255539848127537`*^9, 
  3.725554029545247*^9}, {3.725554070563734*^9, 3.725554092589033*^9}, {
  3.7306590914340234`*^9, 3.7306590922186193`*^9}, {3.732551843241559*^9, 
  3.7325518498130875`*^9}},ExpressionUUID->"405442e2-488c-4cbb-9e73-\
14d43634e585"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\n", 
  RowBox[{
   RowBox[{"BarChart", "[", 
    RowBox[{
     RowBox[{"d", "\[LeftDoubleBracket]", 
      RowBox[{
       RowBox[{"1", ";;", 
        RowBox[{"Length", "@", "nn"}]}], ",", "u", ",", 
       RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"ChartStyle", "\[Rule]", "\"\<DarkRainbow\>\""}], ",", 
     RowBox[{"ChartLabels", "\[Rule]", 
      RowBox[{"nn", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"None", ",", "\"\<\:603b\:64ad\:653e\:91cf\>\""}], "}"}]}], 
     ",", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}], ",", "\n", 
   RowBox[{"{", 
    RowBox[{"u", ",", "1", ",", "3199"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.732476070568533*^9, 3.7324760742025104`*^9}, {
   3.7324762153919845`*^9, 3.7324762210619946`*^9}, 3.7324763689175453`*^9, {
   3.7324764012756147`*^9, 3.732476407035963*^9}, {3.7324764532163014`*^9, 
   3.7324764766512356`*^9}, {3.7324765516543727`*^9, 3.732476580231262*^9}, {
   3.732476894800971*^9, 3.7324768950136566`*^9}, {3.732521988766253*^9, 
   3.7325220866266794`*^9}, {3.7325221273414583`*^9, 
   3.7325221315596886`*^9}, {3.7325507495655546`*^9, 
   3.7325507497731934`*^9}, {3.732551445618997*^9, 3.7325515226030526`*^9}, {
   3.7325516199023333`*^9, 3.732551690482348*^9}, 
   3.732551856929658*^9},ExpressionUUID->"cf70d93f-3146-4902-94f8-\
7fbb4cdcdb06"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`u$$ = 3199., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"\:65e0\:6807\:9898\"", Typeset`specs$$ = {{
      Hold[$CellContext`u$$], 1, 3199}}, Typeset`size$$ = {
    1080., {308., 324.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`u$55504$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`u$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`u$$, $CellContext`u$55504$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> BarChart[
        Part[$CellContext`d, 
         Span[1, 
          Length[$CellContext`nn]], $CellContext`u$$, -1], ChartStyle -> 
        "DarkRainbow", ChartLabels -> Part[$CellContext`nn, All, 1], 
        FrameLabel -> {None, "\:603b\:64ad\:653e\:91cf"}, GridLines -> 
        Automatic], "Specifications" :> {{$CellContext`u$$, 1, 3199}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{1213., {457., 474.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.732551509426014*^9, 3.7325515231314497`*^9}, 
   3.7325516909536304`*^9, 
   3.732551871622265*^9},ExpressionUUID->"3d45c2db-4a12-4dca-bb50-\
49e5210fe5ce"],

Cell[BoxData[
 TemplateBox[{
  "Symbol","argx",
   "\"\:8c03\:7528 \\!\\(\\*RowBox[{\\\"Symbol\\\"}]\\) \:65f6\:4f7f\:7528\
\:4e86 \\!\\(\\*RowBox[{\\\"0\\\"}]\\) \:4e2a\:53c2\:6570\:ff1b\:5e94\:8be5\
\:7528 1 \:4e2a\:53c2\:6570.\"",2,1,1,21248411926899176500,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7329527935235925`*^9},ExpressionUUID->"78acae46-265a-4b67-94bb-\
fea3d5673951"],

Cell[BoxData[
 TemplateBox[{
  "Symbol","argx",
   "\"\:8c03\:7528 \\!\\(\\*RowBox[{\\\"Symbol\\\"}]\\) \:65f6\:4f7f\:7528\
\:4e86 \\!\\(\\*RowBox[{\\\"0\\\"}]\\) \:4e2a\:53c2\:6570\:ff1b\:5e94\:8be5\
\:7528 1 \:4e2a\:53c2\:6570.\"",2,1,2,21248411926899176500,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7329527935881243`*^9},ExpressionUUID->"3e968387-a44f-4774-b97c-\
2c9444326dee"],

Cell[BoxData[
 TemplateBox[{
  "BarChart","ldata",
   "\"\\!\\(\\*RowBox[{\\\"Symbol\\\", \\\"[\\\", \\\"]\\\"}]\\) \:4e0d\:662f\
\:4e00\:4e2a\:6709\:6548\:7684\:6570\:636e\:96c6\:6216\:8005\:6570\:636e\:96c6\
\:5217\:8868.\"",2,1,3,21248411926899176500,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.732952793807984*^9},ExpressionUUID->"4dbdfd35-bf7b-4ed7-a2d5-\
feceedeae812"],

Cell[BoxData[
 TemplateBox[{
  "BarChart","ldata",
   "\"\\!\\(\\*RowBox[{\\\"Symbol\\\", \\\"[\\\", \\\"]\\\"}]\\) \:4e0d\:662f\
\:4e00\:4e2a\:6709\:6548\:7684\:6570\:636e\:96c6\:6216\:8005\:6570\:636e\:96c6\
\:5217\:8868.\"",2,1,4,21248411926899176500,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.732952793870533*^9},ExpressionUUID->"90a5a2cb-72b7-40d7-9851-\
96e9e4542cfd"],

Cell[BoxData[
 TemplateBox[{
  "BarChart","ldata",
   "\"\\!\\(\\*RowBox[{\\\"Symbol\\\", \\\"[\\\", \\\"]\\\"}]\\) \:4e0d\:662f\
\:4e00\:4e2a\:6709\:6548\:7684\:6570\:636e\:96c6\:6216\:8005\:6570\:636e\:96c6\
\:5217\:8868.\"",2,1,5,21248411926899176500,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7329527939238987`*^9},ExpressionUUID->"46c4f8b8-6451-4ce9-8a3a-\
f7201d94b2c5"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"\:5728\:672c\:6b21\:8ba1\:7b97\:4e2d\:ff0c\\!\\(\\*StyleBox[RowBox[{\\\"\
BarChart\\\", \\\"::\\\", \\\"ldata\\\"}], \\\"MessageName\\\"]\\) \:7684\
\:8fdb\:4e00\:6b65\:8f93\:51fa\:5c06\:88ab\:6291\:5236.\"",2,1,6,
   21248411926899176500,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.732952793970778*^9},ExpressionUUID->"dd8beff3-1cd4-4e52-94dd-\
41e46915e18b"]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.2871198568872987, 0.}, {14.435461676069906`, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.602], 
     Thickness[Small]}], 
     {RGBColor[0.237736, 0.340215, 0.575113], EdgeForm[{Opacity[0.602], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0.564538323930095, 0.}, {1.435461676069905, 
            69.98909704}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{143.62771726297578`, 201.44111320958973`}, {
           99.28067263792607, 266.9644563235999}}],
         StatusArea[#, 69.98909704]& ,
         TagBoxNote->"69.98909704"],
        StyleBox["69.98909704`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[69.98909704, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2499783076923077, 0.34381346153846154`, 0.5620653076923077], 
      EdgeForm[{Opacity[0.602], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{1.564538323930095, 0.}, {2.435461676069905, 
            85.83954778}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{208.2871339708354, 266.10052991744936`}, {
           61.644983816406324`, 266.9644563235999}}],
         StatusArea[#, 85.83954778]& ,
         TagBoxNote->"85.83954778"],
        StyleBox["85.83954778`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[85.83954778, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2594523846153846, 0.38696353846153847`, 0.464862], EdgeForm[{
      Opacity[0.602], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{2.564538323930095, 0.}, {3.435461676069905, 
            27.78405033}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{272.946550678695, 330.759946625309}, {
           199.49334360423234`, 266.9644563235999}}],
         StatusArea[#, 27.78405033]& ,
         TagBoxNote->"27.78405033"],
        StyleBox["27.78405033`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[27.78405033, {}], "Tooltip"]& ]}, 
     {RGBColor[0.27274623076923077`, 0.4396843076923077, 0.3499803076923077], 
      EdgeForm[{Opacity[0.602], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{3.564538323930095, 0.}, {4.435461676069905, 
            70.46741431}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{337.60596738655465`, 395.41936333316863`}, {
           98.14494468753728, 266.9644563235999}}],
         StatusArea[#, 70.46741431]& ,
         TagBoxNote->"70.46741431"],
        StyleBox["70.46741431`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[70.46741431, {}], "Tooltip"]& ]}, 
     {RGBColor[
      0.3010786153846154, 0.48318346153846153`, 0.26913476923076923`], 
      EdgeForm[{Opacity[0.602], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{4.564538323930095, 0.}, {5.435461676069905, 
            27.33628229}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{402.26538409441434`, 460.07878004102827`}, {
           200.55653473324764`, 266.9644563235999}}],
         StatusArea[#, 27.33628229]& ,
         TagBoxNote->"27.33628229"],
        StyleBox["27.33628229`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[27.33628229, {}], "Tooltip"]& ]}, 
     {RGBColor[0.3971747692307692, 0.5433180769230769, 0.24637246153846154`], 
      EdgeForm[{Opacity[0.602], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{5.564538323930095, 0.}, {6.435461676069905, 
            235.2899194}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{466.924800802274, 
           524.7381967488878}, {-293.21354814675504`, 266.9644563235999}}],
         StatusArea[#, 235.2899194]& ,
         TagBoxNote->"235.2899194"],
        StyleBox["235.2899194`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[235.2899194, {}], "Tooltip"]& ]}, 
     {RGBColor[0.5446844615384616, 0.6279339230769231, 0.2556513846153846], 
      EdgeForm[{Opacity[0.602], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{6.564538323930095, 0.}, {7.435461676069905, 
            69.43238451}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{531.5842175101336, 589.3976134567475}, {
           100.60254416611207`, 266.9644563235999}}],
         StatusArea[#, 69.43238451]& ,
         TagBoxNote->"69.43238451"],
        StyleBox["69.43238451`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[69.43238451, {}], "Tooltip"]& ]}, 
     {RGBColor[0.6972379230769231, 0.7090673846153845, 0.2793583076923077], 
      EdgeForm[{Opacity[0.602], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{7.564538323930095, 0.}, {8.435461676069906, 
            220.12568256}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{596.2436342179932, 
           654.0570301646072}, {-257.2072219994606, 266.9644563235999}}],
         StatusArea[#, 220.12568256]& ,
         TagBoxNote->"220.12568256"],
        StyleBox["220.12568256`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[220.12568256, {}], "Tooltip"]& ]}, 
     {RGBColor[0.8230086923076924, 0.7608693846153846, 0.3070638461538462], 
      EdgeForm[{Opacity[0.602], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{8.564538323930096, 0.}, {9.435461676069906, 
            41.09582402}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{660.9030509258529, 718.7164468724669}, {
           167.885550205965, 266.9644563235999}}],
         StatusArea[#, 41.09582402]& ,
         TagBoxNote->"41.09582402"],
        StyleBox["41.09582402`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[41.09582402, {}], "Tooltip"]& ]}, 
     {RGBColor[0.8728871538461538, 0.7337563076923076, 0.32509307692307693`], 
      EdgeForm[{Opacity[0.602], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{9.564538323930096, 0.}, {10.435461676069906`, 
            24.31315129}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{725.5624676337126, 783.3758635803265}, {
           207.73472918645405`, 266.9644563235999}}],
         StatusArea[#, 24.31315129]& ,
         TagBoxNote->"24.31315129"],
        StyleBox["24.31315129`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[24.31315129, {}], "Tooltip"]& ]}, 
     {RGBColor[0.832827923076923, 0.5840327692307692, 0.3106703846153846], 
      EdgeForm[{Opacity[0.602], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{10.564538323930096`, 0.}, {11.435461676069906`, 
            2.40740608}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{790.2218843415721, 848.0352802881862}, {
           259.7482538268932, 266.9644563235999}}],
         StatusArea[#, 2.40740608]& ,
         TagBoxNote->"2.40740608"],
        StyleBox["2.40740608`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.40740608, {}], "Tooltip"]& ]}, 
     {RGBColor[0.7745283846153845, 0.3897886153846154, 0.2699983846153846], 
      EdgeForm[{Opacity[0.602], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{11.564538323930096`, 0.}, {12.435461676069906`, 
            94.29024803}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{854.8813010494318, 912.6946969960458}, {
           41.5794392997247, 266.9644563235999}}],
         StatusArea[#, 94.29024803]& ,
         TagBoxNote->"94.29024803"],
        StyleBox["94.29024803`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[94.29024803, {}], "Tooltip"]& ]}, 
     {RGBColor[0.72987, 0.239399, 0.230961], EdgeForm[{Opacity[0.602], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{12.564538323930096`, 0.}, {13.435461676069906`, 
            87.43950625}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{919.5407177572914, 977.3541137039055}, {
           57.84600421058886, 266.9644563235999}}],
         StatusArea[#, 87.43950625]& ,
         TagBoxNote->"87.43950625"],
        StyleBox["87.43950625`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[87.43950625, {}], "Tooltip"]& ]}, 
     {RGBColor[0.72987, 0.239399, 0.230961], EdgeForm[{Opacity[0.602], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{13.564538323930096`, 0.}, {14.435461676069906`, 
            11.95971098}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{984.2001344651511, 1042.013530411765}, {
           237.06703291767138`, 266.9644563235999}}],
         StatusArea[#, 11.95971098]& ,
         TagBoxNote->"11.95971098"],
        StyleBox["11.95971098`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[11.95971098, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
   StyleBox[{
     {Thickness[Tiny], 
      LineBox[{{0.2871198568872987, 0.}, {14.718428512453555`, 0.}}], 
      StyleBox[{}, "GraphicsLabel",
       StripOnInput->False]}, 
     StyleBox[{
       {Thickness[Tiny], 
        LineBox[{{0.564538323930095, 0.}, 
          Offset[{-1.102182119232618*^-15, -6.}, {0.564538323930095, 0.}]}], 
        LineBox[{{14.435461676069902`, 0.}, 
          Offset[{-1.102182119232618*^-15, -6.}, {14.435461676069902`, 
           0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
          LineBox[{{1.435461676069905, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {1.435461676069905, 0.}]}],
           LineBox[{{1.564538323930095, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {1.564538323930095, 0.}]}],
           LineBox[{{2.435461676069905, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {2.435461676069905, 0.}]}],
           LineBox[{{2.564538323930095, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {2.564538323930095, 0.}]}],
           LineBox[{{3.4354616760699046`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {3.4354616760699046`, 
             0.}]}], LineBox[{{3.5645383239300945`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {3.5645383239300945`, 
             0.}]}], LineBox[{{4.435461676069904, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {4.435461676069904, 0.}]}],
           LineBox[{{4.564538323930094, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {4.564538323930094, 0.}]}],
           LineBox[{{5.435461676069904, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {5.435461676069904, 0.}]}],
           LineBox[{{5.564538323930094, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {5.564538323930094, 0.}]}],
           LineBox[{{6.435461676069904, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {6.435461676069904, 0.}]}],
           LineBox[{{6.564538323930094, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {6.564538323930094, 0.}]}],
           LineBox[{{7.435461676069904, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {7.435461676069904, 0.}]}],
           LineBox[{{7.564538323930094, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {7.564538323930094, 0.}]}],
           LineBox[{{8.435461676069906, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {8.435461676069906, 0.}]}],
           LineBox[{{8.564538323930094, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {8.564538323930094, 0.}]}],
           LineBox[{{9.435461676069902, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {9.435461676069902, 0.}]}],
           LineBox[{{9.564538323930094, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {9.564538323930094, 0.}]}],
           LineBox[{{10.435461676069902`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {10.435461676069902`, 
             0.}]}], LineBox[{{10.564538323930094`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {10.564538323930094`, 
             0.}]}], LineBox[{{11.435461676069902`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {11.435461676069902`, 
             0.}]}], LineBox[{{11.564538323930094`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {11.564538323930094`, 
             0.}]}], LineBox[{{12.435461676069902`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {12.435461676069902`, 
             0.}]}], LineBox[{{12.564538323930094`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {12.564538323930094`, 
             0.}]}], LineBox[{{13.435461676069902`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {13.435461676069902`, 
             0.}]}], LineBox[{{13.564538323930094`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {13.564538323930094`, 
             0.}]}]}, {}}}, 
       StyleBox[
        {Thickness[Tiny], 
         InsetBox["\<\"\:52a8\:753b\"\>", 
          Offset[{0., -1.9999999999999998}, {1., 0.}], {0, 1}, Automatic, {1, 
          0}], InsetBox["\<\"\:756a\:5267\"\>", 
          Offset[{0., -1.9999999999999998}, {1.9999999999999998, 0.}], {0, 1},
           Automatic, {1, 0}], 
         InsetBox["\<\"\:56fd\:521b\"\>", 
          Offset[{0., -1.9999999999999998}, {2.9999999999999996, 0.}], {0, 1},
           Automatic, {1, 0}], 
         InsetBox["\<\"\:97f3\:4e50\"\>", 
          Offset[{0., -1.9999999999999998}, {3.9999999999999996, 0.}], {0, 1},
           Automatic, {1, 0}], 
         InsetBox["\<\"\:821e\:8e48\"\>", 
          Offset[{0., -1.9999999999999998}, {4.999999999999999, 0.}], {0, 1}, 
          Automatic, {1, 0}], 
         InsetBox["\<\"\:6e38\:620f\"\>", 
          Offset[{0., -1.9999999999999998}, {5.999999999999999, 0.}], {0, 1}, 
          Automatic, {1, 0}], 
         InsetBox["\<\"\:79d1\:6280\"\>", 
          Offset[{0., -1.9999999999999998}, {6.999999999999999, 0.}], {0, 1}, 
          Automatic, {1, 0}], 
         InsetBox["\<\"\:751f\:6d3b\"\>", 
          Offset[{0., -1.9999999999999998}, {8., 0.}], {0, 1}, Automatic, {1, 
          0}], InsetBox["\<\"\:9b3c\:755c\"\>", 
          Offset[{0., -1.9999999999999998}, {9., 0.}], {0, 1}, Automatic, {1, 
          0}], InsetBox["\<\"\:65f6\:5c1a\"\>", 
          Offset[{0., -1.9999999999999998}, {10., 0.}], {0, 1}, Automatic, {1,
           0}], InsetBox["\<\"\:5e7f\:544a\"\>", 
          Offset[{0., -1.9999999999999998}, {11., 0.}], {0, 1}, Automatic, {1,
           0}], InsetBox["\<\"\:5a31\:4e50\"\>", 
          Offset[{0., -1.9999999999999998}, {12., 0.}], {0, 1}, Automatic, {1,
           0}], InsetBox["\<\"\:5f71\:89c6\"\>", 
          Offset[{0., -1.9999999999999998}, {13., 0.}], {0, 1}, Automatic, {1,
           0}], InsetBox["\<\"\:653e\:6620\:5385\"\>", 
          Offset[{0., -1.9999999999999998}, {14., 0.}], {0, 1}, Automatic, {1,
           0}]}, "GraphicsLabel",
        StripOnInput->False]}, "GraphicsTicks",
      StripOnInput->False]}, "GraphicsAxes",
    StripOnInput->False,
    Antialiasing->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.2871198568872987, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  Frame->{{True, False}, {False, False}},
  FrameLabel->{{
     FormBox[
     "\"\:603b\:64ad\:653e\:91cf\:ff08\:4ebf\:ff09\"", TraditionalForm], 
     None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {{{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
       FormBox["\"\:52a8\:753b\"", TraditionalForm], 0}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
       FormBox["\"\:756a\:5267\"", TraditionalForm], 0}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
       FormBox["\"\:56fd\:521b\"", TraditionalForm], 0}, {4., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
       FormBox["\"\:97f3\:4e50\"", TraditionalForm], 0}, {5., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
       FormBox["\"\:821e\:8e48\"", TraditionalForm], 0}, {6., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
       FormBox["\"\:6e38\:620f\"", TraditionalForm], 0}, {7., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
       FormBox["\"\:79d1\:6280\"", TraditionalForm], 0}, {8., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {8., 
       FormBox["\"\:751f\:6d3b\"", TraditionalForm], 0}, {9., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {9., 
       FormBox["\"\:9b3c\:755c\"", TraditionalForm], 0}, {10., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {10., 
       FormBox["\"\:65f6\:5c1a\"", TraditionalForm], 0}, {11., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {11., 
       FormBox["\"\:5e7f\:544a\"", TraditionalForm], 0}, {12., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {12., 
       FormBox["\"\:5a31\:4e50\"", TraditionalForm], 0}, {13., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {13., 
       FormBox["\"\:5f71\:89c6\"", TraditionalForm], 0}, {14., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {14., 
       FormBox["\"\:653e\:6620\:5385\"", TraditionalForm], 0}}, {{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {8., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {9., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {10., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {11., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {12., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {13., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {14., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}}}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{35.666667, 0.333333}, {9.99514, 0.5}},
  PlotRange->{{-0.013532406770331629`, 
   15.019080776111185`}, {-5.059998266666667, 247.93991506666669`}},
  PlotRangePadding->Automatic,
  Ticks->{None, Automatic}]], "Input",
 CellChangeTimes->{{3.7325509203686504`*^9, 
  3.732550930416967*^9}},ExpressionUUID->"bb173521-eb2f-4de3-aef9-\
d5dc8104927f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"d", "\[LeftDoubleBracket]", 
       RowBox[{"i", ",", 
        RowBox[{"-", "1"}], ",", 
        RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], 
      RowBox[{"d", "\[LeftDoubleBracket]", 
       RowBox[{"i", ",", 
        RowBox[{"-", "1"}], ",", 
        RowBox[{"-", "2"}]}], "\[RightDoubleBracket]"}]], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "@", "nn"}]}], "}"}]}], "]"}], "/", 
   SuperscriptBox["10", "4"]}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.7324741372479506`*^9, 3.7324741473716836`*^9}, {
  3.7324742096744184`*^9, 3.7324742464627047`*^9}, {3.732474381445541*^9, 
  3.732474406358308*^9}, {3.732474453576537*^9, 3.7324744676154823`*^9}, {
  3.7324746519581327`*^9, 3.732474655307922*^9}, {3.7324757551054926`*^9, 
  3.7324757905188217`*^9}, {3.7324758408359013`*^9, 3.7324758536449394`*^9}, {
  3.7324759128501277`*^9, 3.7324759170887127`*^9}, {3.7324761699363956`*^9, 
  3.732476179708661*^9}, {3.7325506877781267`*^9, 3.7325506939199333`*^9}, {
  3.73255072484124*^9, 3.732550725034318*^9}, {3.732550825807988*^9, 
  3.7325508327755146`*^9}},ExpressionUUID->"97ed1a9d-47e0-4afb-8515-\
68abc26fceaf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.7810463750454751`", ",", "6.6405356226695345`", ",", 
   "3.850606379322292`", ",", "0.47246605427759386`", ",", 
   "1.226007188859488`", ",", "0.4557702234667605`", ",", 
   "0.7743592991859637`", ",", "0.9032746453593679`", ",", 
   "3.3440057301414225`", ",", "0.7271396785567954`", ",", 
   "0.32341959267021336`", ",", "0.5907843647753346`", ",", 
   "0.8961830651806725`", ",", "1.3987475269873573`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7325508477724514`*^9},ExpressionUUID->"49af714d-85bf-4180-8905-\
d0e76c3de2b0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{"%15", ",", 
   RowBox[{"ChartStyle", "\[Rule]", "\"\<DarkRainbow\>\""}], ",", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{"nn", "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "Left"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "None", ",", 
      "\"\<\:6bcf\:4e2a\:89c6\:9891\:5e73\:5747\:64ad\:653e\:91cf\:ff08\:4e07\
\:ff09\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.732476070568533*^9, 3.7324760742025104`*^9}, {
   3.7324762153919845`*^9, 3.7324762210619946`*^9}, 3.7324763689175453`*^9, {
   3.7324764012756147`*^9, 3.732476407035963*^9}, {3.7324764532163014`*^9, 
   3.7324764766512356`*^9}, {3.7324765516543727`*^9, 3.732476580231262*^9}, {
   3.732476894800971*^9, 3.7324768950136566`*^9}, {3.7324771690752087`*^9, 
   3.732477187045211*^9}, {3.7325508527497787`*^9, 
   3.73255085344776*^9}},ExpressionUUID->"f2ada299-d683-4bdd-83c2-\
6d9a5c8f32f4"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.2871198568872987, 0.}, {14.435461676069906`, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.602], 
     Thickness[Small]}], 
     {RGBColor[0.237736, 0.340215, 0.575113], EdgeForm[{Opacity[0.602], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0.564538323930095, 0.}, {1.435461676069905, 
            0.7810463750454751}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{110.93516724336796`, 170.71837333626263`}, {
           216.2612660921037, 285.7703616625207}}],
         StatusArea[#, 0.7810463750454751]& ,
         TagBoxNote->"0.7810463750454751"],
        StyleBox["0.7810463750454751`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.7810463750454751, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2499783076923077, 0.34381346153846154`, 0.5620653076923077], 
      EdgeForm[{Opacity[0.602], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{1.564538323930095, 0.}, {2.435461676069905, 
            6.6405356226695345`}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{177.85633309532966`, 
           237.63953918822438`}, {-293.94987753210614`, 285.7703616625207}}],
         StatusArea[#, 6.6405356226695345`]& ,
         TagBoxNote->"6.6405356226695345"],
        StyleBox["6.6405356226695345`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[6.6405356226695345`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2594523846153846, 0.38696353846153847`, 0.464862], EdgeForm[{
      Opacity[0.602], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{2.564538323930095, 0.}, {3.435461676069905, 
            3.850606379322292}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{244.77749894729138`, 
           304.5607050401861}, {-51.018637329555474`, 285.7703616625207}}],
         StatusArea[#, 3.850606379322292]& ,
         TagBoxNote->"3.850606379322292"],
        StyleBox["3.850606379322292`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.850606379322292, {}], "Tooltip"]& ]}, 
     {RGBColor[0.27274623076923077`, 0.4396843076923077, 0.3499803076923077], 
      EdgeForm[{Opacity[0.602], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{3.564538323930095, 0.}, {4.435461676069905, 
            0.47246605427759386`}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{311.6986647992531, 371.4818708921478}, {
           243.13069305158598`, 285.7703616625207}}],
         StatusArea[#, 0.47246605427759386`]& ,
         TagBoxNote->"0.47246605427759386"],
        StyleBox["0.47246605427759386`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.47246605427759386`, {}], "Tooltip"]& ]}, 
     {RGBColor[
      0.3010786153846154, 0.48318346153846153`, 0.26913476923076923`], 
      EdgeForm[{Opacity[0.602], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{4.564538323930095, 0.}, {5.435461676069905, 
            1.226007188859488}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{378.61983065121484`, 438.4030367441095}, {
           177.5165980690228, 285.7703616625207}}],
         StatusArea[#, 1.226007188859488]& ,
         TagBoxNote->"1.226007188859488"],
        StyleBox["1.226007188859488`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.226007188859488, {}], "Tooltip"]& ]}, 
     {RGBColor[0.3971747692307692, 0.5433180769230769, 0.24637246153846154`], 
      EdgeForm[{Opacity[0.602], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{5.564538323930095, 0.}, {6.435461676069905, 
            0.4557702234667605}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{445.54099650317653`, 505.32420259607125`}, {
           244.58447145645388`, 285.7703616625207}}],
         StatusArea[#, 0.4557702234667605]& ,
         TagBoxNote->"0.4557702234667605"],
        StyleBox["0.4557702234667605`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.4557702234667605, {}], "Tooltip"]& ]}, 
     {RGBColor[0.5446844615384616, 0.6279339230769231, 0.2556513846153846], 
      EdgeForm[{Opacity[0.602], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{6.564538323930095, 0.}, {7.435461676069905, 
            0.7743592991859637}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{512.4621623551383, 572.2453684480329}, {
           216.8435387915829, 285.7703616625207}}],
         StatusArea[#, 0.7743592991859637]& ,
         TagBoxNote->"0.7743592991859637"],
        StyleBox["0.7743592991859637`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.7743592991859637, {}], "Tooltip"]& ]}, 
     {RGBColor[0.6972379230769231, 0.7090673846153845, 0.2793583076923077], 
      EdgeForm[{Opacity[0.602], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{7.564538323930095, 0.}, {8.435461676069906, 
            0.9032746453593679}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{579.3833282071, 639.1665342999947}, {
           205.61832044537397`, 285.7703616625207}}],
         StatusArea[#, 0.9032746453593679]& ,
         TagBoxNote->"0.9032746453593679"],
        StyleBox["0.9032746453593679`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.9032746453593679, {}], "Tooltip"]& ]}, 
     {RGBColor[0.8230086923076924, 0.7608693846153846, 0.3070638461538462], 
      EdgeForm[{Opacity[0.602], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{8.564538323930096, 0.}, {9.435461676069906, 
            3.3440057301414225`}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{646.3044940590617, 
           706.0877001519564}, {-6.906721485670971, 285.7703616625207}}],
         StatusArea[#, 3.3440057301414225`]& ,
         TagBoxNote->"3.3440057301414225"],
        StyleBox["3.3440057301414225`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.3440057301414225`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.8728871538461538, 0.7337563076923076, 0.32509307692307693`], 
      EdgeForm[{Opacity[0.602], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{9.564538323930096, 0.}, {10.435461676069906`, 
            0.7271396785567954}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{713.2256599110235, 773.0088660039182}, {
           220.9551559692197, 285.7703616625207}}],
         StatusArea[#, 0.7271396785567954]& ,
         TagBoxNote->"0.7271396785567954"],
        StyleBox["0.7271396785567954`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.7271396785567954, {}], "Tooltip"]& ]}, 
     {RGBColor[0.832827923076923, 0.5840327692307692, 0.3106703846153846], 
      EdgeForm[{Opacity[0.602], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{10.564538323930096`, 0.}, {11.435461676069906`, 
            0.32341959267021336`}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{780.1468257629851, 839.9300318558799}, {
           256.10881493493594`, 285.7703616625207}}],
         StatusArea[#, 0.32341959267021336`]& ,
         TagBoxNote->"0.32341959267021336"],
        StyleBox["0.32341959267021336`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.32341959267021336`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.7745283846153845, 0.3897886153846154, 0.2699983846153846], 
      EdgeForm[{Opacity[0.602], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{11.564538323930096`, 0.}, {12.435461676069906`, 
            0.5907843647753346}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{847.067991614947, 906.8511977078415}, {
           232.82820456503148`, 285.7703616625207}}],
         StatusArea[#, 0.5907843647753346]& ,
         TagBoxNote->"0.5907843647753346"],
        StyleBox["0.5907843647753346`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.5907843647753346, {}], "Tooltip"]& ]}, 
     {RGBColor[0.72987, 0.239399, 0.230961], EdgeForm[{Opacity[0.602], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{12.564538323930096`, 0.}, {13.435461676069906`, 
            0.8961830651806725}, "RoundingRadius" -> 0]},
          ImageSizeCache->{{913.9891574669086, 973.7723635598034}, {
           206.23581509041355`, 285.7703616625207}}],
         StatusArea[#, 0.8961830651806725]& ,
         TagBoxNote->"0.8961830651806725"],
        StyleBox["0.8961830651806725`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.8961830651806725, {}], "Tooltip"]& ]}, 
     {RGBColor[0.72987, 0.239399, 0.230961], EdgeForm[{Opacity[0.602], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{13.564538323930096`, 0.}, {14.435461676069906`, 
            1.3987475269873573`}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{980.9103233188703, 1040.693529411765}, {
           162.4753475876792, 285.7703616625207}}],
         StatusArea[#, 1.3987475269873573`]& ,
         TagBoxNote->"1.3987475269873573"],
        StyleBox["1.3987475269873573`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.3987475269873573`, {}], 
        "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
   StyleBox[{
     {Thickness[Tiny], 
      LineBox[{{0.2871198568872987, 0.}, {14.718428512453555`, 0.}}], 
      StyleBox[{}, "GraphicsLabel",
       StripOnInput->False]}, 
     StyleBox[{
       {Thickness[Tiny], 
        LineBox[{{0.564538323930095, 0.}, 
          Offset[{-1.102182119232618*^-15, -6.}, {0.564538323930095, 0.}]}], 
        LineBox[{{14.435461676069902`, 0.}, 
          Offset[{-1.102182119232618*^-15, -6.}, {14.435461676069902`, 
           0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
          LineBox[{{1.435461676069905, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {1.435461676069905, 0.}]}],
           LineBox[{{1.564538323930095, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {1.564538323930095, 0.}]}],
           LineBox[{{2.435461676069905, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {2.435461676069905, 0.}]}],
           LineBox[{{2.564538323930095, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {2.564538323930095, 0.}]}],
           LineBox[{{3.4354616760699046`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {3.4354616760699046`, 
             0.}]}], LineBox[{{3.5645383239300945`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {3.5645383239300945`, 
             0.}]}], LineBox[{{4.435461676069904, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {4.435461676069904, 0.}]}],
           LineBox[{{4.564538323930094, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {4.564538323930094, 0.}]}],
           LineBox[{{5.435461676069904, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {5.435461676069904, 0.}]}],
           LineBox[{{5.564538323930094, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {5.564538323930094, 0.}]}],
           LineBox[{{6.435461676069904, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {6.435461676069904, 0.}]}],
           LineBox[{{6.564538323930094, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {6.564538323930094, 0.}]}],
           LineBox[{{7.435461676069904, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {7.435461676069904, 0.}]}],
           LineBox[{{7.564538323930094, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {7.564538323930094, 0.}]}],
           LineBox[{{8.435461676069906, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {8.435461676069906, 0.}]}],
           LineBox[{{8.564538323930094, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {8.564538323930094, 0.}]}],
           LineBox[{{9.435461676069902, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {9.435461676069902, 0.}]}],
           LineBox[{{9.564538323930094, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {9.564538323930094, 0.}]}],
           LineBox[{{10.435461676069902`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {10.435461676069902`, 
             0.}]}], LineBox[{{10.564538323930094`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {10.564538323930094`, 
             0.}]}], LineBox[{{11.435461676069902`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {11.435461676069902`, 
             0.}]}], LineBox[{{11.564538323930094`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {11.564538323930094`, 
             0.}]}], LineBox[{{12.435461676069902`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {12.435461676069902`, 
             0.}]}], LineBox[{{12.564538323930094`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {12.564538323930094`, 
             0.}]}], LineBox[{{13.435461676069902`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {13.435461676069902`, 
             0.}]}], LineBox[{{13.564538323930094`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {13.564538323930094`, 
             0.}]}]}, {}}}, 
       StyleBox[
        {Thickness[Tiny], 
         InsetBox["\<\"\:52a8\:753b\"\>", 
          Offset[{0., -1.9999999999999998}, {1., 0.}], {0, 1}, Automatic, {1, 
          0}], InsetBox["\<\"\:756a\:5267\"\>", 
          Offset[{0., -1.9999999999999998}, {1.9999999999999998, 0.}], {0, 1},
           Automatic, {1, 0}], 
         InsetBox["\<\"\:56fd\:521b\"\>", 
          Offset[{0., -1.9999999999999998}, {2.9999999999999996, 0.}], {0, 1},
           Automatic, {1, 0}], 
         InsetBox["\<\"\:97f3\:4e50\"\>", 
          Offset[{0., -1.9999999999999998}, {3.9999999999999996, 0.}], {0, 1},
           Automatic, {1, 0}], 
         InsetBox["\<\"\:821e\:8e48\"\>", 
          Offset[{0., -1.9999999999999998}, {4.999999999999999, 0.}], {0, 1}, 
          Automatic, {1, 0}], 
         InsetBox["\<\"\:6e38\:620f\"\>", 
          Offset[{0., -1.9999999999999998}, {5.999999999999999, 0.}], {0, 1}, 
          Automatic, {1, 0}], 
         InsetBox["\<\"\:79d1\:6280\"\>", 
          Offset[{0., -1.9999999999999998}, {6.999999999999999, 0.}], {0, 1}, 
          Automatic, {1, 0}], 
         InsetBox["\<\"\:751f\:6d3b\"\>", 
          Offset[{0., -1.9999999999999998}, {8., 0.}], {0, 1}, Automatic, {1, 
          0}], InsetBox["\<\"\:9b3c\:755c\"\>", 
          Offset[{0., -1.9999999999999998}, {9., 0.}], {0, 1}, Automatic, {1, 
          0}], InsetBox["\<\"\:65f6\:5c1a\"\>", 
          Offset[{0., -1.9999999999999998}, {10., 0.}], {0, 1}, Automatic, {1,
           0}], InsetBox["\<\"\:5e7f\:544a\"\>", 
          Offset[{0., -1.9999999999999998}, {11., 0.}], {0, 1}, Automatic, {1,
           0}], 
         InsetBox["\<\"\:5a31\:4e50\"\>", 
          Offset[{0., -1.9999999999999998}, {12., 0.}], {0, 1}, Automatic, {1,
           0}], InsetBox["\<\"\:5f71\:89c6\"\>", 
          Offset[{0., -1.9999999999999998}, {13., 0.}], {0, 1}, Automatic, {1,
           0}], InsetBox["\<\"\:653e\:6620\:5385\"\>", 
          Offset[{0., -1.9999999999999998}, {14., 0.}], {0, 1}, Automatic, {1,
           0}]}, "GraphicsLabel",
        StripOnInput->False]}, "GraphicsTicks",
      StripOnInput->False]}, "GraphicsAxes",
    StripOnInput->False,
    Antialiasing->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.2871198568872987, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  Frame->{{True, False}, {False, False}},
  FrameLabel->{{
     FormBox[
     "\"\:6bcf\:4e2a\:89c6\:9891\:5e73\:5747\:64ad\:653e\:91cf\:ff08\:4e07\
\:ff09\"", TraditionalForm], None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {{{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
       FormBox["\"\:52a8\:753b\"", TraditionalForm], 0}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
       FormBox["\"\:756a\:5267\"", TraditionalForm], 0}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
       FormBox["\"\:56fd\:521b\"", TraditionalForm], 0}, {4., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
       FormBox["\"\:97f3\:4e50\"", TraditionalForm], 0}, {5., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
       FormBox["\"\:821e\:8e48\"", TraditionalForm], 0}, {6., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
       FormBox["\"\:6e38\:620f\"", TraditionalForm], 0}, {7., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
       FormBox["\"\:79d1\:6280\"", TraditionalForm], 0}, {8., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {8., 
       FormBox["\"\:751f\:6d3b\"", TraditionalForm], 0}, {9., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {9., 
       FormBox["\"\:9b3c\:755c\"", TraditionalForm], 0}, {10., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {10., 
       FormBox["\"\:65f6\:5c1a\"", TraditionalForm], 0}, {11., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {11., 
       FormBox["\"\:5e7f\:544a\"", TraditionalForm], 0}, {12., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {12., 
       FormBox["\"\:5a31\:4e50\"", TraditionalForm], 0}, {13., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {13., 
       FormBox["\"\:5f71\:89c6\"", TraditionalForm], 0}, {14., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {14., 
       FormBox["\"\:653e\:6620\:5385\"", TraditionalForm], 0}}, {{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {8., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {9., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {10., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {11., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {12., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {13., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {14., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}}}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{3.73247718955957*^9, 
  3.732550854446994*^9},ExpressionUUID->"a3ff12b8-e498-4386-8cb0-\
d81ab8507937"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"d", "\[LeftDoubleBracket]", 
      RowBox[{"i", ",", 
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "2"}]}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "@", "nn"}]}], "}"}]}], "]"}], "/", 
   SuperscriptBox["10", "4"]}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.7324741372479506`*^9, 3.7324741473716836`*^9}, {
  3.7324742096744184`*^9, 3.7324742464627047`*^9}, {3.732474381445541*^9, 
  3.732474406358308*^9}, {3.732474453576537*^9, 3.7324744676154823`*^9}, {
  3.7324746519581327`*^9, 3.732474655307922*^9}, {3.7324757551054926`*^9, 
  3.7324757905188217`*^9}, {3.7324758408359013`*^9, 3.7324758536449394`*^9}, {
  3.7324759128501277`*^9, 3.7324759170887127`*^9}, {3.7324761699363956`*^9, 
  3.732476179708661*^9}, {3.7324771065678797`*^9, 3.7324771585341387`*^9}, {
  3.732477413810872*^9, 3.732477415978775*^9}, {3.732550957696284*^9, 
  3.732550963450504*^9}},ExpressionUUID->"c56117b1-3a87-4ac2-b298-\
e5a24af45320"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "89.6094`", ",", "12.9266`", ",", "7.2155`", ",", "149.1481`", ",", 
   "22.297`", ",", "516.2468`", ",", "89.6643`", ",", "243.6974`", ",", 
   "12.2894`", ",", "33.4367`", ",", "7.4436`", ",", "159.6018`", ",", 
   "97.5688`", ",", "8.5503`"}], "}"}]], "Output",
 CellChangeTimes->{3.732477421959942*^9, 
  3.7325509648585777`*^9},ExpressionUUID->"edb4ff9f-f81d-4b77-9d35-\
0f0e3d8a6ab4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{"%17", ",", 
   RowBox[{"ChartStyle", "\[Rule]", "\"\<DarkRainbow\>\""}], ",", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{"nn", "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "Left"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "None", ",", 
      "\"\<\:73b0\:5b58\:7a3f\:4ef6\:91cf\:ff08\:4e07\:ff09\>\""}], "}"}]}]}],
   "]"}]], "Input",
 CellChangeTimes->{{3.732476070568533*^9, 3.7324760742025104`*^9}, {
   3.7324762153919845`*^9, 3.7324762210619946`*^9}, 3.7324763689175453`*^9, {
   3.7324764012756147`*^9, 3.732476407035963*^9}, {3.7324764532163014`*^9, 
   3.7324764766512356`*^9}, {3.7324765516543727`*^9, 3.732476580231262*^9}, {
   3.732476894800971*^9, 3.7324768950136566`*^9}, {3.7324771690752087`*^9, 
   3.732477187045211*^9}, {3.7324774328823514`*^9, 3.7324774390841045`*^9}, {
   3.7325509686968317`*^9, 
   3.7325509691970778`*^9}},ExpressionUUID->"b7d9d80f-fb85-4ded-88a1-\
10a9bdf91a56"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.2871198568872987, 0.}, {14.435461676069906`, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.602], 
     Thickness[Small]}], 
     {RGBColor[0.237736, 0.340215, 0.575113], EdgeForm[{Opacity[0.602], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0.564538323930095, 0.}, {1.435461676069905, 89.6094},
             "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{143.6277162629758, 201.44111220958976`}, {
           168.48990699218342`, 266.9644563235998}}],
         StatusArea[#, 89.6094]& ,
         TagBoxNote->"89.6094"],
        StyleBox["89.6094`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[89.6094, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2499783076923077, 0.34381346153846154`, 0.5620653076923077], 
      EdgeForm[{Opacity[0.602], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{1.564538323930095, 0.}, {2.435461676069905, 12.9266},
             "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{208.28713297083544`, 266.1005289174494}, {
           251.47539703531658`, 266.9644563235998}}],
         StatusArea[#, 12.9266]& ,
         TagBoxNote->"12.9266"],
        StyleBox["12.9266`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[12.9266, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2594523846153846, 0.38696353846153847`, 0.464862], EdgeForm[{
      Opacity[0.602], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{2.564538323930095, 0.}, {3.435461676069905, 7.2155}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{272.9465496786951, 330.75994562530906`}, {
           257.6559020792813, 266.9644563235998}}],
         StatusArea[#, 7.2155]& ,
         TagBoxNote->"7.2155"],
        StyleBox["7.2155`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[7.2155, {}], "Tooltip"]& ]}, 
     {RGBColor[0.27274623076923077`, 0.4396843076923077, 0.3499803076923077], 
      EdgeForm[{Opacity[0.602], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{3.564538323930095, 0.}, {4.435461676069905, 
            149.1481}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{337.6059663865547, 395.41936233316864`}, {
           104.0576197513538, 266.9644563235998}}],
         StatusArea[#, 149.1481]& ,
         TagBoxNote->"149.1481"],
        StyleBox["149.1481`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[149.1481, {}], "Tooltip"]& ]}, 
     {RGBColor[
      0.3010786153846154, 0.48318346153846153`, 0.26913476923076923`], 
      EdgeForm[{Opacity[0.602], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{4.564538323930095, 0.}, {5.435461676069905, 22.297}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{402.26538309441435`, 460.07877904102827`}, {
           241.33482788682204`, 266.9644563235998}}],
         StatusArea[#, 22.297]& ,
         TagBoxNote->"22.297"],
        StyleBox["22.297`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[22.297, {}], "Tooltip"]& ]}, 
     {RGBColor[0.3971747692307692, 0.5433180769230769, 0.24637246153846154`], 
      EdgeForm[{Opacity[0.602], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{5.564538323930095, 0.}, {6.435461676069905, 
            516.2468}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{466.924799802274, 
           524.738195748888}, {-293.2135481467553, 266.9644563235998}}],
         StatusArea[#, 516.2468]& ,
         TagBoxNote->"516.2468"],
        StyleBox["516.2468`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[516.2468, {}], "Tooltip"]& ]}, 
     {RGBColor[0.5446844615384616, 0.6279339230769231, 0.2556513846153846], 
      EdgeForm[{Opacity[0.602], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{6.564538323930095, 0.}, {7.435461676069905, 89.6643},
             "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{531.5842165101336, 589.3976124567475}, {
           168.4304946676026, 266.9644563235998}}],
         StatusArea[#, 89.6643]& ,
         TagBoxNote->"89.6643"],
        StyleBox["89.6643`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[89.6643, {}], "Tooltip"]& ]}, 
     {RGBColor[0.6972379230769231, 0.7090673846153845, 0.2793583076923077], 
      EdgeForm[{Opacity[0.602], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{7.564538323930095, 0.}, {8.435461676069906, 
            243.6974}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{596.2436332179933, 654.0570291646072}, {
           1.7371516185364158`, 266.9644563235998}}],
         StatusArea[#, 243.6974]& ,
         TagBoxNote->"243.6974"],
        StyleBox["243.6974`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[243.6974, {}], "Tooltip"]& ]}, 
     {RGBColor[0.8230086923076924, 0.7608693846153846, 0.3070638461538462], 
      EdgeForm[{Opacity[0.602], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{8.564538323930096, 0.}, {9.435461676069906, 12.2894},
             "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{660.9030499258529, 718.7164458724669}, {
           252.164969589468, 266.9644563235998}}],
         StatusArea[#, 12.2894]& ,
         TagBoxNote->"12.2894"],
        StyleBox["12.2894`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[12.2894, {}], "Tooltip"]& ]}, 
     {RGBColor[0.8728871538461538, 0.7337563076923076, 0.32509307692307693`], 
      EdgeForm[{Opacity[0.602], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{9.564538323930096, 0.}, {10.435461676069906`, 
            33.4367}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{725.5624666337126, 783.3758625803265}, {
           229.2795369554334, 266.9644563235998}}],
         StatusArea[#, 33.4367]& ,
         TagBoxNote->"33.4367"],
        StyleBox["33.4367`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[33.4367, {}], "Tooltip"]& ]}, 
     {RGBColor[0.832827923076923, 0.5840327692307692, 0.3106703846153846], 
      EdgeForm[{Opacity[0.602], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{10.564538323930096`, 0.}, {11.435461676069906`, 
            7.4436}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{790.2218833415722, 848.0352792881862}, {
           257.4090541514691, 266.9644563235998}}],
         StatusArea[#, 7.4436]& ,
         TagBoxNote->"7.4436"],
        StyleBox["7.4436`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[7.4436, {}], "Tooltip"]& ]}, 
     {RGBColor[0.7745283846153845, 0.3897886153846154, 0.2699983846153846], 
      EdgeForm[{Opacity[0.602], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{11.564538323930096`, 0.}, {12.435461676069906`, 
            159.6018}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{854.8813000494318, 912.6946959960458}, {
           92.74471232929955, 266.9644563235998}}],
         StatusArea[#, 159.6018]& ,
         TagBoxNote->"159.6018"],
        StyleBox["159.6018`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[159.6018, {}], "Tooltip"]& ]}, 
     {RGBColor[0.72987, 0.239399, 0.230961], EdgeForm[{Opacity[0.602], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{12.564538323930096`, 0.}, {13.435461676069906`, 
            97.5688}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{919.5407167572914, 977.3541127039055}, {
           159.87631033883594`, 266.9644563235998}}],
         StatusArea[#, 97.5688]& ,
         TagBoxNote->"97.5688"],
        StyleBox["97.5688`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[97.5688, {}], "Tooltip"]& ]}, 
     {RGBColor[0.72987, 0.239399, 0.230961], EdgeForm[{Opacity[0.602], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{13.564538323930096`, 0.}, {14.435461676069906`, 
            8.5503}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{984.2001334651511, 1042.0135294117651`}, {
           256.21139259202243`, 266.9644563235998}}],
         StatusArea[#, 8.5503]& ,
         TagBoxNote->"8.5503"],
        StyleBox["8.5503`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[8.5503, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
   StyleBox[{
     {Thickness[Tiny], 
      LineBox[{{0.2871198568872987, 0.}, {14.718428512453555`, 0.}}], 
      StyleBox[{}, "GraphicsLabel",
       StripOnInput->False]}, 
     StyleBox[{
       {Thickness[Tiny], 
        LineBox[{{0.564538323930095, 0.}, 
          Offset[{-1.102182119232618*^-15, -6.}, {0.564538323930095, 0.}]}], 
        LineBox[{{14.435461676069902`, 0.}, 
          Offset[{-1.102182119232618*^-15, -6.}, {14.435461676069902`, 
           0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
          LineBox[{{1.435461676069905, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {1.435461676069905, 0.}]}],
           LineBox[{{1.564538323930095, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {1.564538323930095, 0.}]}],
           LineBox[{{2.435461676069905, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {2.435461676069905, 0.}]}],
           LineBox[{{2.564538323930095, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {2.564538323930095, 0.}]}],
           LineBox[{{3.4354616760699046`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {3.4354616760699046`, 
             0.}]}], LineBox[{{3.5645383239300945`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {3.5645383239300945`, 
             0.}]}], LineBox[{{4.435461676069904, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {4.435461676069904, 0.}]}],
           LineBox[{{4.564538323930094, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {4.564538323930094, 0.}]}],
           LineBox[{{5.435461676069904, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {5.435461676069904, 0.}]}],
           LineBox[{{5.564538323930094, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {5.564538323930094, 0.}]}],
           LineBox[{{6.435461676069904, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {6.435461676069904, 0.}]}],
           LineBox[{{6.564538323930094, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {6.564538323930094, 0.}]}],
           LineBox[{{7.435461676069904, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {7.435461676069904, 0.}]}],
           LineBox[{{7.564538323930094, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {7.564538323930094, 0.}]}],
           LineBox[{{8.435461676069906, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {8.435461676069906, 0.}]}],
           LineBox[{{8.564538323930094, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {8.564538323930094, 0.}]}],
           LineBox[{{9.435461676069902, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {9.435461676069902, 0.}]}],
           LineBox[{{9.564538323930094, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {9.564538323930094, 0.}]}],
           LineBox[{{10.435461676069902`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {10.435461676069902`, 
             0.}]}], LineBox[{{10.564538323930094`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {10.564538323930094`, 
             0.}]}], LineBox[{{11.435461676069902`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {11.435461676069902`, 
             0.}]}], LineBox[{{11.564538323930094`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {11.564538323930094`, 
             0.}]}], LineBox[{{12.435461676069902`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {12.435461676069902`, 
             0.}]}], LineBox[{{12.564538323930094`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {12.564538323930094`, 
             0.}]}], LineBox[{{13.435461676069902`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {13.435461676069902`, 
             0.}]}], LineBox[{{13.564538323930094`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {13.564538323930094`, 
             0.}]}]}, {}}}, 
       StyleBox[
        {Thickness[Tiny], 
         InsetBox["\<\"\:52a8\:753b\"\>", 
          Offset[{0., -1.9999999999999998}, {1., 0.}], {0, 1}, Automatic, {1, 
          0}], InsetBox["\<\"\:756a\:5267\"\>", 
          Offset[{0., -1.9999999999999998}, {1.9999999999999998, 0.}], {0, 1},
           Automatic, {1, 0}], 
         InsetBox["\<\"\:56fd\:521b\"\>", Offset[{0., -1.9999999999999998}, 
          {2.9999999999999996, 0.}], {0, 1}, Automatic, {1, 0}], 
         InsetBox["\<\"\:97f3\:4e50\"\>", 
          Offset[{0., -1.9999999999999998}, {3.9999999999999996, 0.}], {0, 1},
           Automatic, {1, 0}], 
         InsetBox["\<\"\:821e\:8e48\"\>", 
          Offset[{0., -1.9999999999999998}, {4.999999999999999, 0.}], {0, 1}, 
          Automatic, {1, 0}], 
         InsetBox["\<\"\:6e38\:620f\"\>", 
          Offset[{0., -1.9999999999999998}, {5.999999999999999, 0.}], {0, 1}, 
          Automatic, {1, 0}], 
         InsetBox["\<\"\:79d1\:6280\"\>", 
          Offset[{0., -1.9999999999999998}, {6.999999999999999, 0.}], {0, 1}, 
          Automatic, {1, 0}], 
         InsetBox["\<\"\:751f\:6d3b\"\>", 
          Offset[{0., -1.9999999999999998}, {8., 0.}], {0, 1}, Automatic, {1, 
          0}], InsetBox["\<\"\:9b3c\:755c\"\>", 
          Offset[{0., -1.9999999999999998}, {9., 0.}], {0, 1}, Automatic, {1, 
          0}], InsetBox["\<\"\:65f6\:5c1a\"\>", 
          Offset[{0., -1.9999999999999998}, {10., 0.}], {0, 1}, Automatic, {1,
           0}], InsetBox["\<\"\:5e7f\:544a\"\>", 
          Offset[{0., -1.9999999999999998}, {11., 0.}], {0, 1}, Automatic, {1,
           0}], InsetBox["\<\"\:5a31\:4e50\"\>", 
          Offset[{0., -1.9999999999999998}, {12., 0.}], {0, 1}, Automatic, {1,
           0}], InsetBox["\<\"\:5f71\:89c6\"\>", 
          Offset[{0., -1.9999999999999998}, {13., 0.}], {0, 1}, Automatic, {1,
           0}], InsetBox["\<\"\:653e\:6620\:5385\"\>", 
          Offset[{0., -1.9999999999999998}, {14., 0.}], {0, 1}, Automatic, {1,
           0}]}, "GraphicsLabel",
        StripOnInput->False]}, "GraphicsTicks",
      StripOnInput->False]}, "GraphicsAxes",
    StripOnInput->False,
    Antialiasing->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.2871198568872987, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  Frame->{{True, False}, {False, False}},
  FrameLabel->{{
     FormBox[
     "\"\:73b0\:5b58\:7a3f\:4ef6\:91cf\:ff08\:4e07\:ff09\"", TraditionalForm],
      None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {{{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
       FormBox["\"\:52a8\:753b\"", TraditionalForm], 0}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
       FormBox["\"\:756a\:5267\"", TraditionalForm], 0}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
       FormBox["\"\:56fd\:521b\"", TraditionalForm], 0}, {4., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
       FormBox["\"\:97f3\:4e50\"", TraditionalForm], 0}, {5., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
       FormBox["\"\:821e\:8e48\"", TraditionalForm], 0}, {6., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
       FormBox["\"\:6e38\:620f\"", TraditionalForm], 0}, {7., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
       FormBox["\"\:79d1\:6280\"", TraditionalForm], 0}, {8., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {8., 
       FormBox["\"\:751f\:6d3b\"", TraditionalForm], 0}, {9., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {9., 
       FormBox["\"\:9b3c\:755c\"", TraditionalForm], 0}, {10., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {10., 
       FormBox["\"\:65f6\:5c1a\"", TraditionalForm], 0}, {11., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {11., 
       FormBox["\"\:5e7f\:544a\"", TraditionalForm], 0}, {12., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {12., 
       FormBox["\"\:5a31\:4e50\"", TraditionalForm], 0}, {13., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {13., 
       FormBox["\"\:5f71\:89c6\"", TraditionalForm], 0}, {14., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {14., 
       FormBox["\"\:653e\:6620\:5385\"", TraditionalForm], 0}}, {{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {8., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {9., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {10., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {11., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {12., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {13., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {14., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}}}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{3.732477439571433*^9, 
  3.7325509703483872`*^9},ExpressionUUID->"23aca17e-e964-4362-8314-\
abbcd72fa4f2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\n", 
  RowBox[{
   RowBox[{"BarChart", "[", 
    RowBox[{
     RowBox[{"d", "\[LeftDoubleBracket]", 
      RowBox[{
       RowBox[{"1", ";;", 
        RowBox[{"Length", "@", "nn"}]}], ",", "u", ",", 
       RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"ChartStyle", "\[Rule]", "\"\<DarkRainbow\>\""}], ",", 
     RowBox[{"ChartLabels", "\[Rule]", 
      RowBox[{"nn", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"None", ",", "\"\<\:603b\:64ad\:653e\:91cf\>\""}], "}"}]}], 
     ",", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}], ",", "\n", 
   RowBox[{"{", 
    RowBox[{"u", ",", "1", ",", "3199"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.732476070568533*^9, 3.7324760742025104`*^9}, {
   3.7324762153919845`*^9, 3.7324762210619946`*^9}, 3.7324763689175453`*^9, {
   3.7324764012756147`*^9, 3.732476407035963*^9}, {3.7324764532163014`*^9, 
   3.7324764766512356`*^9}, {3.7324765516543727`*^9, 3.732476580231262*^9}, {
   3.732476894800971*^9, 3.7324768950136566`*^9}, {3.732521988766253*^9, 
   3.7325220866266794`*^9}, {3.7325221273414583`*^9, 
   3.7325221315596886`*^9}, {3.7325507495655546`*^9, 
   3.7325507497731934`*^9}, {3.732551445618997*^9, 3.7325515226030526`*^9}, {
   3.7325516199023333`*^9, 3.732551690482348*^9}, 
   3.732551856929658*^9},ExpressionUUID->"70f5efa7-9c72-4aa4-b4be-\
7c14610d60e8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\n", 
  RowBox[{
   RowBox[{"Graphics3D", "[", 
    RowBox[{
     RowBox[{"Flatten", "@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Opacity", "[", ".75", "]"}], ",", "\n", 
          RowBox[{"nn", "\[LeftDoubleBracket]", 
           RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
          RowBox[{"Cylinder", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"nn", "\[LeftDoubleBracket]", 
                 RowBox[{"i", ",", "3"}], "\[RightDoubleBracket]"}], ",", 
                RowBox[{"nn", "\[LeftDoubleBracket]", 
                 RowBox[{"i", ",", "4"}], "\[RightDoubleBracket]"}], ",", 
                "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"nn", "\[LeftDoubleBracket]", 
                 RowBox[{"i", ",", "3"}], "\[RightDoubleBracket]"}], ",", 
                RowBox[{"nn", "\[LeftDoubleBracket]", 
                 RowBox[{"i", ",", "4"}], "\[RightDoubleBracket]"}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"d", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "u", ",", "2"}], 
                    "\[RightDoubleBracket]"}], ">", "0"}], ",", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"d", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "u", ",", "3"}], 
                    "\[RightDoubleBracket]"}], 
                    RowBox[{"d", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "u", ",", "2"}], 
                    "\[RightDoubleBracket]"}]], "/", "10"}], ",", "0"}], 
                 "]"}]}], "}"}]}], "}"}], ",", 
            SqrtBox[
             RowBox[{"d", "\[LeftDoubleBracket]", 
              RowBox[{"i", ",", "u", ",", "2"}], "\[RightDoubleBracket]"}]]}],
            "]"}]}], "\n", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "@", "nn"}]}], "}"}]}], "]"}]}], ",", "\n", 
     RowBox[{"FaceGrids", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["10", "3"]}], ",", 
          RowBox[{"1.5", "*", 
           SuperscriptBox["10", "4"]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "3"}], "*", 
           SuperscriptBox["10", "3"]}], ",", 
          RowBox[{"9", "*", 
           SuperscriptBox["10", "3"]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"1.3", "*", 
           SuperscriptBox["10", "4"]}]}], "}"}]}], "}"}]}], ",", 
     RowBox[{"Background", "\[Rule]", "Black"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", 
     RowBox[{"Ticks", "\[Rule]", "None"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"d", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "u", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
        "\"\<\>\"", ",", "\"\<\>\""}], "}"}]}]}], "]"}], ",", "\n", 
   RowBox[{"{", 
    RowBox[{"u", ",", "2", ",", "3199"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.732551032171019*^9, 3.732551037755989*^9}, {
   3.732551071192811*^9, 3.732551102863804*^9}, {3.73255113532553*^9, 
   3.732551138368814*^9}, 3.7325512245653763`*^9, 3.732551256872714*^9, {
   3.732552767511324*^9, 3.7325527722742147`*^9}, {3.7325528379078336`*^9, 
   3.7325528899004393`*^9}, {3.732552928885476*^9, 3.7325529306758432`*^9}, {
   3.7325529687419643`*^9, 3.732553074637229*^9}, {3.7325531118986197`*^9, 
   3.7325531209419727`*^9}, {3.732553152445*^9, 3.7325531593770857`*^9}, {
   3.73255326734673*^9, 3.73255328741162*^9}, {3.7325533298762207`*^9, 
   3.732553370161127*^9}, {3.732553416658016*^9, 3.732553548859695*^9}, {
   3.7325536149356523`*^9, 3.7325536196646843`*^9}, {3.7325537731725683`*^9, 
   3.732553785162301*^9}, {3.7325539527843294`*^9, 3.7325539546050663`*^9}, {
   3.732554231715027*^9, 3.732554329893955*^9}, {3.7325544439072556`*^9, 
   3.7325544450457964`*^9}, {3.7325547050505695`*^9, 3.732554718996065*^9}, 
   3.732554792903609*^9, {3.732554851344117*^9, 
   3.7325549068542547`*^9}},ExpressionUUID->"b5f30a0d-56d8-4974-9750-\
4bb7b6ebf01c"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`u$$ = 3199., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"\:65e0\:6807\:9898\"", Typeset`specs$$ = {{
      Hold[$CellContext`u$$], 2, 3199}}, Typeset`size$$ = {
    1080., {532., 548.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`u$81754$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`u$$ = 2}, 
      "ControllerVariables" :> {
        Hold[$CellContext`u$$, $CellContext`u$81754$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics3D[
        Flatten[
         Table[{
           Opacity[0.75], 
           Part[$CellContext`nn, $CellContext`i, 2], 
           Cylinder[{{
              Part[$CellContext`nn, $CellContext`i, 3], 
              Part[$CellContext`nn, $CellContext`i, 4], 0}, {
              Part[$CellContext`nn, $CellContext`i, 3], 
              Part[$CellContext`nn, $CellContext`i, 4], 
              If[
              Part[$CellContext`d, $CellContext`i, $CellContext`u$$, 2] > 
               0, (Part[$CellContext`d, $CellContext`i, $CellContext`u$$, 3]/
                Part[$CellContext`d, $CellContext`i, $CellContext`u$$, 2])/10,
                0]}}, 
            Sqrt[
             
             Part[$CellContext`d, $CellContext`i, $CellContext`u$$, 
              2]]]}, {$CellContext`i, 1, 
           Length[$CellContext`nn]}]], 
        FaceGrids -> {{-1, 0, 0}, {0, 1, 0}, {0, 0, -1}}, 
        PlotRange -> {{-10^3, 1.5 10^4}, {(-3) 10^3, 9 10^3}, {0, 1.3 10^4}}, 
        Background -> Black, Axes -> True, Ticks -> None, AxesLabel -> {
          Part[$CellContext`d, 1, $CellContext`u$$, 1], "", ""}], 
      "Specifications" :> {{$CellContext`u$$, 2, 3199}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{1213., {681., 698.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.7325510788525934`*^9, 3.732551103303927*^9}, 
   3.7325511386886854`*^9, 3.7325512260639334`*^9, {3.7325528819193096`*^9, 
   3.7325528902991424`*^9}, {3.732553046910855*^9, 3.7325530755709434`*^9}, 
   3.7325531216547017`*^9, 3.7325531600446897`*^9, 3.7325532878246555`*^9, 
   3.7325533722639766`*^9, 3.7325534170710897`*^9, {3.732553468819838*^9, 
   3.7325535040350904`*^9}, {3.7325535347948947`*^9, 3.732553549324003*^9}, 
   3.7325536204369726`*^9, 3.7325537856340437`*^9, 3.7325539551320148`*^9, {
   3.7325542357813654`*^9, 3.7325542539083014`*^9}, {3.732554291549283*^9, 
   3.7325543304163947`*^9}, 3.7325544455926685`*^9, 3.732554721700526*^9, 
   3.732554794140852*^9, {3.7325548559155283`*^9, 
   3.7325549076704874`*^9}},ExpressionUUID->"cd803860-60cb-4c34-ad65-\
d0f4cef142b6"],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"\:52a8\:753b\\\\\\\"\\\", \\\",\\\", \
InterpretationBox[ButtonBox[TooltipBox[GraphicsBox[List[List[GrayLevel[0], \
RectangleBox[List[0, 0]]], List[GrayLevel[0], RectangleBox[List[1, -1]]], \
List[RGBColor[0.5`, 0.5`, 1], RectangleBox[List[0, -1], List[2, 1]]]], \
Rule[DefaultBaseStyle, \\\"ColorSwatchGraphics\\\"], Rule[AspectRatio, 1], \
Rule[Frame, True], Rule[FrameStyle, RGBColor[0.33333333333333337`, \
0.33333333333333337`, 0.6666666666666666`]], Rule[FrameTicks, None], \
Rule[PlotRangePadding, None], Rule[ImageSize, Dynamic[List[Automatic, \
Times[1.35`, CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]], \\\"RGBColor[0.5, 0.5, \
1]\\\"], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[BaselinePosition, Baseline], Rule[DefaultBaseStyle, List[]], \
RuleDelayed[ButtonFunction, With[List[Set[Typeset`box$, EvaluationBox[]]], \
If[Not[AbsoluteCurrentValue[\\\"Deployed\\\"]], \
CompoundExpression[SelectionMove[Typeset`box$, All, Expression], \
Set[FrontEnd`Private`$ColorSelectorInitialAlpha, 1], \
Set[FrontEnd`Private`$ColorSelectorInitialColor, RGBColor[0.5`, 0.5`, 1]], \
Set[FrontEnd`Private`$ColorSelectorUseMakeBoxes, True], \
MathLink`CallFrontEnd[FrontEnd`AttachCell[Typeset`box$, \
FrontEndResource[\\\"RGBColorValueSelector\\\"], List[0, List[Left, Bottom]], \
List[Left, Top], Rule[\\\"ClosingActions\\\", \
List[\\\"SelectionDeparture\\\", \\\"ParentChanged\\\", \
\\\"EvaluatorQuit\\\"]]]]]]]], Rule[BaseStyle, Inherited], Rule[Evaluator, \
Automatic], Rule[Method, \\\"Preemptive\\\"]], RGBColor[0.5`, 0.5`, 1], \
Rule[Editable, False], Rule[Selectable, False]]}], \\\"}\\\"}]\\) \
\:7684\:90e8\:5206 \\!\\(\\*RowBox[{\\\"3\\\"}]\\) \:4e0d\:5b58\:5728.\"",2,8,
   1,21249100526753168248,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.733057984770753*^9},ExpressionUUID->"a382d44e-1b9e-496b-9043-\
1c091fff3fe1"],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"\:52a8\:753b\\\\\\\"\\\", \\\",\\\", \
InterpretationBox[ButtonBox[TooltipBox[GraphicsBox[List[List[GrayLevel[0], \
RectangleBox[List[0, 0]]], List[GrayLevel[0], RectangleBox[List[1, -1]]], \
List[RGBColor[0.5`, 0.5`, 1], RectangleBox[List[0, -1], List[2, 1]]]], \
Rule[DefaultBaseStyle, \\\"ColorSwatchGraphics\\\"], Rule[AspectRatio, 1], \
Rule[Frame, True], Rule[FrameStyle, RGBColor[0.33333333333333337`, \
0.33333333333333337`, 0.6666666666666666`]], Rule[FrameTicks, None], \
Rule[PlotRangePadding, None], Rule[ImageSize, Dynamic[List[Automatic, \
Times[1.35`, CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]], \\\"RGBColor[0.5, 0.5, \
1]\\\"], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[BaselinePosition, Baseline], Rule[DefaultBaseStyle, List[]], \
RuleDelayed[ButtonFunction, With[List[Set[Typeset`box$, EvaluationBox[]]], \
If[Not[AbsoluteCurrentValue[\\\"Deployed\\\"]], \
CompoundExpression[SelectionMove[Typeset`box$, All, Expression], \
Set[FrontEnd`Private`$ColorSelectorInitialAlpha, 1], \
Set[FrontEnd`Private`$ColorSelectorInitialColor, RGBColor[0.5`, 0.5`, 1]], \
Set[FrontEnd`Private`$ColorSelectorUseMakeBoxes, True], \
MathLink`CallFrontEnd[FrontEnd`AttachCell[Typeset`box$, \
FrontEndResource[\\\"RGBColorValueSelector\\\"], List[0, List[Left, Bottom]], \
List[Left, Top], Rule[\\\"ClosingActions\\\", \
List[\\\"SelectionDeparture\\\", \\\"ParentChanged\\\", \
\\\"EvaluatorQuit\\\"]]]]]]]], Rule[BaseStyle, Inherited], Rule[Evaluator, \
Automatic], Rule[Method, \\\"Preemptive\\\"]], RGBColor[0.5`, 0.5`, 1], \
Rule[Editable, False], Rule[Selectable, False]]}], \\\"}\\\"}]\\) \
\:7684\:90e8\:5206 \\!\\(\\*RowBox[{\\\"4\\\"}]\\) \:4e0d\:5b58\:5728.\"",2,8,
   2,21249100526753168248,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.733057984818879*^9},ExpressionUUID->"ef3d6e42-2c79-42d5-8dd5-\
332f53a26937"],

Cell[BoxData[
 TemplateBox[{
  "Part","partw",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"\:52a8\:753b\\\\\\\"\\\", \\\",\\\", \
InterpretationBox[ButtonBox[TooltipBox[GraphicsBox[List[List[GrayLevel[0], \
RectangleBox[List[0, 0]]], List[GrayLevel[0], RectangleBox[List[1, -1]]], \
List[RGBColor[0.5`, 0.5`, 1], RectangleBox[List[0, -1], List[2, 1]]]], \
Rule[DefaultBaseStyle, \\\"ColorSwatchGraphics\\\"], Rule[AspectRatio, 1], \
Rule[Frame, True], Rule[FrameStyle, RGBColor[0.33333333333333337`, \
0.33333333333333337`, 0.6666666666666666`]], Rule[FrameTicks, None], \
Rule[PlotRangePadding, None], Rule[ImageSize, Dynamic[List[Automatic, \
Times[1.35`, CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]], \\\"RGBColor[0.5, 0.5, \
1]\\\"], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[BaselinePosition, Baseline], Rule[DefaultBaseStyle, List[]], \
RuleDelayed[ButtonFunction, With[List[Set[Typeset`box$, EvaluationBox[]]], \
If[Not[AbsoluteCurrentValue[\\\"Deployed\\\"]], \
CompoundExpression[SelectionMove[Typeset`box$, All, Expression], \
Set[FrontEnd`Private`$ColorSelectorInitialAlpha, 1], \
Set[FrontEnd`Private`$ColorSelectorInitialColor, RGBColor[0.5`, 0.5`, 1]], \
Set[FrontEnd`Private`$ColorSelectorUseMakeBoxes, True], \
MathLink`CallFrontEnd[FrontEnd`AttachCell[Typeset`box$, \
FrontEndResource[\\\"RGBColorValueSelector\\\"], List[0, List[Left, Bottom]], \
List[Left, Top], Rule[\\\"ClosingActions\\\", \
List[\\\"SelectionDeparture\\\", \\\"ParentChanged\\\", \
\\\"EvaluatorQuit\\\"]]]]]]]], Rule[BaseStyle, Inherited], Rule[Evaluator, \
Automatic], Rule[Method, \\\"Preemptive\\\"]], RGBColor[0.5`, 0.5`, 1], \
Rule[Editable, False], Rule[Selectable, False]]}], \\\"}\\\"}]\\) \
\:7684\:90e8\:5206 \\!\\(\\*RowBox[{\\\"3\\\"}]\\) \:4e0d\:5b58\:5728.\"",2,8,
   3,21249100526753168248,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7330579848549805`*^9},ExpressionUUID->"f33f9770-4aa3-4c01-a5dc-\
2dbf48266991"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"\:5728\:672c\:6b21\:8ba1\:7b97\:4e2d\:ff0c\\!\\(\\*StyleBox[RowBox[{\\\"\
Part\\\", \\\"::\\\", \\\"partw\\\"}], \\\"MessageName\\\"]\\) \:7684\:8fdb\
\:4e00\:6b65\:8f93\:51fa\:5c06\:88ab\:6291\:5236.\"",2,8,4,
   21249100526753168248,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7330579848950877`*^9},ExpressionUUID->"f38d942e-4e7c-483d-8d79-\
0e2e360191cb"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"nn", "=", 
   RowBox[{"{", "\n", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<\:52a8\:753b\>\"", ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.5, 0.5, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.33333333333333337`, 0.33333333333333337`, 0.6666666666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          "RGBColor[0.5, 0.5, 1]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[0.5, 0.5, 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0.5, 0.5, 1],
        Editable->False,
        Selectable->False], ",", "0", ",", "2000"}], "}"}], ",", "\n", 
     RowBox[{"{", 
      RowBox[{"\"\<\:756a\:5267\>\"", ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.5, 0.5, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.33333333333333337`, 0.33333333333333337`, 0.6666666666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          "RGBColor[0.5, 0.5, 1]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[0.5, 0.5, 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0.5, 0.5, 1],
        Editable->False,
        Selectable->False], ",", 
       RowBox[{"-", "500"}], ",", "4000"}], "}"}], ",", "\n", 
     RowBox[{"{", 
      RowBox[{"\"\<\:56fd\:521b\>\"", ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.5, 0.5, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.33333333333333337`, 0.33333333333333337`, 0.6666666666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          "RGBColor[0.5, 0.5, 1]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[0.5, 0.5, 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0.5, 0.5, 1],
        Editable->False,
        Selectable->False], ",", "600", ",", "3500"}], "}"}], ",", "\n", 
     RowBox[{"{", 
      RowBox[{"\"\<\:97f3\:4e50\>\"", ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          "RGBColor[1, 1, 0]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[1, 1, 0],
        Editable->False,
        Selectable->False], ",", "2300", ",", 
       RowBox[{"-", "400"}]}], "}"}], ",", "\n", 
     RowBox[{"{", 
      RowBox[{"\"\<\:821e\:8e48\>\"", ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          "RGBColor[1, 0.5, 0]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[1, 0.5, 0],
        Editable->False,
        Selectable->False], ",", "3800", ",", "1500"}], "}"}], ",", "\n", 
     RowBox[{"{", 
      RowBox[{"\"\<\:6e38\:620f\>\"", ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          "RGBColor[1, 0, 0]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[1, 0, 0],
        Editable->False,
        Selectable->False], ",", "3000", ",", "6000"}], "}"}], ",", "\n", 
     RowBox[{"{", 
      RowBox[{"\"\<\:79d1\:6280\>\"", ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0, 0.5, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->RGBColor[0., 0.33333333333333337`, 0.6666666666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          "RGBColor[0, 0.5, 1]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0.5, 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0, 0.5, 1],
        Editable->False,
        Selectable->False], ",", "6000", ",", "0"}], "}"}], ",", "\n", 
     RowBox[{"{", 
      RowBox[{"\"\<\:751f\:6d3b\>\"", ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->RGBColor[0., 0.33333333333333337`, 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          "RGBColor[0, 0.5, 0]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0.5, 0]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0, 0.5, 0],
        Editable->False,
        Selectable->False], ",", "8000", ",", "5000"}], "}"}], ",", "\n", 
     RowBox[{"{", 
      RowBox[{"\"\<\:9b3c\:755c\>\"", ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.5, 1, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.33333333333333337`, 0.6666666666666666, 0.6666666666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          "RGBColor[0.5, 1, 1]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.5, 1, 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0.5, 1, 1],
        Editable->False,
        Selectable->False], ",", "6000", ",", "8000"}], "}"}], ",", "\n", 
     RowBox[{"{", 
      RowBox[{"\"\<\:65f6\:5c1a\>\"", ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 0.5, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666666, 0.33333333333333337`, 0.6666666666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          "RGBColor[1, 0.5, 1]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[1, 0.5, 1],
        Editable->False,
        Selectable->False], ",", "9000", ",", 
       RowBox[{"-", "1000"}]}], "}"}], ",", "\n", 
     RowBox[{"{", 
      RowBox[{"\"\<\:5e7f\:544a\>\"", ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 0.5, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666666, 0.33333333333333337`, 0.6666666666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          "RGBColor[1, 0.5, 1]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[1, 0.5, 1],
        Editable->False,
        Selectable->False], ",", "10000", ",", 
       RowBox[{"-", "2000"}]}], "}"}], ",", "\n", 
     RowBox[{"{", 
      RowBox[{"\"\<\:5a31\:4e50\>\"", ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 0.5, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666666, 0.33333333333333337`, 0.6666666666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          "RGBColor[1, 0.5, 1]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[1, 0.5, 1],
        Editable->False,
        Selectable->False], ",", "10000", ",", "1000"}], "}"}], ",", "\n", 
     RowBox[{"{", 
      RowBox[{"\"\<\:5f71\:89c6\>\"", ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 0.5, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666666, 0.33333333333333337`, 0.6666666666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          "RGBColor[1, 0.5, 1]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[1, 0.5, 1],
        Editable->False,
        Selectable->False], ",", "12000", ",", 
       RowBox[{"-", "1000"}]}], "}"}], ",", "\n", 
     RowBox[{"{", 
      RowBox[{"\"\<\:653e\:6620\:5385\>\"", ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 0.5, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666666, 0.33333333333333337`, 0.6666666666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          "RGBColor[1, 0.5, 1]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[1, 0.5, 1],
        Editable->False,
        Selectable->False], ",", "13000", ",", "0"}], "}"}]}], "\n", "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7324466132656937`*^9, 3.7324466138539495`*^9}, 
   3.7324477001233053`*^9, {3.73244801486754*^9, 3.732448053689856*^9}, {
   3.7324481000237083`*^9, 3.7324481078420086`*^9}, 3.732448428614874*^9, {
   3.7324484746185055`*^9, 3.732448654993147*^9}, 3.732449513023709*^9, {
   3.7324498590241566`*^9, 3.7324498698845205`*^9}, {3.7325502625238314`*^9, 
   3.7325502691595526`*^9}, {3.732550340088992*^9, 3.732550348813883*^9}, {
   3.7325536627978086`*^9, 3.7325537596818404`*^9}, {3.732553810730203*^9, 
   3.73255383356586*^9}, {3.732553936195064*^9, 3.7325539390751514`*^9}, {
   3.732553969245061*^9, 3.7325539788336673`*^9}, {3.732554031127265*^9, 
   3.7325540350313635`*^9}, {3.7325540680817394`*^9, 
   3.7325541988960752`*^9}, {3.7325543698973722`*^9, 3.7325544239019537`*^9}, 
   3.7325545056996326`*^9},ExpressionUUID->"f69eedc8-4af2-4719-9e45-\
5493561575f0"]
},
WindowSize->{1910, 1108},
WindowMargins->{{0, Automatic}, {1043, Automatic}},
FrontEndVersion->"11.2 for Microsoft Windows (64-bit) (2017\:5e7410\:67082\
\:65e5)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 26259, 666, 1120, "Input",ExpressionUUID->"0d1d5bd7-d4f6-4c3c-9aa2-f77dd60c18cb"],
Cell[26820, 688, 1144, 25, 202, "Input",ExpressionUUID->"2d524560-4d39-4a90-9328-283ca6b02590"],
Cell[CellGroupData[{
Cell[27989, 717, 1084, 27, 202, "Input",ExpressionUUID->"fefe1324-e69b-45c6-b88f-fe04e2cd86a4"],
Cell[29076, 746, 198, 3, 97, "Output",ExpressionUUID->"0a53494f-ae36-40a7-8ea7-0a0731cbb1c5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29311, 754, 1746, 37, 202, "Input",ExpressionUUID->"83a94410-a828-4c14-831e-90ca12e3f75a"],
Cell[31060, 793, 371202, 6339, 677, "Output",ExpressionUUID->"c855b533-54cf-483c-9f75-27ae0316adce"]
}, Open  ]],
Cell[402277, 7135, 1023, 22, 202, "Input",ExpressionUUID->"405442e2-488c-4cbb-9e73-14d43634e585"],
Cell[CellGroupData[{
Cell[403325, 7161, 1527, 31, 352, "Input",ExpressionUUID->"cf70d93f-3146-4902-94f8-7fbb4cdcdb06"],
Cell[404855, 7194, 1971, 40, 984, "Output",ExpressionUUID->"3d45c2db-4a12-4dca-bb50-49e5210fe5ce"],
Cell[406829, 7236, 414, 9, 69, "Message",ExpressionUUID->"78acae46-265a-4b67-94bb-fea3d5673951"],
Cell[407246, 7247, 414, 9, 69, "Message",ExpressionUUID->"3e968387-a44f-4774-b97c-2c9444326dee"],
Cell[407663, 7258, 406, 9, 69, "Message",ExpressionUUID->"4dbdfd35-bf7b-4ed7-a2d5-feceedeae812"],
Cell[408072, 7269, 406, 9, 69, "Message",ExpressionUUID->"90a5a2cb-72b7-40d7-9851-96e9e4542cfd"],
Cell[408481, 7280, 408, 9, 69, "Message",ExpressionUUID->"46c4f8b8-6451-4ce9-8a3a-f7201d94b2c5"],
Cell[408892, 7291, 446, 10, 69, "Message",ExpressionUUID->"dd8beff3-1cd4-4e52-94dd-41e46915e18b"]
}, Open  ]],
Cell[409353, 7304, 22962, 534, 671, "Input",ExpressionUUID->"bb173521-eb2f-4de3-aef9-d5dc8104927f"],
Cell[CellGroupData[{
Cell[432340, 7842, 1276, 27, 136, "Input",ExpressionUUID->"97ed1a9d-47e0-4afb-8515-68abc26fceaf"],
Cell[433619, 7871, 576, 12, 156, "Output",ExpressionUUID->"49af714d-85bf-4180-8905-d0e76c3de2b0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[434232, 7888, 1047, 21, 157, "Input",ExpressionUUID->"f2ada299-d683-4bdd-83c2-6d9a5c8f32f4"],
Cell[435282, 7911, 23439, 536, 720, "Output",ExpressionUUID->"a3ff12b8-e498-4386-8cb0-d81ab8507937"]
}, Open  ]],
Cell[CellGroupData[{
Cell[458758, 8452, 1090, 22, 91, "Input",ExpressionUUID->"c56117b1-3a87-4ac2-b298-e5a24af45320"],
Cell[459851, 8476, 432, 9, 156, "Output",ExpressionUUID->"edb4ff9f-f81d-4b77-9d35-0f0e3d8a6ab4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[460320, 8490, 1081, 22, 157, "Input",ExpressionUUID->"b7d9d80f-fb85-4ded-88a1-10a9bdf91a56"],
Cell[461404, 8514, 22623, 535, 683, "Output",ExpressionUUID->"23aca17e-e964-4362-8314-abbcd72fa4f2"]
}, Open  ]],
Cell[484042, 9052, 1527, 31, 352, "Input",ExpressionUUID->"70f5efa7-9c72-4aa4-b4be-7c14610d60e8"],
Cell[CellGroupData[{
Cell[485594, 9087, 4833, 109, 914, "Input",ExpressionUUID->"b5f30a0d-56d8-4974-9750-4bb7b6ebf01c"],
Cell[490430, 9198, 3436, 66, 1432, "Output",ExpressionUUID->"cd803860-60cb-4c34-ad65-d0f4cef142b6"],
Cell[493869, 9266, 2019, 34, 72, "Message",ExpressionUUID->"a382d44e-1b9e-496b-9043-1c091fff3fe1"],
Cell[495891, 9302, 2019, 34, 72, "Message",ExpressionUUID->"ef3d6e42-2c79-42d5-8dd5-332f53a26937"],
Cell[497913, 9338, 2021, 34, 72, "Message",ExpressionUUID->"f33f9770-4aa3-4c01-a5dc-2dbf48266991"],
Cell[499937, 9374, 444, 10, 69, "Message",ExpressionUUID->"f38d942e-4e7c-483d-8d79-0e2e360191cb"]
}, Open  ]],
Cell[500396, 9387, 27007, 674, 1061, "Input",ExpressionUUID->"f69eedc8-4af2-4719-9e45-5493561575f0"]
}
]
*)

